

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Dec 20 06:50:13 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 1.43
    21                           ; Generated 25/07/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC12F1822 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  008C                     	;# 
    81  0091                     	;# 
    82  0092                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  010C                     	;# 
    95  0111                     	;# 
    96  0112                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011A                     	;# 
   103  011B                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  018C                     	;# 
   107  0191                     	;# 
   108  0191                     	;# 
   109  0192                     	;# 
   110  0193                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0194                     	;# 
   114  0195                     	;# 
   115  0196                     	;# 
   116  0199                     	;# 
   117  019A                     	;# 
   118  019B                     	;# 
   119  019B                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019C                     	;# 
   124  019D                     	;# 
   125  019E                     	;# 
   126  019F                     	;# 
   127  020C                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0391                     	;# 
   152  0392                     	;# 
   153  0393                     	;# 
   154  039A                     	;# 
   155  039C                     	;# 
   156  039D                     	;# 
   157  039E                     	;# 
   158  039F                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  008C                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  010C                     	;# 
   211  0111                     	;# 
   212  0112                     	;# 
   213  0115                     	;# 
   214  0116                     	;# 
   215  0117                     	;# 
   216  0118                     	;# 
   217  0119                     	;# 
   218  011A                     	;# 
   219  011B                     	;# 
   220  011D                     	;# 
   221  011D                     	;# 
   222  018C                     	;# 
   223  0191                     	;# 
   224  0191                     	;# 
   225  0192                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0199                     	;# 
   233  019A                     	;# 
   234  019B                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019C                     	;# 
   239  019C                     	;# 
   240  019D                     	;# 
   241  019E                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  0211                     	;# 
   245  0211                     	;# 
   246  0212                     	;# 
   247  0212                     	;# 
   248  0213                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0291                     	;# 
   260  0291                     	;# 
   261  0292                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0295                     	;# 
   266  0296                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  039A                     	;# 
   271  039C                     	;# 
   272  039D                     	;# 
   273  039E                     	;# 
   274  039F                     	;# 
   275  0FE4                     	;# 
   276  0FE5                     	;# 
   277  0FE6                     	;# 
   278  0FE7                     	;# 
   279  0FE8                     	;# 
   280  0FE9                     	;# 
   281  0FEA                     	;# 
   282  0FEB                     	;# 
   283  0FED                     	;# 
   284  0FEE                     	;# 
   285  0FEF                     	;# 
   286                           
   287                           	psect	stringtext1
   288  07A5                     __pstringtext1:	
   289  07A5                     _baudtable:	
   290  07A5  340A               	retlw	10
   291  07A6  341A               	retlw	26
   292  07A7  3404               	retlw	4
   293  07A8  340D               	retlw	13
   294  07A9  3440               	retlw	64
   295  07AA  3403               	retlw	3
   296  07AB  34CF               	retlw	207
   297  07AC  3400               	retlw	0
   298  07AD  34BF               	retlw	191
   299  07AE  3400               	retlw	0
   300  07AF  3467               	retlw	103
   301  07B0  3400               	retlw	0
   302  07B1  3422               	retlw	34
   303  07B2  3400               	retlw	0
   304  07B3  3410               	retlw	16
   305  07B4  3400               	retlw	0
   306  07B5                     __end_of_baudtable:	
   307  000C                     _PORTA	set	12
   308  008C                     _TXIF	set	140
   309  005F                     _GIE	set	95
   310  005E                     _PEIE	set	94
   311  008D                     _RCIF	set	141
   312  008C                     _TRISA	set	140
   313  048D                     _RCIE	set	1165
   314  011D                     _APFCON	set	285
   315  0199                     _RCREG	set	409
   316  019A                     _TXREG	set	410
   317  019C                     _SPBRGH	set	412
   318  019B                     _SPBRGL	set	411
   319  019D                     _RCSTA	set	413
   320  019E                     _TXSTA	set	414
   321  018C                     _ANSELA	set	396
   322  0CEC                     _CREN	set	3308
   323  0CE9                     _OERR	set	3305
   324  0CEF                     _SPEN	set	3311
   325  0CFB                     _BRG16	set	3323
   326  07B5                     STR_1:	
   327  07B5  3448               	retlw	72	;'H'
   328  07B6  3465               	retlw	101	;'e'
   329  07B7  346C               	retlw	108	;'l'
   330  07B8  346C               	retlw	108	;'l'
   331  07B9  346F               	retlw	111	;'o'
   332  07BA  3420               	retlw	32	;' '
   333  07BB  3457               	retlw	87	;'W'
   334  07BC  346F               	retlw	111	;'o'
   335  07BD  3472               	retlw	114	;'r'
   336  07BE  346C               	retlw	108	;'l'
   337  07BF  3464               	retlw	100	;'d'
   338  07C0  340A               	retlw	10
   339  07C1  3400               	retlw	0
   340                           
   341                           	psect	stringtext2
   342  0000                     __pstringtext2:	
   343                           
   344                           ; #config settings
   345  0000                     
   346                           	psect	cinit
   347  07F6                     start_initialization:	
   348  07F6                     __initialization:	
   349                           
   350                           ; Clear objects allocated to COMMON
   351  07F6  01FA               	clrf	__pbssCOMMON& (0+127)
   352  07F7  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   353                           
   354                           ; Clear objects allocated to BANK0
   355  07F8  3020               	movlw	low __pbssBANK0
   356  07F9  0084               	movwf	4
   357  07FA  3000               	movlw	high __pbssBANK0
   358  07FB  0085               	movwf	5
   359  07FC  3020               	movlw	32
   360  07FD  2758               	fcall	clear_ram0
   361  07FE                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364  07FE                     __end_of__initialization:	
   365  07FE  0020               	movlb	0
   366  07FF  2F7C               	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	bssCOMMON
   369  007A                     __pbssCOMMON:	
   370  007A                     _UART_Buffer_outptr:	
   371  007A                     	ds	1
   372  007B                     _UART_Buffer_inptr:	
   373  007B                     	ds	1
   374                           
   375                           	psect	bssBANK0
   376  0020                     __pbssBANK0:	
   377  0020                     _UART_Buffer:	
   378  0020                     	ds	32
   379                           
   380                           	psect	clrtext
   381  0758                     clear_ram0:	
   382                           ;	Called with FSR0 containing the base address, and
   383                           ;	WREG with the size to clear
   384                           
   385  0758  0064               	clrwdt	;clear the watchdog before getting into this loop
   386  0759                     clrloop0:	
   387  0759  0180               	clrf	0	;clear RAM location pointed to by FSR
   388  075A  3101               	addfsr 0,1
   389  075B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   390  075C  2F59               	goto	clrloop0	;have we reached the end yet?
   391  075D  3400               	retlw	0	;all done for this memory range, return
   392                           
   393                           	psect	cstackCOMMON
   394  0070                     __pcstackCOMMON:	
   395  0070                     ?_Basic_Init:	
   396  0070                     ??_Basic_Init:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0070                     ?_UART_InitPort:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ??_UART_InitPort:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_main:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_UART_Transmit:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ??_UART_Transmit:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_putch:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     UART_Transmit@dt:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 1 bytes @ 0x0
   422  0070                     	ds	1
   423  0071                     ?_UART_Init:	
   424  0071                     ??_putch:	
   425                           ; 1 bytes @ 0x1
   426                           
   427  0071                     putch@c:	
   428                           ; 1 bytes @ 0x1
   429                           
   430  0071                     UART_Init@UART_Init_PORT:	
   431                           ; 1 bytes @ 0x1
   432                           
   433                           
   434                           ; 2 bytes @ 0x1
   435  0071                     	ds	1
   436  0072                     ?_printf:	
   437  0072                     printf@f:	
   438                           ; 2 bytes @ 0x2
   439                           
   440                           
   441                           ; 2 bytes @ 0x2
   442  0072                     	ds	1
   443  0073                     UART_Init@brg:	
   444                           
   445                           ; 1 bytes @ 0x3
   446  0073                     	ds	1
   447  0074                     ??_UART_Init:	
   448  0074                     ??_printf:	
   449                           ; 1 bytes @ 0x4
   450                           
   451                           
   452                           ; 1 bytes @ 0x4
   453  0074                     	ds	3
   454  0077                     printf@ap:	
   455                           
   456                           ; 1 bytes @ 0x7
   457  0077                     	ds	1
   458  0078                     printf@c:	
   459                           
   460                           ; 1 bytes @ 0x8
   461  0078                     	ds	1
   462  0079                     ??_main:	
   463                           
   464                           ; 1 bytes @ 0x9
   465  0079                     	ds	1
   466                           
   467                           	psect	maintext
   468  077C                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 9 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B1F/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1
   488 ;;      Params:         0       0       0
   489 ;;      Locals:         0       0       0
   490 ;;      Temps:          1       0       0
   491 ;;      Totals:         1       0       0
   492 ;;Total ram usage:        1 bytes
   493 ;; Hardware stack levels required when called:    3
   494 ;; This function calls:
   495 ;;		_Basic_Init
   496 ;;		_UART_Init
   497 ;;		_printf
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _main
   505  077C                     _main:	
   506                           
   507                           ;main.c: 11: Basic_Init();
   508                           
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   511  077C  2766               	fcall	_Basic_Init
   512                           
   513                           ;main.c: 12: UART_Init(UART_InitPort,BAUD_9600);
   514  077D  306F               	movlw	low _UART_InitPort
   515  077E  00F1               	movwf	UART_Init@UART_Init_PORT
   516  077F  3007               	movlw	high _UART_InitPort
   517  0780  00F2               	movwf	UART_Init@UART_Init_PORT+1
   518  0781  3003               	movlw	3
   519  0782  00F9               	movwf	??_main
   520  0783  0879               	movf	??_main,w
   521  0784  00F3               	movwf	UART_Init@brg
   522  0785  27C2               	fcall	_UART_Init
   523  0786                     l703:	
   524                           ;main.c: 14: while(1)
   525                           
   526                           
   527                           ;main.c: 15: {
   528                           ;main.c: 16: printf("Hello World\n");
   529  0786  30B5               	movlw	low (STR_1| (0+32768))
   530  0787  00F2               	movwf	printf@f
   531  0788  3087               	movlw	high (STR_1| (0+32768))
   532  0789  00F3               	movwf	printf@f+1
   533  078A  278C               	fcall	_printf
   534  078B  2F86               	goto	l703
   535  078C                     __end_of_main:	
   536                           
   537                           	psect	text1
   538  078C                     __ptext1:	
   539 ;; *************** function _printf *****************
   540 ;; Defined at:
   541 ;;		line 464 in file "/opt/microchip/xc8/v1.43/sources/common/doprnt.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  f               2    2[COMMON] PTR const unsigned char 
   544 ;;		 -> STR_1(13), 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  tmpval          4    0        struct .
   547 ;;  cp              2    0        PTR const unsigned char 
   548 ;;  len             2    0        unsigned int 
   549 ;;  val             2    0        unsigned int 
   550 ;;  c               1    8[COMMON] char 
   551 ;;  ap              1    7[COMMON] PTR void [1]
   552 ;;		 -> ?_printf(2), 
   553 ;;  flag            1    0        unsigned char 
   554 ;;  prec            1    0        char 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  2    2[COMMON] int 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1
   564 ;;      Params:         2       0       0
   565 ;;      Locals:         2       0       0
   566 ;;      Temps:          3       0       0
   567 ;;      Totals:         7       0       0
   568 ;;Total ram usage:        7 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    2
   571 ;; This function calls:
   572 ;;		_putch
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _printf
   580  078C                     _printf:	
   581                           
   582                           ;doprnt.c: 466: va_list ap;
   583                           ;doprnt.c: 499: signed char c;
   584                           ;doprnt.c: 506: signed char prec;
   585                           ;doprnt.c: 508: unsigned char flag;
   586                           ;doprnt.c: 523: union {
   587                           ;doprnt.c: 524: unsigned long vd;
   588                           ;doprnt.c: 525: double integ;
   589                           ;doprnt.c: 526: } tmpval;
   590                           ;doprnt.c: 528: unsigned int val;
   591                           ;doprnt.c: 529: unsigned len;
   592                           ;doprnt.c: 530: const char * cp;
   593                           ;doprnt.c: 533: *ap = __va_start();
   594                           
   595                           ;incstack = 0
   596                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   597  078C  3074               	movlw	(low ((?_printf| 0+2)))& (0+255)
   598  078D  00F4               	movwf	??_printf
   599  078E  0874               	movf	??_printf,w
   600  078F  00F7               	movwf	printf@ap
   601  0790                     l697:	
   602                           ;doprnt.c: 543: }
   603                           ;doprnt.c: 1422: {
   604                           
   605                           ;doprnt.c: 542: continue;
   606                           
   607                           ;doprnt.c: 536: while(c = *f++) {
   608                           
   609  0790  0873               	movf	printf@f+1,w
   610  0791  00F5               	movwf	??_printf+1
   611  0792  0872               	movf	printf@f,w
   612  0793  00F4               	movwf	??_printf
   613  0794  0AF2               	incf	printf@f,f
   614  0795  1903               	skipnz
   615  0796  0AF3               	incf	printf@f+1,f
   616  0797  0874               	movf	??_printf,w
   617  0798  0084               	movwf	4
   618  0799  0875               	movf	??_printf+1,w
   619  079A  0085               	movwf	5
   620  079B  0800               	movf	0,w	;code access
   621  079C  00F6               	movwf	??_printf+2
   622  079D  0876               	movf	??_printf+2,w
   623  079E  00F8               	movwf	printf@c
   624  079F  0878               	movf	printf@c,w
   625  07A0  1903               	btfsc	3,2
   626  07A1  0008               	return
   627                           
   628                           ;doprnt.c: 540: {
   629                           ;doprnt.c: 541: (putch(c) );
   630  07A2  0878               	movf	printf@c,w
   631  07A3  2754               	fcall	_putch
   632  07A4  2F90               	goto	l697
   633  07A5                     __end_of_printf:	
   634                           ;doprnt.c: 1469: }
   635                           ;doprnt.c: 1533: }
   636                           ;doprnt.c: 1540: return 0;
   637                           ;	Return value of _printf is never used
   638                           
   639                           
   640                           	psect	text2
   641  0754                     __ptext2:	
   642 ;; *************** function _putch *****************
   643 ;; Defined at:
   644 ;;		line 76 in file "PIC_UART.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  c               1    wreg     unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  c               1    1[COMMON] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1
   658 ;;      Params:         0       0       0
   659 ;;      Locals:         1       0       0
   660 ;;      Temps:          0       0       0
   661 ;;      Totals:         1       0       0
   662 ;;Total ram usage:        1 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    1
   665 ;; This function calls:
   666 ;;		_UART_Transmit
   667 ;; This function is called by:
   668 ;;		_printf
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           
   673                           ;psect for function _putch
   674  0754                     _putch:	
   675                           
   676                           ;incstack = 0
   677                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
   678                           ;putch@c stored from wreg
   679  0754  00F1               	movwf	putch@c
   680                           
   681                           ;PIC_UART.c: 78: UART_Transmit(c);
   682  0755  0871               	movf	putch@c,w
   683  0756  275E               	fcall	_UART_Transmit
   684  0757  0008               	return
   685  0758                     __end_of_putch:	
   686                           
   687                           	psect	text3
   688  075E                     __ptext3:	
   689 ;; *************** function _UART_Transmit *****************
   690 ;; Defined at:
   691 ;;		line 70 in file "PIC_UART.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  dt              1    wreg     unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  dt              1    0[COMMON] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1
   705 ;;      Params:         0       0       0
   706 ;;      Locals:         1       0       0
   707 ;;      Temps:          0       0       0
   708 ;;      Totals:         1       0       0
   709 ;;Total ram usage:        1 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_putch
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _UART_Transmit
   720  075E                     _UART_Transmit:	
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _UART_Transmit: [wreg]
   724                           ;UART_Transmit@dt stored from wreg
   725  075E  00F0               	movwf	UART_Transmit@dt
   726  075F                     l84:	
   727                           ;PIC_UART.c: 72: while (TXIF == 0);
   728                           
   729  075F  0020               	movlb	0	; select bank0
   730  0760  1E11               	btfss	17,4	;volatile
   731  0761  2F5F               	goto	l84
   732                           
   733                           ;PIC_UART.c: 73: TXREG = dt;
   734  0762  0870               	movf	UART_Transmit@dt,w
   735  0763  0023               	movlb	3	; select bank3
   736  0764  009A               	movwf	26	;volatile
   737  0765  0008               	return
   738  0766                     __end_of_UART_Transmit:	
   739                           
   740                           	psect	text4
   741  07C2                     __ptext4:	
   742 ;; *************** function _UART_Init *****************
   743 ;; Defined at:
   744 ;;		line 37 in file "PIC_UART.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  UART_Init_PO    2    1[COMMON] PTR FTN()void 
   747 ;;		 -> UART_InitPort(1), 
   748 ;;  brg             1    3[COMMON] enum E2280
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1
   760 ;;      Params:         3       0       0
   761 ;;      Locals:         0       0       0
   762 ;;      Temps:          4       0       0
   763 ;;      Totals:         7       0       0
   764 ;;Total ram usage:        7 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    1
   767 ;; This function calls:
   768 ;;		_UART_InitPort
   769 ;; This function is called by:
   770 ;;		_main
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774                           
   775                           ;psect for function _UART_Init
   776  07C2                     _UART_Init:	
   777                           
   778                           ;PIC_UART.c: 39: UART_Init_PORT();
   779                           
   780                           ;incstack = 0
   781                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   782  07C2  0872               	movf	UART_Init@UART_Init_PORT+1,w
   783  07C3  008A               	movwf	10
   784  07C4  0871               	movf	UART_Init@UART_Init_PORT,w
   785  07C5  000A               	callw
   786  07C6  3187               	pagesel	$
   787                           
   788                           ;PIC_UART.c: 41: TXSTA = 0x20;
   789  07C7  3020               	movlw	32
   790  07C8  0023               	movlb	3	; select bank3
   791  07C9  009E               	movwf	30	;volatile
   792                           
   793                           ;PIC_UART.c: 42: RCSTA = 0x10;
   794  07CA  3010               	movlw	16
   795  07CB  009D               	movwf	29	;volatile
   796                           
   797                           ;PIC_UART.c: 44: BRG16 = 1;
   798  07CC  159F               	bsf	31,3	;volatile
   799                           
   800                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
   801  07CD  0873               	movf	UART_Init@brg,w
   802  07CE  00F4               	movwf	??_UART_Init
   803  07CF  01F5               	clrf	??_UART_Init+1
   804  07D0  35F4               	lslf	??_UART_Init,f
   805  07D1  0DF5               	rlf	??_UART_Init+1,f
   806  07D2  30A5               	movlw	low (_baudtable| (0+32768))
   807  07D3  0774               	addwf	??_UART_Init,w
   808  07D4  0084               	movwf	4
   809  07D5  3087               	movlw	high (_baudtable| (0+32768))
   810  07D6  3D75               	addwfc	??_UART_Init+1,w
   811  07D7  0085               	movwf	5
   812  07D8  0800               	movf	0,w	;code access
   813  07D9  009B               	movwf	27	;volatile
   814                           
   815                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
   816  07DA  0873               	movf	UART_Init@brg,w
   817  07DB  00F4               	movwf	??_UART_Init
   818  07DC  01F5               	clrf	??_UART_Init+1
   819  07DD  35F4               	lslf	??_UART_Init,f
   820  07DE  0DF5               	rlf	??_UART_Init+1,f
   821  07DF  30A5               	movlw	low (_baudtable| (0+32768))
   822  07E0  0774               	addwf	??_UART_Init,w
   823  07E1  0084               	movwf	4
   824  07E2  3087               	movlw	high (_baudtable| (0+32768))
   825  07E3  3D75               	addwfc	??_UART_Init+1,w
   826  07E4  0085               	movwf	5
   827  07E5  3F00               	moviw [0]fsr0
   828  07E6  00F6               	movwf	??_UART_Init+2
   829  07E7  3F01               	moviw [1]fsr0
   830  07E8  00F7               	movwf	??_UART_Init+3
   831  07E9  0877               	movf	??_UART_Init+3,w
   832  07EA  009C               	movwf	28	;volatile
   833                           
   834                           ;PIC_UART.c: 48: RCIF = 0;
   835  07EB  0020               	movlb	0	; select bank0
   836  07EC  1291               	bcf	17,5	;volatile
   837                           
   838                           ;PIC_UART.c: 49: RCIE = 1;
   839  07ED  0021               	movlb	1	; select bank1
   840  07EE  1691               	bsf	17,5	;volatile
   841                           
   842                           ;PIC_UART.c: 50: PEIE = 1;
   843  07EF  170B               	bsf	11,6	;volatile
   844                           
   845                           ;PIC_UART.c: 51: GIE = 1;
   846  07F0  178B               	bsf	11,7	;volatile
   847                           
   848                           ;PIC_UART.c: 53: SPEN = 1;
   849  07F1  0023               	movlb	3	; select bank3
   850  07F2  179D               	bsf	29,7	;volatile
   851                           
   852                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
   853  07F3  01FB               	clrf	_UART_Buffer_inptr
   854                           
   855                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
   856  07F4  01FA               	clrf	_UART_Buffer_outptr
   857  07F5  0008               	return
   858  07F6                     __end_of_UART_Init:	
   859                           
   860                           	psect	text5
   861  076F                     __ptext5:	
   862 ;; *************** function _UART_InitPort *****************
   863 ;; Defined at:
   864 ;;		line 31 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1
   878 ;;      Params:         0       0       0
   879 ;;      Locals:         0       0       0
   880 ;;      Temps:          1       0       0
   881 ;;      Totals:         1       0       0
   882 ;;Total ram usage:        1 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;;		_UART_Init
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           
   893                           ;psect for function _UART_InitPort
   894  076F                     _UART_InitPort:	
   895                           
   896                           ;main.c: 33: TRISA &= ~(1<<4);
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
   900  076F  30EF               	movlw	239
   901  0770  00F0               	movwf	??_UART_InitPort
   902  0771  0870               	movf	??_UART_InitPort,w
   903  0772  0021               	movlb	1	; select bank1
   904  0773  058C               	andwf	12,f	;volatile
   905                           
   906                           ;main.c: 34: APFCON |= (1<<4);
   907  0774  0022               	movlb	2	; select bank2
   908  0775  161D               	bsf	29,4	;volatile
   909                           
   910                           ;main.c: 35: ANSELA &= ~(1<<4);
   911  0776  30EF               	movlw	239
   912  0777  00F0               	movwf	??_UART_InitPort
   913  0778  0870               	movf	??_UART_InitPort,w
   914  0779  0023               	movlb	3	; select bank3
   915  077A  058C               	andwf	12,f	;volatile
   916  077B  0008               	return
   917  077C                     __end_of_UART_InitPort:	
   918                           
   919                           	psect	text6
   920  0766                     __ptext6:	
   921 ;; *************** function _Basic_Init *****************
   922 ;; Defined at:
   923 ;;		line 20 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		status,2
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1
   937 ;;      Params:         0       0       0
   938 ;;      Locals:         0       0       0
   939 ;;      Temps:          0       0       0
   940 ;;      Totals:         0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _Basic_Init
   952  0766                     _Basic_Init:	
   953                           
   954                           ;main.c: 22: TRISA = 0x00;
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _Basic_Init: [status,2]
   958  0766  0021               	movlb	1	; select bank1
   959  0767  018C               	clrf	12	;volatile
   960                           
   961                           ;main.c: 24: ANSELA = 0x00;
   962  0768  0023               	movlb	3	; select bank3
   963  0769  018C               	clrf	12	;volatile
   964                           
   965                           ;main.c: 26: APFCON = 0x00;
   966  076A  0022               	movlb	2	; select bank2
   967  076B  019D               	clrf	29	;volatile
   968                           
   969                           ;main.c: 28: PORTA = 0x00;
   970  076C  0020               	movlb	0	; select bank0
   971  076D  018C               	clrf	12	;volatile
   972  076E  0008               	return
   973  076F                     __end_of_Basic_Init:	
   974  007E                     btemp	set	126	;btemp
   975  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    16
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0      32
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch
    _putch->_UART_Transmit
    _UART_Init->_UART_InitPort

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     301
                                              9 COMMON     1     1      0
                         _Basic_Init
                          _UART_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     129
                                              2 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      30
                                              1 COMMON     1     1      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (3) _UART_Transmit                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     172
                                              1 COMMON     7     4      3
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _UART_Init
     _UART_InitPort *
   _printf
     _putch
       _UART_Transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Dec 20 06:50:13 2017

            __CFG_CP$OFF 0000                       l84 075F                      l703 0786  
                    l697 0790                      _GIE 005F             __CFG_CPD$OFF 0000  
           __CFG_BORV$LO 0000                      wreg 0009               _Basic_Init 0766  
           __CFG_LVP$OFF 0000                     STR_1 07B5                     _CREN 0CEC  
                   _PEIE 005E                     _RCIE 048D                     _RCIF 008D  
                   _OERR 0CE9                     _SPEN 0CEF                     _TXIF 008C  
           __CFG_WRT$OFF 0000                     _main 077C                     fsr0h 0005  
                   indf0 0000                     fsr0l 0004                     btemp 007E  
                   start 0001            __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000  
          __CFG_PLLEN$ON 0000                    ?_main 0070                    _BRG16 0CFB  
          __CFG_WDTE$OFF 0000                    _RCREG 0199                    _RCSTA 019D  
                  _PORTA 000C                    _TRISA 008C                    _TXREG 019A  
                  _TXSTA 019E           __CFG_FCMEN$OFF 0000       __size_of_UART_Init 0034  
      _UART_Buffer_inptr 007B                    _putch 0754           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07F6             __end_of_main 078C                   ??_main 0079  
            ?_Basic_Init 0070                   _APFCON 011D                   _ANSELA 018C  
                 ?_putch 0070                   _SPBRGH 019C                   _SPBRGL 019B  
         __CFG_PWRTE$OFF 0000        __end_of_UART_Init 07F6       _UART_Buffer_outptr 007A  
                 _printf 078C    __end_of_UART_InitPort 077C                   putch@c 0071  
UART_Init@UART_Init_PORT 0071  __end_of__initialization 07FE    __end_of_UART_Transmit 0766  
         __pcstackCOMMON 0070      __size_of_Basic_Init 0009            __end_of_putch 0758  
                ??_putch 0071               __pbssBANK0 0020               __pmaintext 077C  
                ?_printf 0072        __end_of_baudtable 07B5          __CFG_STVREN$OFF 0000  
                __ptext1 078C                  __ptext2 0754                  __ptext3 075E  
                __ptext4 07C2                  __ptext5 076F                  __ptext6 0766  
        __size_of_printf 0019             ??_Basic_Init 0070                  clrloop0 0759  
   end_of_initialization 07FE                  printf@c 0078                  printf@f 0072  
     __end_of_Basic_Init 076F                _UART_Init 07C2         __CFG_FOSC$INTOSC 0000  
             ?_UART_Init 0071           __end_of_printf 07A5      start_initialization 07F6  
 __size_of_UART_InitPort 000D                 ??_printf 0074              __pbssCOMMON 007A  
              ___latbits 0000   __size_of_UART_Transmit 0008                _baudtable 07A5  
            ??_UART_Init 0074            _UART_InitPort 076F           __size_of_putch 0004  
              clear_ram0 0758            _UART_Transmit 075E           ?_UART_InitPort 0070  
         ?_UART_Transmit 0070             UART_Init@brg 0073            __size_of_main 0010  
        ??_UART_InitPort 0070          ??_UART_Transmit 0070          UART_Transmit@dt 0070  
      __CFG_CLKOUTEN$OFF 0000              _UART_Buffer 0020                 printf@ap 0077  
          __pstringtext1 07A5            __pstringtext2 0000  
