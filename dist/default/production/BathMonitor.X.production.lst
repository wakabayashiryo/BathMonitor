

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Jan 10 15:07:31 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.43
    39                           ; Generated 25/07/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC12F1822 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011D                     	;# 
   124  018C                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  008C                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0115                     	;# 
   232  0116                     	;# 
   233  0117                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011D                     	;# 
   239  011D                     	;# 
   240  018C                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0291                     	;# 
   278  0291                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0294                     	;# 
   282  0295                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  008C                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  010C                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011A                     	;# 
   353  011B                     	;# 
   354  011D                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  020C                     	;# 
   378  0211                     	;# 
   379  0211                     	;# 
   380  0212                     	;# 
   381  0212                     	;# 
   382  0213                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0214                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0216                     	;# 
   390  0216                     	;# 
   391  0217                     	;# 
   392  0217                     	;# 
   393  0291                     	;# 
   394  0291                     	;# 
   395  0292                     	;# 
   396  0293                     	;# 
   397  0294                     	;# 
   398  0295                     	;# 
   399  0295                     	;# 
   400  0296                     	;# 
   401  0391                     	;# 
   402  0392                     	;# 
   403  0393                     	;# 
   404  039A                     	;# 
   405  039C                     	;# 
   406  039D                     	;# 
   407  039E                     	;# 
   408  039F                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  008C                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  011D                     	;# 
   472  018C                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  0212                     	;# 
   497  0212                     	;# 
   498  0213                     	;# 
   499  0213                     	;# 
   500  0214                     	;# 
   501  0214                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0216                     	;# 
   506  0216                     	;# 
   507  0217                     	;# 
   508  0217                     	;# 
   509  0291                     	;# 
   510  0291                     	;# 
   511  0292                     	;# 
   512  0293                     	;# 
   513  0294                     	;# 
   514  0295                     	;# 
   515  0295                     	;# 
   516  0296                     	;# 
   517  0391                     	;# 
   518  0392                     	;# 
   519  0393                     	;# 
   520  039A                     	;# 
   521  039C                     	;# 
   522  039D                     	;# 
   523  039E                     	;# 
   524  039F                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  008C                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0095                     	;# 
   566  0096                     	;# 
   567  0097                     	;# 
   568  0098                     	;# 
   569  0099                     	;# 
   570  009A                     	;# 
   571  009B                     	;# 
   572  009B                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  010C                     	;# 
   577  0111                     	;# 
   578  0112                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011A                     	;# 
   585  011B                     	;# 
   586  011D                     	;# 
   587  011D                     	;# 
   588  018C                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  019A                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019C                     	;# 
   605  019C                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  020C                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0294                     	;# 
   630  0295                     	;# 
   631  0295                     	;# 
   632  0296                     	;# 
   633  0391                     	;# 
   634  0392                     	;# 
   635  0393                     	;# 
   636  039A                     	;# 
   637  039C                     	;# 
   638  039D                     	;# 
   639  039E                     	;# 
   640  039F                     	;# 
   641  0FE4                     	;# 
   642  0FE5                     	;# 
   643  0FE6                     	;# 
   644  0FE7                     	;# 
   645  0FE8                     	;# 
   646  0FE9                     	;# 
   647  0FEA                     	;# 
   648  0FEB                     	;# 
   649  0FED                     	;# 
   650  0FEE                     	;# 
   651  0FEF                     	;# 
   652                           
   653                           	psect	stringtext1
   654  0499                     __pstringtext1:	
   655  0499                     _baudtable:	
   656  0499  340A               	retlw	10
   657  049A  341A               	retlw	26
   658  049B  3404               	retlw	4
   659  049C  340D               	retlw	13
   660  049D  3440               	retlw	64
   661  049E  3403               	retlw	3
   662  049F  34CF               	retlw	207
   663  04A0  3400               	retlw	0
   664  04A1  34BF               	retlw	191
   665  04A2  3400               	retlw	0
   666  04A3  3467               	retlw	103
   667  04A4  3400               	retlw	0
   668  04A5  3422               	retlw	34
   669  04A6  3400               	retlw	0
   670  04A7  3410               	retlw	16
   671  04A8  3400               	retlw	0
   672  04A9                     __end_of_baudtable:	
   673                           
   674                           	psect	stringtext2
   675  0480                     __pstringtext2:	
   676  0480                     _hexpowers:	
   677  0480  3401               	retlw	1
   678  0481  3400               	retlw	0
   679  0482  3410               	retlw	16
   680  0483  3400               	retlw	0
   681  0484  3400               	retlw	0
   682  0485  3401               	retlw	1
   683  0486  3400               	retlw	0
   684  0487  3410               	retlw	16
   685  0488                     __end_of_hexpowers:	
   686  000C                     _PORTA	set	12
   687  0093                     _BCL1IF	set	147
   688  008B                     _SSP1IF	set	139
   689  008C                     _TXIF	set	140
   690  005F                     _GIE	set	95
   691  005E                     _PEIE	set	94
   692  008D                     _RCIF	set	141
   693  008C                     _TRISA	set	140
   694  0099                     _OSCCON	set	153
   695  0493                     _BCL1IE	set	1171
   696  048B                     _SSP1IE	set	1163
   697  048D                     _RCIE	set	1165
   698  011D                     _APFCON	set	285
   699  0199                     _RCREG	set	409
   700  019A                     _TXREG	set	410
   701  019C                     _SPBRGH	set	412
   702  019B                     _SPBRGL	set	411
   703  019D                     _RCSTA	set	413
   704  019E                     _TXSTA	set	414
   705  018C                     _ANSELA	set	396
   706  0CEC                     _CREN	set	3308
   707  0CE9                     _OERR	set	3305
   708  0CEF                     _SPEN	set	3311
   709  0CFB                     _BRG16	set	3323
   710  0214                     _SSPSTATbits	set	532
   711  0211                     _SSPBUF	set	529
   712  0216                     _SSPCON2	set	534
   713  0213                     _SSPMSK	set	531
   714  0216                     _SSPCON2bits	set	534
   715  0215                     _SSPCON1bits	set	533
   716  0212                     _SSPADD	set	530
   717  0214                     _SSPSTAT	set	532
   718  0215                     _SSPCON1	set	533
   719  020C                     _WPUA	set	524
   720  0488                     STR_2:	
   721  0488  3430               	retlw	48	;'0'
   722  0489  3431               	retlw	49	;'1'
   723  048A  3432               	retlw	50	;'2'
   724  048B  3433               	retlw	51	;'3'
   725  048C  3434               	retlw	52	;'4'
   726  048D  3435               	retlw	53	;'5'
   727  048E  3436               	retlw	54	;'6'
   728  048F  3437               	retlw	55	;'7'
   729  0490  3438               	retlw	56	;'8'
   730  0491  3439               	retlw	57	;'9'
   731  0492  3461               	retlw	97	;'a'
   732  0493  3462               	retlw	98	;'b'
   733  0494  3463               	retlw	99	;'c'
   734  0495  3464               	retlw	100	;'d'
   735  0496  3465               	retlw	101	;'e'
   736  0497  3466               	retlw	102	;'f'
   737  0498  3400               	retlw	0
   738                           
   739                           	psect	stringtext3
   740  04A9                     __pstringtext3:	
   741  04A9                     STR_1:	
   742  04A9  3425               	retlw	37	;'%'
   743  04AA  3478               	retlw	120	;'x'
   744  04AB  3420               	retlw	32	;' '
   745  04AC  3425               	retlw	37	;'%'
   746  04AD  3478               	retlw	120	;'x'
   747  04AE  3420               	retlw	32	;' '
   748  04AF  3425               	retlw	37	;'%'
   749  04B0  3478               	retlw	120	;'x'
   750  04B1  3420               	retlw	32	;' '
   751  04B2  3425               	retlw	37	;'%'
   752  04B3  3478               	retlw	120	;'x'
   753  04B4  3420               	retlw	32	;' '
   754  04B5  340A               	retlw	10
   755  04B6  3400               	retlw	0
   756                           
   757                           	psect	stringtext4
   758  0000                     __pstringtext4:	
   759                           
   760                           ; #config settings
   761  0000                     
   762                           	psect	cinit
   763  0011                     start_initialization:	
   764  0011                     __initialization:	
   765                           
   766                           ; Clear objects allocated to COMMON
   767  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   768  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   769                           
   770                           ; Clear objects allocated to BANK0
   771  0013  3053               	movlw	low __pbssBANK0
   772  0014  0084               	movwf	4
   773  0015  3000               	movlw	high __pbssBANK0
   774  0016  0085               	movwf	5
   775  0017  301B               	movlw	27
   776  0018  24E7               	fcall	clear_ram0
   777  0019                     end_of_initialization:	
   778                           ;End of C runtime variable initialization code
   779                           
   780  0019                     __end_of__initialization:	
   781  0019  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   782  001A  0020               	movlb	0
   783  001B  2953               	ljmp	_main	;jump to C main() function
   784                           
   785                           	psect	bssCOMMON
   786  0078                     __pbssCOMMON:	
   787  0078                     _UART_Buffer_outptr:	
   788  0078                     	ds	1
   789  0079                     _UART_Buffer_inptr:	
   790  0079                     	ds	1
   791                           
   792                           	psect	bssBANK0
   793  0053                     __pbssBANK0:	
   794  0053                     _UART_Buffer:	
   795  0053                     	ds	8
   796  005B                     _I2C1_Config:	
   797  005B                     	ds	19
   798                           
   799                           	psect	clrtext
   800  04E7                     clear_ram0:	
   801                           ;	Called with FSR0 containing the base address, and
   802                           ;	WREG with the size to clear
   803                           
   804  04E7  0064               	clrwdt	;clear the watchdog before getting into this loop
   805  04E8                     clrloop0:	
   806  04E8  0180               	clrf	0	;clear RAM location pointed to by FSR
   807  04E9  3101               	addfsr 0,1
   808  04EA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   809  04EB  2CE8               	goto	clrloop0	;have we reached the end yet?
   810  04EC  3400               	retlw	0	;all done for this memory range, return
   811                           
   812                           	psect	cstackCOMMON
   813  0070                     __pcstackCOMMON:	
   814  0070                     ?_Basic_Init:	
   815  0070                     ?_UART_InitPort:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_I2C_InitPort:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_MPU6050_Init:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_UART_Interrupt:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ??_UART_Interrupt:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_I2C_Interrupt:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_I2C1_Interrupt:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ??_I2C1_Interrupt:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_main:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_Handle:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_UART_Transmit:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_putch:	
   849                           ; 1 bytes @ 0x0
   850                           
   851                           
   852                           ; 1 bytes @ 0x0
   853  0070                     	ds	1
   854  0071                     ??_I2C_Interrupt:	
   855  0071                     UART_Interrupt@dt:	
   856                           ; 1 bytes @ 0x1
   857                           
   858                           
   859                           ; 1 bytes @ 0x1
   860  0071                     	ds	1
   861  0072                     UART_Interrupt@x:	
   862                           
   863                           ; 1 bytes @ 0x2
   864  0072                     	ds	1
   865  0073                     ??_Handle:	
   866                           
   867                           ; 1 bytes @ 0x3
   868  0073                     	ds	1
   869  0074                     ??_Basic_Init:	
   870  0074                     ??_UART_InitPort:	
   871                           ; 1 bytes @ 0x4
   872                           
   873  0074                     ??_I2C_InitPort:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0074                     ?_I2C1_Transmit:	
   877                           ; 1 bytes @ 0x4
   878                           
   879  0074                     ?_I2C1_Receive:	
   880                           ; 1 bytes @ 0x4
   881                           
   882  0074                     ??_UART_Transmit:	
   883                           ; 1 bytes @ 0x4
   884                           
   885  0074                     ?___lwdiv:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0074                     UART_Transmit@dt:	
   889                           ; 2 bytes @ 0x4
   890                           
   891  0074                     I2C1_Transmit@pData:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     I2C1_Receive@pData:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     ___lwdiv@divisor:	
   898                           ; 1 bytes @ 0x4
   899                           
   900                           
   901                           ; 2 bytes @ 0x4
   902  0074                     	ds	1
   903  0075                     ?_UART_Init:	
   904  0075                     ??_I2C1_Init:	
   905                           ; 1 bytes @ 0x5
   906                           
   907  0075                     ??_putch:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     putch@c:	
   911                           ; 1 bytes @ 0x5
   912                           
   913  0075                     I2C1_Transmit@size:	
   914                           ; 1 bytes @ 0x5
   915                           
   916  0075                     I2C1_Receive@size:	
   917                           ; 1 bytes @ 0x5
   918                           
   919  0075                     UART_Init@UART_Init_PORT:	
   920                           ; 1 bytes @ 0x5
   921                           
   922                           
   923                           ; 2 bytes @ 0x5
   924  0075                     	ds	1
   925  0076                     ??_I2C1_Transmit:	
   926  0076                     ??_I2C1_Receive:	
   927                           ; 1 bytes @ 0x6
   928                           
   929  0076                     ___lwdiv@dividend:	
   930                           ; 1 bytes @ 0x6
   931                           
   932                           
   933                           ; 2 bytes @ 0x6
   934  0076                     	ds	1
   935  0077                     UART_Init@brg:	
   936                           
   937                           ; 1 bytes @ 0x7
   938  0077                     	ds	1
   939                           
   940                           	psect	cstackBANK0
   941  0020                     __pcstackBANK0:	
   942  0020                     ??_UART_Init:	
   943  0020                     ?_I2C1_Init:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0020                     ??___lwdiv:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0020                     I2C1_Transmit@address:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0020                     I2C1_Receive@address:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0020                     I2C1_Init@I2C1_Init_PORT:	
   956                           ; 1 bytes @ 0x0
   957                           
   958                           
   959                           ; 2 bytes @ 0x0
   960  0020                     	ds	1
   961  0021                     I2C1_Transmit@i:	
   962  0021                     I2C1_Receive@result:	
   963                           ; 1 bytes @ 0x1
   964                           
   965  0021                     ___lwdiv@counter:	
   966                           ; 1 bytes @ 0x1
   967                           
   968                           
   969                           ; 1 bytes @ 0x1
   970  0021                     	ds	1
   971  0022                     I2C1_Init@address:	
   972  0022                     I2C1_Transmit@i_450:	
   973                           ; 1 bytes @ 0x2
   974                           
   975  0022                     I2C1_Receive@i:	
   976                           ; 1 bytes @ 0x2
   977                           
   978  0022                     ___lwdiv@quotient:	
   979                           ; 1 bytes @ 0x2
   980                           
   981                           
   982                           ; 2 bytes @ 0x2
   983  0022                     	ds	1
   984  0023                     I2C1_Init@mode:	
   985  0023                     I2C1_Transmit@result:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0023                     I2C1_Receive@i_457:	
   989                           ; 1 bytes @ 0x3
   990                           
   991                           
   992                           ; 1 bytes @ 0x3
   993  0023                     	ds	1
   994  0024                     ?_I2C_Transmit:	
   995  0024                     ?_I2C_Receive:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0024                     ?_printf:	
   999                           ; 1 bytes @ 0x4
  1000                           
  1001  0024                     I2C_Transmit@address:	
  1002                           ; 2 bytes @ 0x4
  1003                           
  1004  0024                     I2C_Receive@address:	
  1005                           ; 1 bytes @ 0x4
  1006                           
  1007  0024                     I2C1_Init@Speed:	
  1008                           ; 1 bytes @ 0x4
  1009                           
  1010  0024                     printf@f:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013                           
  1014                           ; 2 bytes @ 0x4
  1015  0024                     	ds	1
  1016  0025                     I2C_Transmit@pData:	
  1017  0025                     I2C_Receive@pData:	
  1018                           ; 1 bytes @ 0x5
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x5
  1022  0025                     	ds	1
  1023  0026                     I2C_Transmit@size:	
  1024  0026                     I2C_Receive@size:	
  1025                           ; 1 bytes @ 0x6
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x6
  1029  0026                     	ds	1
  1030  0027                     ??_I2C_Transmit:	
  1031  0027                     ??_I2C_Receive:	
  1032                           ; 1 bytes @ 0x7
  1033                           
  1034                           
  1035                           ; 1 bytes @ 0x7
  1036  0027                     	ds	3
  1037  002A                     I2C_Transmit@I2Cx:	
  1038  002A                     I2C_Receive@I2Cx:	
  1039                           ; 1 bytes @ 0xA
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0xA
  1043  002A                     	ds	1
  1044  002B                     I2C_Transmit@result:	
  1045  002B                     I2C_Receive@result:	
  1046                           ; 1 bytes @ 0xB
  1047                           
  1048                           
  1049                           ; 1 bytes @ 0xB
  1050  002B                     	ds	1
  1051  002C                     ?_MPU6050_Read_MultiData:	
  1052  002C                     ?_MPU6050_Write_Data:	
  1053                           ; 1 bytes @ 0xC
  1054                           
  1055  002C                     ?_MPU6050_Read_Data:	
  1056                           ; 1 bytes @ 0xC
  1057                           
  1058  002C                     MPU6050_Write_Data@pData:	
  1059                           ; 1 bytes @ 0xC
  1060                           
  1061  002C                     MPU6050_Read_Data@pData:	
  1062                           ; 1 bytes @ 0xC
  1063                           
  1064  002C                     MPU6050_Read_MultiData@pData:	
  1065                           ; 1 bytes @ 0xC
  1066                           
  1067                           
  1068                           ; 1 bytes @ 0xC
  1069  002C                     	ds	1
  1070  002D                     ??_MPU6050_Write_Data:	
  1071  002D                     ??_MPU6050_Read_Data:	
  1072                           ; 1 bytes @ 0xD
  1073                           
  1074  002D                     MPU6050_Read_MultiData@size:	
  1075                           ; 1 bytes @ 0xD
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0xD
  1079  002D                     	ds	1
  1080  002E                     ??_MPU6050_Read_MultiData:	
  1081  002E                     ??_printf:	
  1082                           ; 1 bytes @ 0xE
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0xE
  1086  002E                     	ds	2
  1087  0030                     MPU6050_Write_Data@reg:	
  1088  0030                     MPU6050_Read_Data@reg:	
  1089                           ; 1 bytes @ 0x10
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0x10
  1093  0030                     	ds	1
  1094  0031                     MPU6050_Write_Data@result:	
  1095  0031                     MPU6050_Read_Data@result:	
  1096                           ; 1 bytes @ 0x11
  1097                           
  1098                           
  1099                           ; 1 bytes @ 0x11
  1100  0031                     	ds	1
  1101  0032                     ??_MPU6050_Init:	
  1102  0032                     MPU6050_Read_MultiData@reg:	
  1103                           ; 1 bytes @ 0x12
  1104                           
  1105  0032                     printf@flag:	
  1106                           ; 1 bytes @ 0x12
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x12
  1110  0032                     	ds	1
  1111  0033                     MPU6050_Read_MultiData@result:	
  1112  0033                     printf@idx:	
  1113                           ; 1 bytes @ 0x13
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x13
  1117  0033                     	ds	1
  1118  0034                     MPU6050_Init@result:	
  1119  0034                     printf@ap:	
  1120                           ; 1 bytes @ 0x14
  1121                           
  1122                           
  1123                           ; 1 bytes @ 0x14
  1124  0034                     	ds	1
  1125  0035                     MPU6050_Init@addr:	
  1126  0035                     printf@val:	
  1127                           ; 1 bytes @ 0x15
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0x15
  1131  0035                     	ds	1
  1132  0036                     MPU6050_Init@data:	
  1133                           
  1134                           ; 1 bytes @ 0x16
  1135  0036                     	ds	1
  1136  0037                     printf@prec:	
  1137                           
  1138                           ; 1 bytes @ 0x17
  1139  0037                     	ds	1
  1140  0038                     printf@c:	
  1141                           
  1142                           ; 1 bytes @ 0x18
  1143  0038                     	ds	1
  1144  0039                     ??_main:	
  1145                           
  1146                           ; 1 bytes @ 0x19
  1147  0039                     	ds	4
  1148  003D                     main@result:	
  1149                           
  1150                           ; 1 bytes @ 0x1D
  1151  003D                     	ds	1
  1152  003E                     main@swap:	
  1153                           
  1154                           ; 1 bytes @ 0x1E
  1155  003E                     	ds	1
  1156  003F                     main@swap_163:	
  1157                           
  1158                           ; 1 bytes @ 0x1F
  1159  003F                     	ds	1
  1160  0040                     main@swap_164:	
  1161                           
  1162                           ; 1 bytes @ 0x20
  1163  0040                     	ds	1
  1164  0041                     main@swap_165:	
  1165                           
  1166                           ; 1 bytes @ 0x21
  1167  0041                     	ds	1
  1168  0042                     main@swap_166:	
  1169                           
  1170                           ; 1 bytes @ 0x22
  1171  0042                     	ds	1
  1172  0043                     main@swap_167:	
  1173                           
  1174                           ; 1 bytes @ 0x23
  1175  0043                     	ds	1
  1176  0044                     main@swap_168:	
  1177                           
  1178                           ; 1 bytes @ 0x24
  1179  0044                     	ds	1
  1180  0045                     main@accel_t_gyro:	
  1181                           
  1182                           ; 14 bytes @ 0x25
  1183  0045                     	ds	14
  1184                           
  1185                           	psect	maintext
  1186  0153                     __pmaintext:	
  1187 ;;
  1188 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1189 ;;
  1190 ;; *************** function _main *****************
  1191 ;; Defined at:
  1192 ;;		line 11 in file "main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  swap            1   36[BANK0 ] unsigned char 
  1197 ;;  swap            1   35[BANK0 ] unsigned char 
  1198 ;;  swap            1   34[BANK0 ] unsigned char 
  1199 ;;  swap            1   33[BANK0 ] unsigned char 
  1200 ;;  swap            1   32[BANK0 ] unsigned char 
  1201 ;;  swap            1   31[BANK0 ] unsigned char 
  1202 ;;  swap            1   30[BANK0 ] unsigned char 
  1203 ;;  accel_t_gyro   14   37[BANK0 ] struct .
  1204 ;;  result          1   29[BANK0 ] char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : B1F/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1
  1214 ;;      Params:         0       0       0
  1215 ;;      Locals:         0      22       0
  1216 ;;      Temps:          0       4       0
  1217 ;;      Totals:         0      26       0
  1218 ;;Total ram usage:       26 bytes
  1219 ;; Hardware stack levels required when called:    7
  1220 ;; This function calls:
  1221 ;;		_Basic_Init
  1222 ;;		_I2C1_Init
  1223 ;;		_MPU6050_Init
  1224 ;;		_MPU6050_Read_MultiData
  1225 ;;		_UART_Init
  1226 ;;		_printf
  1227 ;; This function is called by:
  1228 ;;		Startup code after reset
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _main
  1234  0153                     _main:	
  1235                           
  1236                           ;main.c: 13: accel_t_gyro_union accel_t_gyro;
  1237                           ;main.c: 15: Basic_Init();
  1238                           
  1239                           ;incstack = 0
  1240                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1241  0153  24D2               	fcall	_Basic_Init
  1242                           
  1243                           ;main.c: 16: UART_Init(UART_InitPort,BAUD_9600);
  1244  0154  30B7               	movlw	low _UART_InitPort
  1245  0155  00F5               	movwf	UART_Init@UART_Init_PORT
  1246  0156  3004               	movlw	high _UART_InitPort
  1247  0157  00F6               	movwf	UART_Init@UART_Init_PORT+1
  1248  0158  3003               	movlw	3
  1249  0159  0020               	movlb	0	; select bank0
  1250  015A  00B9               	movwf	??_main
  1251  015B  0839               	movf	??_main,w
  1252  015C  00F7               	movwf	UART_Init@brg
  1253  015D  231A               	fcall	_UART_Init
  1254                           
  1255                           ;main.c: 18: I2C1_Init(I2C_InitPort,0x00,I2C_MODE_MASTER,I2C_SPEED_HIGH);
  1256  015E  30C5               	movlw	low _I2C_InitPort
  1257  015F  0020               	movlb	0	; select bank0
  1258  0160  00A0               	movwf	I2C1_Init@I2C1_Init_PORT
  1259  0161  3004               	movlw	high _I2C_InitPort
  1260  0162  00A1               	movwf	I2C1_Init@I2C1_Init_PORT+1
  1261  0163  01A2               	clrf	I2C1_Init@address
  1262  0164  01A3               	clrf	I2C1_Init@mode
  1263  0165  01A4               	clrf	I2C1_Init@Speed
  1264  0166  0AA4               	incf	I2C1_Init@Speed,f
  1265  0167  2271               	fcall	_I2C1_Init
  1266                           
  1267                           ;main.c: 20: MPU6050_Init();
  1268  0168  2387               	fcall	_MPU6050_Init
  1269  0169                     l1967:	
  1270                           ;main.c: 22: int8_t result;
  1271                           ;main.c: 23: while(1)
  1272                           
  1273                           
  1274                           ;main.c: 24: {
  1275                           ;main.c: 25: result = MPU6050_Read_MultiData(0x3B,(uint8_t *)&accel_t_gyro,sizeof(accel_
      +                          t_gyro));
  1276  0169  3045               	movlw	(low (main@accel_t_gyro| 0))& (0+255)
  1277  016A  0020               	movlb	0	; select bank0
  1278  016B  00B9               	movwf	??_main
  1279  016C  0839               	movf	??_main,w
  1280  016D  00AC               	movwf	MPU6050_Read_MultiData@pData
  1281  016E  300E               	movlw	14
  1282  016F  00BA               	movwf	??_main+1
  1283  0170  083A               	movf	??_main+1,w
  1284  0171  00AD               	movwf	MPU6050_Read_MultiData@size
  1285  0172  303B               	movlw	59
  1286  0173  23B2               	fcall	_MPU6050_Read_MultiData
  1287  0174  0020               	movlb	0	; select bank0
  1288  0175  00BB               	movwf	??_main+2
  1289  0176  083B               	movf	??_main+2,w
  1290  0177  00BD               	movwf	main@result
  1291                           
  1292                           ;main.c: 26: {uint8_t swap = accel_t_gyro.reg.x_accel_h; accel_t_gyro.reg.x_accel_h = ac
      +                          cel_t_gyro.reg.x_accel_l; accel_t_gyro.reg.x_accel_l = swap;};
  1293  0178  0845               	movf	main@accel_t_gyro,w
  1294  0179  00B9               	movwf	??_main
  1295  017A  0839               	movf	??_main,w
  1296  017B  00BE               	movwf	main@swap
  1297  017C  0846               	movf	main@accel_t_gyro+1,w
  1298  017D  00B9               	movwf	??_main
  1299  017E  0839               	movf	??_main,w
  1300  017F  00C5               	movwf	main@accel_t_gyro
  1301  0180  083E               	movf	main@swap,w
  1302  0181  00B9               	movwf	??_main
  1303  0182  0839               	movf	??_main,w
  1304  0183  00C6               	movwf	main@accel_t_gyro+1
  1305                           
  1306                           ;main.c: 27: {uint8_t swap = accel_t_gyro.reg.y_accel_h; accel_t_gyro.reg.y_accel_h = ac
      +                          cel_t_gyro.reg.y_accel_l; accel_t_gyro.reg.y_accel_l = swap;};
  1307  0184  0847               	movf	main@accel_t_gyro+2,w
  1308  0185  00B9               	movwf	??_main
  1309  0186  0839               	movf	??_main,w
  1310  0187  00BF               	movwf	main@swap_163
  1311  0188  0848               	movf	main@accel_t_gyro+3,w
  1312  0189  00B9               	movwf	??_main
  1313  018A  0839               	movf	??_main,w
  1314  018B  00C7               	movwf	main@accel_t_gyro+2
  1315  018C  083F               	movf	main@swap_163,w
  1316  018D  00B9               	movwf	??_main
  1317  018E  0839               	movf	??_main,w
  1318  018F  00C8               	movwf	main@accel_t_gyro+3
  1319                           
  1320                           ;main.c: 28: {uint8_t swap = accel_t_gyro.reg.z_accel_h; accel_t_gyro.reg.z_accel_h = ac
      +                          cel_t_gyro.reg.z_accel_l; accel_t_gyro.reg.z_accel_l = swap;};
  1321  0190  0849               	movf	main@accel_t_gyro+4,w
  1322  0191  00B9               	movwf	??_main
  1323  0192  0839               	movf	??_main,w
  1324  0193  00C0               	movwf	main@swap_164
  1325  0194  084A               	movf	main@accel_t_gyro+5,w
  1326  0195  00B9               	movwf	??_main
  1327  0196  0839               	movf	??_main,w
  1328  0197  00C9               	movwf	main@accel_t_gyro+4
  1329  0198  0840               	movf	main@swap_164,w
  1330  0199  00B9               	movwf	??_main
  1331  019A  0839               	movf	??_main,w
  1332  019B  00CA               	movwf	main@accel_t_gyro+5
  1333                           
  1334                           ;main.c: 29: {uint8_t swap = accel_t_gyro.reg.t_h; accel_t_gyro.reg.t_h = accel_t_gyro.r
      +                          eg.t_l; accel_t_gyro.reg.t_l = swap;};
  1335  019C  084B               	movf	main@accel_t_gyro+6,w
  1336  019D  00B9               	movwf	??_main
  1337  019E  0839               	movf	??_main,w
  1338  019F  00C1               	movwf	main@swap_165
  1339  01A0  084C               	movf	main@accel_t_gyro+7,w
  1340  01A1  00B9               	movwf	??_main
  1341  01A2  0839               	movf	??_main,w
  1342  01A3  00CB               	movwf	main@accel_t_gyro+6
  1343  01A4  0841               	movf	main@swap_165,w
  1344  01A5  00B9               	movwf	??_main
  1345  01A6  0839               	movf	??_main,w
  1346  01A7  00CC               	movwf	main@accel_t_gyro+7
  1347                           
  1348                           ;main.c: 30: {uint8_t swap = accel_t_gyro.reg.x_gyro_h; accel_t_gyro.reg.x_gyro_h = acce
      +                          l_t_gyro.reg.x_gyro_l; accel_t_gyro.reg.x_gyro_l = swap;};
  1349  01A8  084D               	movf	main@accel_t_gyro+8,w
  1350  01A9  00B9               	movwf	??_main
  1351  01AA  0839               	movf	??_main,w
  1352  01AB  00C2               	movwf	main@swap_166
  1353  01AC  084E               	movf	main@accel_t_gyro+9,w
  1354  01AD  00B9               	movwf	??_main
  1355  01AE  0839               	movf	??_main,w
  1356  01AF  00CD               	movwf	main@accel_t_gyro+8
  1357  01B0  0842               	movf	main@swap_166,w
  1358  01B1  00B9               	movwf	??_main
  1359  01B2  0839               	movf	??_main,w
  1360  01B3  00CE               	movwf	main@accel_t_gyro+9
  1361                           
  1362                           ;main.c: 31: {uint8_t swap = accel_t_gyro.reg.y_gyro_h; accel_t_gyro.reg.y_gyro_h = acce
      +                          l_t_gyro.reg.y_gyro_l; accel_t_gyro.reg.y_gyro_l = swap;};
  1363  01B4  084F               	movf	main@accel_t_gyro+10,w
  1364  01B5  00B9               	movwf	??_main
  1365  01B6  0839               	movf	??_main,w
  1366  01B7  00C3               	movwf	main@swap_167
  1367  01B8  0850               	movf	main@accel_t_gyro+11,w
  1368  01B9  00B9               	movwf	??_main
  1369  01BA  0839               	movf	??_main,w
  1370  01BB  00CF               	movwf	main@accel_t_gyro+10
  1371  01BC  0843               	movf	main@swap_167,w
  1372  01BD  00B9               	movwf	??_main
  1373  01BE  0839               	movf	??_main,w
  1374  01BF  00D0               	movwf	main@accel_t_gyro+11
  1375                           
  1376                           ;main.c: 32: {uint8_t swap = accel_t_gyro.reg.z_gyro_h; accel_t_gyro.reg.z_gyro_h = acce
      +                          l_t_gyro.reg.z_gyro_l; accel_t_gyro.reg.z_gyro_l = swap;};
  1377  01C0  0851               	movf	main@accel_t_gyro+12,w
  1378  01C1  00B9               	movwf	??_main
  1379  01C2  0839               	movf	??_main,w
  1380  01C3  00C4               	movwf	main@swap_168
  1381  01C4  0852               	movf	main@accel_t_gyro+13,w
  1382  01C5  00B9               	movwf	??_main
  1383  01C6  0839               	movf	??_main,w
  1384  01C7  00D1               	movwf	main@accel_t_gyro+12
  1385  01C8  0844               	movf	main@swap_168,w
  1386  01C9  00B9               	movwf	??_main
  1387  01CA  0839               	movf	??_main,w
  1388  01CB  00D2               	movwf	main@accel_t_gyro+13
  1389                           
  1390                           ;main.c: 33: printf("%x %x %x %x \n",0x56,accel_t_gyro.value.x_accel,accel_t_gyro.reg.x_
      +                          accel_h, accel_t_gyro.reg.x_accel_l);
  1391  01CC  30A9               	movlw	low (STR_1| (0+32768))
  1392  01CD  00A4               	movwf	printf@f
  1393  01CE  3084               	movlw	high (STR_1| (0+32768))
  1394  01CF  00A5               	movwf	printf@f+1
  1395  01D0  3056               	movlw	86
  1396  01D1  00A6               	movwf	?_printf+2
  1397  01D2  3000               	movlw	0
  1398  01D3  00A7               	movwf	?_printf+3
  1399  01D4  0846               	movf	main@accel_t_gyro+1,w
  1400  01D5  00A9               	movwf	?_printf+5
  1401  01D6  0845               	movf	main@accel_t_gyro,w
  1402  01D7  00A8               	movwf	?_printf+4
  1403  01D8  0845               	movf	main@accel_t_gyro,w
  1404  01D9  00B9               	movwf	??_main
  1405  01DA  01BA               	clrf	??_main+1
  1406  01DB  0839               	movf	??_main,w
  1407  01DC  00AA               	movwf	?_printf+6
  1408  01DD  083A               	movf	??_main+1,w
  1409  01DE  00AB               	movwf	?_printf+7
  1410  01DF  0846               	movf	main@accel_t_gyro+1,w
  1411  01E0  00BB               	movwf	??_main+2
  1412  01E1  01BC               	clrf	??_main+3
  1413  01E2  083B               	movf	??_main+2,w
  1414  01E3  00AC               	movwf	?_printf+8
  1415  01E4  083C               	movf	??_main+3,w
  1416  01E5  00AD               	movwf	?_printf+9
  1417  01E6  20B9               	fcall	_printf
  1418  01E7  2969               	goto	l1967
  1419  01E8                     __end_of_main:	
  1420                           
  1421                           	psect	text1
  1422  00B9                     __ptext1:	
  1423 ;; *************** function _printf *****************
  1424 ;; Defined at:
  1425 ;;		line 464 in file "/opt/microchip/xc8/v1.43/sources/common/doprnt.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  f               2    4[BANK0 ] PTR const unsigned char 
  1428 ;;		 -> STR_1(14), 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  idx             1   19[BANK0 ] unsigned char 
  1431 ;;  tmpval          4    0        struct .
  1432 ;;  val             2   21[BANK0 ] unsigned int 
  1433 ;;  cp              2    0        PTR const unsigned char 
  1434 ;;  len             2    0        unsigned int 
  1435 ;;  c               1   24[BANK0 ] char 
  1436 ;;  prec            1   23[BANK0 ] char 
  1437 ;;  ap              1   20[BANK0 ] PTR void [1]
  1438 ;;		 -> ?_printf(2), 
  1439 ;;  flag            1   18[BANK0 ] unsigned char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  2    4[BANK0 ] int 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1
  1449 ;;      Params:         0      10       0
  1450 ;;      Locals:         0       7       0
  1451 ;;      Temps:          0       4       0
  1452 ;;      Totals:         0      21       0
  1453 ;;Total ram usage:       21 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    5
  1456 ;; This function calls:
  1457 ;;		___lwdiv
  1458 ;;		_putch
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _printf
  1466  00B9                     _printf:	
  1467                           
  1468                           ;doprnt.c: 466: va_list ap;
  1469                           ;doprnt.c: 499: signed char c;
  1470                           ;doprnt.c: 506: signed char prec;
  1471                           ;doprnt.c: 508: unsigned char flag;
  1472                           ;doprnt.c: 523: union {
  1473                           ;doprnt.c: 524: unsigned long vd;
  1474                           ;doprnt.c: 525: double integ;
  1475                           ;doprnt.c: 526: } tmpval;
  1476                           ;doprnt.c: 528: unsigned int val;
  1477                           ;doprnt.c: 529: unsigned len;
  1478                           ;doprnt.c: 530: const char * cp;
  1479                           ;doprnt.c: 533: *ap = __va_start();
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1483  00B9  3026               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1484  00BA  0020               	movlb	0	; select bank0
  1485  00BB  00AE               	movwf	??_printf
  1486  00BC  082E               	movf	??_printf,w
  1487  00BD  00B4               	movwf	printf@ap
  1488  00BE                     l1957:	
  1489                           ;doprnt.c: 536: while(c = *f++) {
  1490                           
  1491  00BE  0020               	movlb	0	; select bank0
  1492  00BF  0825               	movf	printf@f+1,w
  1493  00C0  00AF               	movwf	??_printf+1
  1494  00C1  0824               	movf	printf@f,w
  1495  00C2  00AE               	movwf	??_printf
  1496  00C3  0AA4               	incf	printf@f,f
  1497  00C4  1903               	skipnz
  1498  00C5  0AA5               	incf	printf@f+1,f
  1499  00C6  082E               	movf	??_printf,w
  1500  00C7  0084               	movwf	4
  1501  00C8  082F               	movf	??_printf+1,w
  1502  00C9  0085               	movwf	5
  1503  00CA  0800               	movf	0,w	;code access
  1504  00CB  00B0               	movwf	??_printf+2
  1505  00CC  0830               	movf	??_printf+2,w
  1506  00CD  00B8               	movwf	printf@c
  1507  00CE  0838               	movf	printf@c,w
  1508  00CF  1903               	btfsc	3,2
  1509  00D0  0008               	return
  1510                           
  1511                           ;doprnt.c: 538: if(c != '%')
  1512  00D1  3025               	movlw	37
  1513  00D2  0638               	xorwf	printf@c,w
  1514  00D3  1903               	btfsc	3,2
  1515  00D4  28D8               	goto	l1925
  1516                           
  1517                           ;doprnt.c: 540: {
  1518                           ;doprnt.c: 541: (putch(c) );
  1519  00D5  0838               	movf	printf@c,w
  1520  00D6  24ED               	fcall	_putch
  1521                           
  1522                           ;doprnt.c: 542: continue;
  1523  00D7  28BE               	goto	l1957
  1524  00D8                     l1925:	
  1525                           
  1526                           ;doprnt.c: 543: }
  1527                           ;doprnt.c: 548: flag = 0;
  1528  00D8  0020               	movlb	0	; select bank0
  1529  00D9  01B2               	clrf	printf@flag
  1530                           
  1531                           ;doprnt.c: 822: }
  1532                           
  1533                           ;doprnt.c: 813: continue;
  1534                           
  1535                           ;doprnt.c: 802: default:
  1536                           
  1537                           ;doprnt.c: 723: break;
  1538                           
  1539                           ;doprnt.c: 718: case 'x':
  1540                           
  1541                           ;doprnt.c: 638: goto alldone;
  1542                           
  1543                           ;doprnt.c: 637: case 0:
  1544                           
  1545                           ;doprnt.c: 635: switch(c = *f++) {
  1546  00DA  0825               	movf	printf@f+1,w
  1547  00DB  00AF               	movwf	??_printf+1
  1548  00DC  0824               	movf	printf@f,w
  1549  00DD  00AE               	movwf	??_printf
  1550  00DE  0AA4               	incf	printf@f,f
  1551  00DF  1903               	skipnz
  1552  00E0  0AA5               	incf	printf@f+1,f
  1553  00E1  082E               	movf	??_printf,w
  1554  00E2  0084               	movwf	4
  1555  00E3  082F               	movf	??_printf+1,w
  1556  00E4  0085               	movwf	5
  1557  00E5  0800               	movf	0,w	;code access
  1558  00E6  00B8               	movwf	printf@c
  1559                           
  1560                           ; Switch size 1, requested type "space"
  1561                           ; Number of cases is 2, Range of values is 0 to 120
  1562                           ; switch strategies available:
  1563                           ; Name         Instructions Cycles
  1564                           ; simple_byte            7     4 (average)
  1565                           ; direct_byte          248     6 (fixed)
  1566                           ; jumptable            260     6 (fixed)
  1567                           ;	Chosen strategy is simple_byte
  1568  00E7  3A00               	xorlw	0	; case 0
  1569  00E8  1903               	skipnz
  1570  00E9  2952               	goto	l337
  1571  00EA  3A78               	xorlw	120	; case 120
  1572  00EB  1903               	skipnz
  1573  00EC  28EE               	goto	l1931
  1574  00ED  28BE               	goto	l1957
  1575  00EE                     l1931:	
  1576                           
  1577                           ;doprnt.c: 1273: {
  1578                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1579  00EE  0834               	movf	printf@ap,w
  1580  00EF  0086               	movwf	6
  1581  00F0  0187               	clrf	7
  1582  00F1  3F40               	moviw [0]fsr1
  1583  00F2  00B5               	movwf	printf@val
  1584  00F3  3F41               	moviw [1]fsr1
  1585  00F4  00B6               	movwf	printf@val+1
  1586  00F5  3002               	movlw	2
  1587  00F6  00AE               	movwf	??_printf
  1588  00F7  082E               	movf	??_printf,w
  1589  00F8  07B4               	addwf	printf@ap,f
  1590                           
  1591                           ;doprnt.c: 1287: }
  1592                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1593  00F9  01B8               	clrf	printf@c
  1594  00FA  0AB8               	incf	printf@c,f
  1595  00FB  3004               	movlw	4
  1596  00FC  0638               	xorwf	printf@c,w
  1597  00FD  1903               	btfsc	3,2
  1598  00FE  291E               	goto	l1947
  1599  00FF                     l1941:	
  1600                           
  1601                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1602  00FF  0838               	movf	printf@c,w
  1603  0100  00AE               	movwf	??_printf
  1604  0101  01AF               	clrf	??_printf+1
  1605  0102  35AE               	lslf	??_printf,f
  1606  0103  0DAF               	rlf	??_printf+1,f
  1607  0104  3080               	movlw	low (_hexpowers| (0+32768))
  1608  0105  072E               	addwf	??_printf,w
  1609  0106  0084               	movwf	4
  1610  0107  3084               	movlw	high (_hexpowers| (0+32768))
  1611  0108  3D2F               	addwfc	??_printf+1,w
  1612  0109  0085               	movwf	5
  1613  010A  3F00               	moviw [0]fsr0
  1614  010B  00B0               	movwf	??_printf+2
  1615  010C  3F01               	moviw [1]fsr0
  1616  010D  00B1               	movwf	??_printf+3
  1617  010E  0831               	movf	??_printf+3,w
  1618  010F  0236               	subwf	printf@val+1,w
  1619  0110  1D03               	skipz
  1620  0111  2914               	goto	u1545
  1621  0112  0830               	movf	??_printf+2,w
  1622  0113  0235               	subwf	printf@val,w
  1623  0114                     u1545:	
  1624  0114  1C03               	btfss	3,0
  1625  0115  291E               	goto	l1947
  1626                           
  1627                           ;doprnt.c: 1318: break;
  1628  0116  3001               	movlw	1
  1629  0117  00AE               	movwf	??_printf
  1630  0118  082E               	movf	??_printf,w
  1631  0119  07B8               	addwf	printf@c,f
  1632  011A  3004               	movlw	4
  1633  011B  0638               	xorwf	printf@c,w
  1634  011C  1D03               	btfss	3,2
  1635  011D  28FF               	goto	l1941
  1636  011E                     l1947:	
  1637                           
  1638                           ;doprnt.c: 1422: {
  1639                           ;doprnt.c: 1469: }
  1640                           ;doprnt.c: 1472: prec = c;
  1641  011E  0838               	movf	printf@c,w
  1642  011F  00AE               	movwf	??_printf
  1643  0120  082E               	movf	??_printf,w
  1644  0121  00B7               	movwf	printf@prec
  1645  0122                     l1955:	
  1646                           ;doprnt.c: 1474: while(prec--) {
  1647                           
  1648  0122  30FF               	movlw	255
  1649  0123  0020               	movlb	0	; select bank0
  1650  0124  00AE               	movwf	??_printf
  1651  0125  082E               	movf	??_printf,w
  1652  0126  07B7               	addwf	printf@prec,f
  1653  0127  0A37               	incf	printf@prec,w
  1654  0128  1903               	btfsc	3,2
  1655  0129  28BE               	goto	l1957
  1656                           
  1657                           ;doprnt.c: 1478: {
  1658                           ;doprnt.c: 1499: {
  1659                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1660  012A  0837               	movf	printf@prec,w
  1661  012B  00AE               	movwf	??_printf
  1662  012C  01AF               	clrf	??_printf+1
  1663  012D  35AE               	lslf	??_printf,f
  1664  012E  0DAF               	rlf	??_printf+1,f
  1665  012F  3080               	movlw	low (_hexpowers| (0+32768))
  1666  0130  072E               	addwf	??_printf,w
  1667  0131  0084               	movwf	4
  1668  0132  3084               	movlw	high (_hexpowers| (0+32768))
  1669  0133  3D2F               	addwfc	??_printf+1,w
  1670  0134  0085               	movwf	5
  1671  0135  3F00               	moviw [0]fsr0
  1672  0136  00F4               	movwf	___lwdiv@divisor
  1673  0137  3F01               	moviw [1]fsr0
  1674  0138  00F5               	movwf	___lwdiv@divisor+1
  1675  0139  0836               	movf	printf@val+1,w
  1676  013A  00F7               	movwf	___lwdiv@dividend+1
  1677  013B  0835               	movf	printf@val,w
  1678  013C  00F6               	movwf	___lwdiv@dividend
  1679  013D  2352               	fcall	___lwdiv
  1680  013E  0874               	movf	?___lwdiv,w
  1681  013F  390F               	andlw	15
  1682  0140  0020               	movlb	0	; select bank0
  1683  0141  00B0               	movwf	??_printf+2
  1684  0142  0830               	movf	??_printf+2,w
  1685  0143  00B3               	movwf	printf@idx
  1686                           
  1687                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1688  0144  0833               	movf	printf@idx,w
  1689  0145  3E88               	addlw	low (STR_2| (0+32768))
  1690  0146  0084               	movwf	4
  1691  0147  3084               	movlw	high (STR_2| (0+32768))
  1692  0148  1803               	skipnc
  1693  0149  3E01               	addlw	1
  1694  014A  0085               	movwf	5
  1695  014B  0800               	movf	0,w	;code access
  1696  014C  00AE               	movwf	??_printf
  1697  014D  082E               	movf	??_printf,w
  1698  014E  00B8               	movwf	printf@c
  1699                           
  1700                           ;doprnt.c: 1508: }
  1701                           ;doprnt.c: 1523: }
  1702                           ;doprnt.c: 1524: (putch(c) );
  1703  014F  0838               	movf	printf@c,w
  1704  0150  24ED               	fcall	_putch
  1705  0151  2922               	goto	l1955
  1706  0152                     l337:	
  1707                           ;doprnt.c: 1540: return 0;
  1708                           ;	Return value of _printf is never used
  1709                           
  1710                           ;doprnt.c: 1525: }
  1711                           ;doprnt.c: 1533: }
  1712                           ;doprnt.c: 1535: alldone:
  1713                           
  1714  0152  0008               	return
  1715  0153                     __end_of_printf:	
  1716                           
  1717                           	psect	text2
  1718  04ED                     __ptext2:	
  1719 ;; *************** function _putch *****************
  1720 ;; Defined at:
  1721 ;;		line 76 in file "PIC_UART.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  c               1    wreg     unsigned char 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  c               1    5[COMMON] unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1
  1735 ;;      Params:         0       0       0
  1736 ;;      Locals:         1       0       0
  1737 ;;      Temps:          0       0       0
  1738 ;;      Totals:         1       0       0
  1739 ;;Total ram usage:        1 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    4
  1742 ;; This function calls:
  1743 ;;		_UART_Transmit
  1744 ;; This function is called by:
  1745 ;;		_printf
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _putch
  1751  04ED                     _putch:	
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1755                           ;putch@c stored from wreg
  1756  04ED  00F5               	movwf	putch@c
  1757                           
  1758                           ;PIC_UART.c: 78: UART_Transmit(c);
  1759  04EE  0875               	movf	putch@c,w
  1760  04EF  24DF               	fcall	_UART_Transmit
  1761  04F0  0008               	return
  1762  04F1                     __end_of_putch:	
  1763                           
  1764                           	psect	text3
  1765  04DF                     __ptext3:	
  1766 ;; *************** function _UART_Transmit *****************
  1767 ;; Defined at:
  1768 ;;		line 70 in file "PIC_UART.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  dt              1    wreg     unsigned char 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  dt              1    4[COMMON] unsigned char 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMMON   BANK0   BANK1
  1782 ;;      Params:         0       0       0
  1783 ;;      Locals:         1       0       0
  1784 ;;      Temps:          0       0       0
  1785 ;;      Totals:         1       0       0
  1786 ;;Total ram usage:        1 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    3
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_putch
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _UART_Transmit
  1798  04DF                     _UART_Transmit:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _UART_Transmit: [wreg]
  1802                           ;UART_Transmit@dt stored from wreg
  1803  04DF  00F4               	movwf	UART_Transmit@dt
  1804  04E0                     l108:	
  1805                           ;PIC_UART.c: 72: while (TXIF == 0);
  1806                           
  1807  04E0  0020               	movlb	0	; select bank0
  1808  04E1  1E11               	btfss	17,4	;volatile
  1809  04E2  2CE0               	goto	l108
  1810                           
  1811                           ;PIC_UART.c: 73: TXREG = dt;
  1812  04E3  0874               	movf	UART_Transmit@dt,w
  1813  04E4  0023               	movlb	3	; select bank3
  1814  04E5  009A               	movwf	26	;volatile
  1815  04E6  0008               	return
  1816  04E7                     __end_of_UART_Transmit:	
  1817                           
  1818                           	psect	text4
  1819  0352                     __ptext4:	
  1820 ;; *************** function ___lwdiv *****************
  1821 ;; Defined at:
  1822 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/common/lwdiv.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  divisor         2    4[COMMON] unsigned int 
  1825 ;;  dividend        2    6[COMMON] unsigned int 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  quotient        2    2[BANK0 ] unsigned int 
  1828 ;;  counter         1    1[BANK0 ] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2    4[COMMON] unsigned int 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1
  1838 ;;      Params:         4       0       0
  1839 ;;      Locals:         0       3       0
  1840 ;;      Temps:          0       1       0
  1841 ;;      Totals:         4       4       0
  1842 ;;Total ram usage:        8 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    3
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_printf
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function ___lwdiv
  1854  0352                     ___lwdiv:	
  1855                           
  1856                           ;incstack = 0
  1857                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1858  0352  0020               	movlb	0	; select bank0
  1859  0353  01A2               	clrf	___lwdiv@quotient
  1860  0354  01A3               	clrf	___lwdiv@quotient+1
  1861  0355  0874               	movf	___lwdiv@divisor,w
  1862  0356  0475               	iorwf	___lwdiv@divisor+1,w
  1863  0357  1903               	btfsc	3,2
  1864  0358  2B82               	goto	l1853
  1865  0359  01A1               	clrf	___lwdiv@counter
  1866  035A  0AA1               	incf	___lwdiv@counter,f
  1867  035B                     l1841:	
  1868  035B  1BF5               	btfsc	___lwdiv@divisor+1,7
  1869  035C  2B67               	goto	l1843
  1870  035D  3001               	movlw	1
  1871  035E                     u1405:	
  1872  035E  35F4               	lslf	___lwdiv@divisor,f
  1873  035F  0DF5               	rlf	___lwdiv@divisor+1,f
  1874  0360  0B89               	decfsz	9,f
  1875  0361  2B5E               	goto	u1405
  1876  0362  3001               	movlw	1
  1877  0363  00A0               	movwf	??___lwdiv
  1878  0364  0820               	movf	??___lwdiv,w
  1879  0365  07A1               	addwf	___lwdiv@counter,f
  1880  0366  2B5B               	goto	l1841
  1881  0367                     l1843:	
  1882  0367  3001               	movlw	1
  1883  0368                     u1425:	
  1884  0368  35A2               	lslf	___lwdiv@quotient,f
  1885  0369  0DA3               	rlf	___lwdiv@quotient+1,f
  1886  036A  0B89               	decfsz	9,f
  1887  036B  2B68               	goto	u1425
  1888  036C  0875               	movf	___lwdiv@divisor+1,w
  1889  036D  0277               	subwf	___lwdiv@dividend+1,w
  1890  036E  1D03               	skipz
  1891  036F  2B72               	goto	u1435
  1892  0370  0874               	movf	___lwdiv@divisor,w
  1893  0371  0276               	subwf	___lwdiv@dividend,w
  1894  0372                     u1435:	
  1895  0372  1C03               	skipc
  1896  0373  2B79               	goto	l1849
  1897  0374  0874               	movf	___lwdiv@divisor,w
  1898  0375  02F6               	subwf	___lwdiv@dividend,f
  1899  0376  0875               	movf	___lwdiv@divisor+1,w
  1900  0377  3BF7               	subwfb	___lwdiv@dividend+1,f
  1901  0378  1422               	bsf	___lwdiv@quotient,0
  1902  0379                     l1849:	
  1903  0379  3001               	movlw	1
  1904  037A                     u1445:	
  1905  037A  36F5               	lsrf	___lwdiv@divisor+1,f
  1906  037B  0CF4               	rrf	___lwdiv@divisor,f
  1907  037C  0B89               	decfsz	9,f
  1908  037D  2B7A               	goto	u1445
  1909  037E  3001               	movlw	1
  1910  037F  02A1               	subwf	___lwdiv@counter,f
  1911  0380  1D03               	btfss	3,2
  1912  0381  2B67               	goto	l1843
  1913  0382                     l1853:	
  1914  0382  0823               	movf	___lwdiv@quotient+1,w
  1915  0383  00F5               	movwf	?___lwdiv+1
  1916  0384  0822               	movf	___lwdiv@quotient,w
  1917  0385  00F4               	movwf	?___lwdiv
  1918  0386  0008               	return
  1919  0387                     __end_of___lwdiv:	
  1920                           
  1921                           	psect	text5
  1922  031A                     __ptext5:	
  1923 ;; *************** function _UART_Init *****************
  1924 ;; Defined at:
  1925 ;;		line 37 in file "PIC_UART.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  UART_Init_PO    2    5[COMMON] PTR FTN()void 
  1928 ;;		 -> UART_InitPort(1), 
  1929 ;;  brg             1    7[COMMON] enum E2433
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1
  1941 ;;      Params:         3       0       0
  1942 ;;      Locals:         0       0       0
  1943 ;;      Temps:          0       4       0
  1944 ;;      Totals:         3       4       0
  1945 ;;Total ram usage:        7 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    4
  1948 ;; This function calls:
  1949 ;;		_UART_InitPort
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _UART_Init
  1957  031A                     _UART_Init:	
  1958                           
  1959                           ;PIC_UART.c: 39: UART_Init_PORT();
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1963  031A  0876               	movf	UART_Init@UART_Init_PORT+1,w
  1964  031B  008A               	movwf	10
  1965  031C  0875               	movf	UART_Init@UART_Init_PORT,w
  1966  031D  000A               	callw
  1967  031E  3183               	pagesel	$
  1968                           
  1969                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1970  031F  3020               	movlw	32
  1971  0320  0023               	movlb	3	; select bank3
  1972  0321  009E               	movwf	30	;volatile
  1973                           
  1974                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1975  0322  3010               	movlw	16
  1976  0323  009D               	movwf	29	;volatile
  1977                           
  1978                           ;PIC_UART.c: 44: BRG16 = 1;
  1979  0324  159F               	bsf	31,3	;volatile
  1980                           
  1981                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1982  0325  0877               	movf	UART_Init@brg,w
  1983  0326  0020               	movlb	0	; select bank0
  1984  0327  00A0               	movwf	??_UART_Init
  1985  0328  01A1               	clrf	??_UART_Init+1
  1986  0329  35A0               	lslf	??_UART_Init,f
  1987  032A  0DA1               	rlf	??_UART_Init+1,f
  1988  032B  3099               	movlw	low (_baudtable| (0+32768))
  1989  032C  0720               	addwf	??_UART_Init,w
  1990  032D  0084               	movwf	4
  1991  032E  3084               	movlw	high (_baudtable| (0+32768))
  1992  032F  3D21               	addwfc	??_UART_Init+1,w
  1993  0330  0085               	movwf	5
  1994  0331  0800               	movf	0,w	;code access
  1995  0332  0023               	movlb	3	; select bank3
  1996  0333  009B               	movwf	27	;volatile
  1997                           
  1998                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1999  0334  0877               	movf	UART_Init@brg,w
  2000  0335  0020               	movlb	0	; select bank0
  2001  0336  00A0               	movwf	??_UART_Init
  2002  0337  01A1               	clrf	??_UART_Init+1
  2003  0338  35A0               	lslf	??_UART_Init,f
  2004  0339  0DA1               	rlf	??_UART_Init+1,f
  2005  033A  3099               	movlw	low (_baudtable| (0+32768))
  2006  033B  0720               	addwf	??_UART_Init,w
  2007  033C  0084               	movwf	4
  2008  033D  3084               	movlw	high (_baudtable| (0+32768))
  2009  033E  3D21               	addwfc	??_UART_Init+1,w
  2010  033F  0085               	movwf	5
  2011  0340  3F00               	moviw [0]fsr0
  2012  0341  00A2               	movwf	??_UART_Init+2
  2013  0342  3F01               	moviw [1]fsr0
  2014  0343  00A3               	movwf	??_UART_Init+3
  2015  0344  0823               	movf	??_UART_Init+3,w
  2016  0345  0023               	movlb	3	; select bank3
  2017  0346  009C               	movwf	28	;volatile
  2018                           
  2019                           ;PIC_UART.c: 48: RCIF = 0;
  2020  0347  0020               	movlb	0	; select bank0
  2021  0348  1291               	bcf	17,5	;volatile
  2022                           
  2023                           ;PIC_UART.c: 49: RCIE = 1;
  2024  0349  0021               	movlb	1	; select bank1
  2025  034A  1691               	bsf	17,5	;volatile
  2026                           
  2027                           ;PIC_UART.c: 50: PEIE = 1;
  2028  034B  170B               	bsf	11,6	;volatile
  2029                           
  2030                           ;PIC_UART.c: 51: GIE = 1;
  2031  034C  178B               	bsf	11,7	;volatile
  2032                           
  2033                           ;PIC_UART.c: 53: SPEN = 1;
  2034  034D  0023               	movlb	3	; select bank3
  2035  034E  179D               	bsf	29,7	;volatile
  2036                           
  2037                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  2038  034F  01F9               	clrf	_UART_Buffer_inptr
  2039                           
  2040                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  2041  0350  01F8               	clrf	_UART_Buffer_outptr
  2042  0351  0008               	return
  2043  0352                     __end_of_UART_Init:	
  2044                           
  2045                           	psect	text6
  2046  04B7                     __ptext6:	
  2047 ;; *************** function _UART_InitPort *****************
  2048 ;; Defined at:
  2049 ;;		line 59 in file "main.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1
  2063 ;;      Params:         0       0       0
  2064 ;;      Locals:         0       0       0
  2065 ;;      Temps:          1       0       0
  2066 ;;      Totals:         1       0       0
  2067 ;;Total ram usage:        1 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    3
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;;		_UART_Init
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _UART_InitPort
  2080  04B7                     _UART_InitPort:	
  2081                           
  2082                           ;main.c: 61: TRISA &= ~(1<<4);
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  2086  04B7  30EF               	movlw	239
  2087  04B8  00F4               	movwf	??_UART_InitPort
  2088  04B9  0874               	movf	??_UART_InitPort,w
  2089  04BA  0021               	movlb	1	; select bank1
  2090  04BB  058C               	andwf	12,f	;volatile
  2091                           
  2092                           ;main.c: 62: ANSELA &= ~(1<<4);
  2093  04BC  30EF               	movlw	239
  2094  04BD  00F4               	movwf	??_UART_InitPort
  2095  04BE  0874               	movf	??_UART_InitPort,w
  2096  04BF  0023               	movlb	3	; select bank3
  2097  04C0  058C               	andwf	12,f	;volatile
  2098                           
  2099                           ;main.c: 63: APFCON |= (1<<2);
  2100  04C1  0022               	movlb	2	; select bank2
  2101  04C2  151D               	bsf	29,2	;volatile
  2102                           
  2103                           ;main.c: 64: APFCON |= (1<<7);
  2104  04C3  179D               	bsf	29,7	;volatile
  2105  04C4  0008               	return
  2106  04C5                     __end_of_UART_InitPort:	
  2107                           
  2108                           	psect	text7
  2109  03B2                     __ptext7:	
  2110 ;; *************** function _MPU6050_Read_MultiData *****************
  2111 ;; Defined at:
  2112 ;;		line 27 in file "MPU6050.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  reg             1    wreg     unsigned char 
  2115 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  2116 ;;		 -> main@accel_t_gyro(14), 
  2117 ;;  size            1   13[BANK0 ] unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  reg             1   18[BANK0 ] unsigned char 
  2120 ;;  result          1   19[BANK0 ] char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      char 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1
  2130 ;;      Params:         0       2       0
  2131 ;;      Locals:         0       2       0
  2132 ;;      Temps:          0       4       0
  2133 ;;      Totals:         0       8       0
  2134 ;;Total ram usage:        8 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    5
  2137 ;; This function calls:
  2138 ;;		_I2C_Receive
  2139 ;;		_I2C_Transmit
  2140 ;; This function is called by:
  2141 ;;		_main
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           
  2146                           ;psect for function _MPU6050_Read_MultiData
  2147  03B2                     _MPU6050_Read_MultiData:	
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _MPU6050_Read_MultiData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2151                           ;MPU6050_Read_MultiData@reg stored from wreg
  2152  03B2  0020               	movlb	0	; select bank0
  2153  03B3  00B2               	movwf	MPU6050_Read_MultiData@reg
  2154                           
  2155                           ;MPU6050.c: 29: int8_t result = 0;
  2156  03B4  01B3               	clrf	MPU6050_Read_MultiData@result
  2157                           
  2158                           ;MPU6050.c: 31: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  2159  03B5  3068               	movlw	104
  2160  03B6  00AE               	movwf	??_MPU6050_Read_MultiData
  2161  03B7  082E               	movf	??_MPU6050_Read_MultiData,w
  2162  03B8  00A4               	movwf	I2C_Transmit@address
  2163  03B9  3032               	movlw	(low (MPU6050_Read_MultiData@reg| 0))& (0+255)
  2164  03BA  00AF               	movwf	??_MPU6050_Read_MultiData+1
  2165  03BB  082F               	movf	??_MPU6050_Read_MultiData+1,w
  2166  03BC  00A5               	movwf	I2C_Transmit@pData
  2167  03BD  01A6               	clrf	I2C_Transmit@size
  2168  03BE  0AA6               	incf	I2C_Transmit@size,f
  2169  03BF  3000               	movlw	0
  2170  03C0  244A               	fcall	_I2C_Transmit
  2171  03C1  0020               	movlb	0	; select bank0
  2172  03C2  00B0               	movwf	??_MPU6050_Read_MultiData+2
  2173  03C3  0830               	movf	??_MPU6050_Read_MultiData+2,w
  2174  03C4  07B3               	addwf	MPU6050_Read_MultiData@result,f
  2175                           
  2176                           ;MPU6050.c: 32: result += I2C_Receive(I2C1_MODULE,0x68,pData,size);
  2177  03C5  3068               	movlw	104
  2178  03C6  00AE               	movwf	??_MPU6050_Read_MultiData
  2179  03C7  082E               	movf	??_MPU6050_Read_MultiData,w
  2180  03C8  00A4               	movwf	I2C_Receive@address
  2181  03C9  082C               	movf	MPU6050_Read_MultiData@pData,w
  2182  03CA  00AF               	movwf	??_MPU6050_Read_MultiData+1
  2183  03CB  082F               	movf	??_MPU6050_Read_MultiData+1,w
  2184  03CC  00A5               	movwf	I2C_Receive@pData
  2185  03CD  082D               	movf	MPU6050_Read_MultiData@size,w
  2186  03CE  00B0               	movwf	??_MPU6050_Read_MultiData+2
  2187  03CF  0830               	movf	??_MPU6050_Read_MultiData+2,w
  2188  03D0  00A6               	movwf	I2C_Receive@size
  2189  03D1  3000               	movlw	0
  2190  03D2  2465               	fcall	_I2C_Receive
  2191  03D3  0020               	movlb	0	; select bank0
  2192  03D4  00B1               	movwf	??_MPU6050_Read_MultiData+3
  2193  03D5  0831               	movf	??_MPU6050_Read_MultiData+3,w
  2194  03D6  07B3               	addwf	MPU6050_Read_MultiData@result,f
  2195                           
  2196                           ;MPU6050.c: 34: return result;
  2197  03D7  0833               	movf	MPU6050_Read_MultiData@result,w
  2198  03D8  0008               	return
  2199  03D9                     __end_of_MPU6050_Read_MultiData:	
  2200                           
  2201                           	psect	text8
  2202  0387                     __ptext8:	
  2203 ;; *************** function _MPU6050_Init *****************
  2204 ;; Defined at:
  2205 ;;		line 37 in file "MPU6050.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  data            1   22[BANK0 ] unsigned char 
  2210 ;;  addr            1   21[BANK0 ] unsigned char 
  2211 ;;  result          1   20[BANK0 ] char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      char 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1
  2221 ;;      Params:         0       0       0
  2222 ;;      Locals:         0       3       0
  2223 ;;      Temps:          0       2       0
  2224 ;;      Totals:         0       5       0
  2225 ;;Total ram usage:        5 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    6
  2228 ;; This function calls:
  2229 ;;		_MPU6050_Read_Data
  2230 ;;		_MPU6050_Write_Data
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _MPU6050_Init
  2238  0387                     _MPU6050_Init:	
  2239                           
  2240                           ;MPU6050.c: 39: int8_t result;
  2241                           ;MPU6050.c: 41: uint8_t addr;
  2242                           ;MPU6050.c: 42: result = MPU6050_Read_Data(0x75,&addr);
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _MPU6050_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2246  0387  3035               	movlw	(low (MPU6050_Init@addr| 0))& (0+255)
  2247  0388  0020               	movlb	0	; select bank0
  2248  0389  00B2               	movwf	??_MPU6050_Init
  2249  038A  0832               	movf	??_MPU6050_Init,w
  2250  038B  00AC               	movwf	MPU6050_Read_Data@pData
  2251  038C  3075               	movlw	117
  2252  038D  2425               	fcall	_MPU6050_Read_Data
  2253  038E  0020               	movlb	0	; select bank0
  2254  038F  00B3               	movwf	??_MPU6050_Init+1
  2255  0390  0833               	movf	??_MPU6050_Init+1,w
  2256  0391  00B4               	movwf	MPU6050_Init@result
  2257                           
  2258                           ;MPU6050.c: 43: if((addr>>1)!=0x68) return -1;
  2259  0392  0835               	movf	MPU6050_Init@addr,w
  2260  0393  00B2               	movwf	??_MPU6050_Init
  2261  0394  3001               	movlw	1
  2262  0395                     u1505:	
  2263  0395  36B2               	lsrf	??_MPU6050_Init,f
  2264  0396  0B89               	decfsz	9,f
  2265  0397  2B95               	goto	u1505
  2266  0398  3068               	movlw	104
  2267  0399  0632               	xorwf	??_MPU6050_Init,w
  2268  039A  1D03               	btfss	3,2
  2269  039B  0008               	return
  2270                           
  2271                           ;MPU6050.c: 46: uint8_t data = 0x00;
  2272                           
  2273                           ;	Return value of _MPU6050_Init is never used
  2274  039C  01B6               	clrf	MPU6050_Init@data
  2275                           
  2276                           ;MPU6050.c: 47: result += MPU6050_Write_Data(0x6B,data);
  2277  039D  0836               	movf	MPU6050_Init@data,w
  2278  039E  00B2               	movwf	??_MPU6050_Init
  2279  039F  0832               	movf	??_MPU6050_Init,w
  2280  03A0  00AC               	movwf	MPU6050_Write_Data@pData
  2281  03A1  306B               	movlw	107
  2282  03A2  2400               	fcall	_MPU6050_Write_Data
  2283  03A3  0020               	movlb	0	; select bank0
  2284  03A4  00B3               	movwf	??_MPU6050_Init+1
  2285  03A5  0833               	movf	??_MPU6050_Init+1,w
  2286  03A6  07B4               	addwf	MPU6050_Init@result,f
  2287                           
  2288                           ;MPU6050.c: 49: result += MPU6050_Read_Data(0x6B,&data);
  2289  03A7  3036               	movlw	(low (MPU6050_Init@data| 0))& (0+255)
  2290  03A8  00B2               	movwf	??_MPU6050_Init
  2291  03A9  0832               	movf	??_MPU6050_Init,w
  2292  03AA  00AC               	movwf	MPU6050_Read_Data@pData
  2293  03AB  306B               	movlw	107
  2294  03AC  2425               	fcall	_MPU6050_Read_Data
  2295  03AD  0020               	movlb	0	; select bank0
  2296  03AE  00B3               	movwf	??_MPU6050_Init+1
  2297  03AF  0833               	movf	??_MPU6050_Init+1,w
  2298  03B0  07B4               	addwf	MPU6050_Init@result,f
  2299  03B1  0008               	return
  2300  03B2                     __end_of_MPU6050_Init:	
  2301                           ;MPU6050.c: 51: return result;
  2302                           ;	Return value of _MPU6050_Init is never used
  2303                           
  2304                           
  2305                           	psect	text9
  2306  0400                     __ptext9:	
  2307 ;; *************** function _MPU6050_Write_Data *****************
  2308 ;; Defined at:
  2309 ;;		line 5 in file "MPU6050.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  reg             1    wreg     unsigned char 
  2312 ;;  pData           1   12[BANK0 ] unsigned char 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  reg             1   16[BANK0 ] unsigned char 
  2315 ;;  result          1   17[BANK0 ] char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      char 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1
  2325 ;;      Params:         0       1       0
  2326 ;;      Locals:         0       2       0
  2327 ;;      Temps:          0       3       0
  2328 ;;      Totals:         0       6       0
  2329 ;;Total ram usage:        6 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    5
  2332 ;; This function calls:
  2333 ;;		_I2C_Transmit
  2334 ;; This function is called by:
  2335 ;;		_MPU6050_Init
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _MPU6050_Write_Data
  2341  0400                     _MPU6050_Write_Data:	
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _MPU6050_Write_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2345                           ;MPU6050_Write_Data@reg stored from wreg
  2346  0400  0020               	movlb	0	; select bank0
  2347  0401  00B0               	movwf	MPU6050_Write_Data@reg
  2348                           
  2349                           ;MPU6050.c: 7: int8_t result = 0;
  2350  0402  01B1               	clrf	MPU6050_Write_Data@result
  2351                           
  2352                           ;MPU6050.c: 9: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  2353  0403  3068               	movlw	104
  2354  0404  00AD               	movwf	??_MPU6050_Write_Data
  2355  0405  082D               	movf	??_MPU6050_Write_Data,w
  2356  0406  00A4               	movwf	I2C_Transmit@address
  2357  0407  3030               	movlw	(low (MPU6050_Write_Data@reg| 0))& (0+255)
  2358  0408  00AE               	movwf	??_MPU6050_Write_Data+1
  2359  0409  082E               	movf	??_MPU6050_Write_Data+1,w
  2360  040A  00A5               	movwf	I2C_Transmit@pData
  2361  040B  01A6               	clrf	I2C_Transmit@size
  2362  040C  0AA6               	incf	I2C_Transmit@size,f
  2363  040D  3000               	movlw	0
  2364  040E  244A               	fcall	_I2C_Transmit
  2365  040F  0020               	movlb	0	; select bank0
  2366  0410  00AF               	movwf	??_MPU6050_Write_Data+2
  2367  0411  082F               	movf	??_MPU6050_Write_Data+2,w
  2368  0412  07B1               	addwf	MPU6050_Write_Data@result,f
  2369                           
  2370                           ;MPU6050.c: 11: result += I2C_Transmit(I2C1_MODULE,0x68,&pData,1);
  2371  0413  3068               	movlw	104
  2372  0414  00AD               	movwf	??_MPU6050_Write_Data
  2373  0415  082D               	movf	??_MPU6050_Write_Data,w
  2374  0416  00A4               	movwf	I2C_Transmit@address
  2375  0417  302C               	movlw	(low (MPU6050_Write_Data@pData| 0))& (0+255)
  2376  0418  00AE               	movwf	??_MPU6050_Write_Data+1
  2377  0419  082E               	movf	??_MPU6050_Write_Data+1,w
  2378  041A  00A5               	movwf	I2C_Transmit@pData
  2379  041B  01A6               	clrf	I2C_Transmit@size
  2380  041C  0AA6               	incf	I2C_Transmit@size,f
  2381  041D  3000               	movlw	0
  2382  041E  244A               	fcall	_I2C_Transmit
  2383  041F  0020               	movlb	0	; select bank0
  2384  0420  00AF               	movwf	??_MPU6050_Write_Data+2
  2385  0421  082F               	movf	??_MPU6050_Write_Data+2,w
  2386  0422  07B1               	addwf	MPU6050_Write_Data@result,f
  2387                           
  2388                           ;MPU6050.c: 13: return result;
  2389  0423  0831               	movf	MPU6050_Write_Data@result,w
  2390  0424  0008               	return
  2391  0425                     __end_of_MPU6050_Write_Data:	
  2392                           
  2393                           	psect	text10
  2394  0425                     __ptext10:	
  2395 ;; *************** function _MPU6050_Read_Data *****************
  2396 ;; Defined at:
  2397 ;;		line 16 in file "MPU6050.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  reg             1    wreg     unsigned char 
  2400 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  2401 ;;		 -> MPU6050_Init@data(1), MPU6050_Init@addr(1), 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  reg             1   16[BANK0 ] unsigned char 
  2404 ;;  result          1   17[BANK0 ] char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      char 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1
  2414 ;;      Params:         0       1       0
  2415 ;;      Locals:         0       2       0
  2416 ;;      Temps:          0       3       0
  2417 ;;      Totals:         0       6       0
  2418 ;;Total ram usage:        6 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; Hardware stack levels required when called:    5
  2421 ;; This function calls:
  2422 ;;		_I2C_Receive
  2423 ;;		_I2C_Transmit
  2424 ;; This function is called by:
  2425 ;;		_MPU6050_Init
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _MPU6050_Read_Data
  2431  0425                     _MPU6050_Read_Data:	
  2432                           
  2433                           ;incstack = 0
  2434                           ; Regs used in _MPU6050_Read_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2435                           ;MPU6050_Read_Data@reg stored from wreg
  2436  0425  0020               	movlb	0	; select bank0
  2437  0426  00B0               	movwf	MPU6050_Read_Data@reg
  2438                           
  2439                           ;MPU6050.c: 18: int8_t result = 0;
  2440  0427  01B1               	clrf	MPU6050_Read_Data@result
  2441                           
  2442                           ;MPU6050.c: 20: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  2443  0428  3068               	movlw	104
  2444  0429  00AD               	movwf	??_MPU6050_Read_Data
  2445  042A  082D               	movf	??_MPU6050_Read_Data,w
  2446  042B  00A4               	movwf	I2C_Transmit@address
  2447  042C  3030               	movlw	(low (MPU6050_Read_Data@reg| 0))& (0+255)
  2448  042D  00AE               	movwf	??_MPU6050_Read_Data+1
  2449  042E  082E               	movf	??_MPU6050_Read_Data+1,w
  2450  042F  00A5               	movwf	I2C_Transmit@pData
  2451  0430  01A6               	clrf	I2C_Transmit@size
  2452  0431  0AA6               	incf	I2C_Transmit@size,f
  2453  0432  3000               	movlw	0
  2454  0433  244A               	fcall	_I2C_Transmit
  2455  0434  0020               	movlb	0	; select bank0
  2456  0435  00AF               	movwf	??_MPU6050_Read_Data+2
  2457  0436  082F               	movf	??_MPU6050_Read_Data+2,w
  2458  0437  07B1               	addwf	MPU6050_Read_Data@result,f
  2459                           
  2460                           ;MPU6050.c: 22: result += I2C_Receive(I2C1_MODULE,0x68,pData,1);
  2461  0438  3068               	movlw	104
  2462  0439  00AD               	movwf	??_MPU6050_Read_Data
  2463  043A  082D               	movf	??_MPU6050_Read_Data,w
  2464  043B  00A4               	movwf	I2C_Receive@address
  2465  043C  082C               	movf	MPU6050_Read_Data@pData,w
  2466  043D  00AE               	movwf	??_MPU6050_Read_Data+1
  2467  043E  082E               	movf	??_MPU6050_Read_Data+1,w
  2468  043F  00A5               	movwf	I2C_Receive@pData
  2469  0440  01A6               	clrf	I2C_Receive@size
  2470  0441  0AA6               	incf	I2C_Receive@size,f
  2471  0442  3000               	movlw	0
  2472  0443  2465               	fcall	_I2C_Receive
  2473  0444  0020               	movlb	0	; select bank0
  2474  0445  00AF               	movwf	??_MPU6050_Read_Data+2
  2475  0446  082F               	movf	??_MPU6050_Read_Data+2,w
  2476  0447  07B1               	addwf	MPU6050_Read_Data@result,f
  2477                           
  2478                           ;MPU6050.c: 24: return result;
  2479  0448  0831               	movf	MPU6050_Read_Data@result,w
  2480  0449  0008               	return
  2481  044A                     __end_of_MPU6050_Read_Data:	
  2482                           
  2483                           	psect	text11
  2484  044A                     __ptext11:	
  2485 ;; *************** function _I2C_Transmit *****************
  2486 ;; Defined at:
  2487 ;;		line 5 in file "PIC_I2C.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  I2Cx            1    wreg     enum E2417
  2490 ;;  address         1    4[BANK0 ] unsigned char 
  2491 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  2492 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@pData(1), MPU6050_Write_Data@reg(1),
      + 
  2493 ;;  size            1    6[BANK0 ] unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  I2Cx            1   10[BANK0 ] enum E2417
  2496 ;;  result          1   11[BANK0 ] char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      char 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1
  2506 ;;      Params:         0       3       0
  2507 ;;      Locals:         0       2       0
  2508 ;;      Temps:          0       3       0
  2509 ;;      Totals:         0       8       0
  2510 ;;Total ram usage:        8 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    4
  2513 ;; This function calls:
  2514 ;;		_I2C1_Transmit
  2515 ;; This function is called by:
  2516 ;;		_MPU6050_Write_Data
  2517 ;;		_MPU6050_Read_Data
  2518 ;;		_MPU6050_Read_MultiData
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _I2C_Transmit
  2524  044A                     _I2C_Transmit:	
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2528                           ;I2C_Transmit@I2Cx stored from wreg
  2529  044A  0020               	movlb	0	; select bank0
  2530  044B  00AA               	movwf	I2C_Transmit@I2Cx
  2531                           
  2532                           ;PIC_I2C.c: 7: int8_t result = -1;
  2533  044C  01AB               	clrf	I2C_Transmit@result
  2534  044D  03AB               	decf	I2C_Transmit@result,f
  2535                           
  2536                           ;PIC_I2C.c: 9: switch(I2Cx)
  2537  044E  2C5E               	goto	l1793
  2538  044F                     l1789:	
  2539                           ;PIC_I2C.c: 10: {
  2540                           ;PIC_I2C.c: 11: case I2C1_MODULE:
  2541                           
  2542                           
  2543                           ;PIC_I2C.c: 12: result = I2C1_Transmit(address,pData,size);
  2544  044F  0825               	movf	I2C_Transmit@pData,w
  2545  0450  00A7               	movwf	??_I2C_Transmit
  2546  0451  0827               	movf	??_I2C_Transmit,w
  2547  0452  00F4               	movwf	I2C1_Transmit@pData
  2548  0453  0826               	movf	I2C_Transmit@size,w
  2549  0454  00A8               	movwf	??_I2C_Transmit+1
  2550  0455  0828               	movf	??_I2C_Transmit+1,w
  2551  0456  00F5               	movwf	I2C1_Transmit@size
  2552  0457  0824               	movf	I2C_Transmit@address,w
  2553  0458  21E8               	fcall	_I2C1_Transmit
  2554  0459  0020               	movlb	0	; select bank0
  2555  045A  00A9               	movwf	??_I2C_Transmit+2
  2556  045B  0829               	movf	??_I2C_Transmit+2,w
  2557  045C  00AB               	movwf	I2C_Transmit@result
  2558                           
  2559                           ;PIC_I2C.c: 14: }
  2560                           
  2561                           ;PIC_I2C.c: 13: break;
  2562  045D  2C63               	goto	l1795
  2563  045E                     l1793:	
  2564  045E  082A               	movf	I2C_Transmit@I2Cx,w
  2565                           
  2566                           ; Switch size 1, requested type "space"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ; direct_byte            8     6 (fixed)
  2572                           ; jumptable            260     6 (fixed)
  2573                           ;	Chosen strategy is simple_byte
  2574  045F  3A00               	xorlw	0	; case 0
  2575  0460  1903               	skipnz
  2576  0461  2C4F               	goto	l1789
  2577  0462  2C63               	goto	l1795
  2578  0463                     l1795:	
  2579                           
  2580                           ;PIC_I2C.c: 15: return result;
  2581  0463  082B               	movf	I2C_Transmit@result,w
  2582  0464  0008               	return
  2583  0465                     __end_of_I2C_Transmit:	
  2584                           
  2585                           	psect	text12
  2586  01E8                     __ptext12:	
  2587 ;; *************** function _I2C1_Transmit *****************
  2588 ;; Defined at:
  2589 ;;		line 53 in file "PIC_I2C1.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  address         1    wreg     unsigned char 
  2592 ;;  pData           1    4[COMMON] PTR unsigned char 
  2593 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@pData(1), MPU6050_Write_Data@reg(1),
      + 
  2594 ;;  size            1    5[COMMON] unsigned char 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  address         1    0[BANK0 ] unsigned char 
  2597 ;;  i               1    2[BANK0 ] unsigned char 
  2598 ;;  i               1    1[BANK0 ] unsigned char 
  2599 ;;  result          1    3[BANK0 ] char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      char 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1
  2609 ;;      Params:         2       0       0
  2610 ;;      Locals:         0       4       0
  2611 ;;      Temps:          2       0       0
  2612 ;;      Totals:         4       4       0
  2613 ;;Total ram usage:        8 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    3
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_I2C_Transmit
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _I2C1_Transmit
  2625  01E8                     _I2C1_Transmit:	
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2629                           ;I2C1_Transmit@address stored from wreg
  2630  01E8  0020               	movlb	0	; select bank0
  2631  01E9  00A0               	movwf	I2C1_Transmit@address
  2632                           
  2633                           ;PIC_I2C1.c: 55: int8_t result;
  2634                           ;PIC_I2C1.c: 57: switch(I2C1_Config.Mode)
  2635  01EA  2A66               	goto	l1731
  2636  01EB                     l1687:	
  2637                           ;PIC_I2C1.c: 60: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2638                           
  2639                           ;PIC_I2C1.c: 58: {
  2640                           ;PIC_I2C1.c: 59: case I2C_MODE_MASTER:
  2641                           
  2642  01EB  3005               	movlw	5
  2643  01EC  0024               	movlb	4	; select bank4
  2644  01ED  0514               	andwf	20,w	;volatile
  2645  01EE  00F6               	movwf	??_I2C1_Transmit
  2646  01EF  0816               	movf	22,w	;volatile
  2647  01F0  391F               	andlw	31
  2648  01F1  0476               	iorwf	??_I2C1_Transmit,w
  2649  01F2  1D03               	btfss	3,2
  2650  01F3  29EB               	goto	l1687
  2651                           
  2652                           ;PIC_I2C1.c: 61: SSPCON2bits.SEN = 1;
  2653  01F4  1416               	bsf	22,0	;volatile
  2654  01F5                     l1689:	
  2655                           ;PIC_I2C1.c: 63: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2656                           
  2657  01F5  3005               	movlw	5
  2658  01F6  0514               	andwf	20,w	;volatile
  2659  01F7  00F6               	movwf	??_I2C1_Transmit
  2660  01F8  0816               	movf	22,w	;volatile
  2661  01F9  391F               	andlw	31
  2662  01FA  0476               	iorwf	??_I2C1_Transmit,w
  2663  01FB  1D03               	btfss	3,2
  2664  01FC  29F5               	goto	l1689
  2665                           
  2666                           ;PIC_I2C1.c: 64: SSPBUF = address << 1;
  2667  01FD  0020               	movlb	0	; select bank0
  2668  01FE  3520               	lslf	I2C1_Transmit@address,w
  2669  01FF  0024               	movlb	4	; select bank4
  2670  0200  0091               	movwf	17	;volatile
  2671  0201                     l229:	
  2672                           ;PIC_I2C1.c: 65: while(SSPSTATbits.R_nW);
  2673                           
  2674  0201  1914               	btfsc	20,2	;volatile
  2675  0202  2A01               	goto	l229
  2676                           
  2677                           ;PIC_I2C1.c: 67: result = SSPCON2bits.ACKSTAT;
  2678  0203  3000               	movlw	0
  2679  0204  1B16               	btfsc	22,6	;volatile
  2680  0205  3001               	movlw	1
  2681  0206  0020               	movlb	0	; select bank0
  2682  0207  00A3               	movwf	I2C1_Transmit@result
  2683                           
  2684                           ;PIC_I2C1.c: 68: if (!result)
  2685  0208  0823               	movf	I2C1_Transmit@result,w
  2686  0209  1D03               	btfss	3,2
  2687  020A  2A36               	goto	l1713
  2688                           
  2689                           ;PIC_I2C1.c: 69: {
  2690                           ;PIC_I2C1.c: 70: for(uint8_t i=0;i<size;i++)
  2691  020B  01A1               	clrf	I2C1_Transmit@i
  2692  020C  2A11               	goto	l1711
  2693  020D                     l1709:	
  2694                           ;PIC_I2C1.c: 80: break;
  2695                           
  2696  020D  3001               	movlw	1
  2697  020E  00F6               	movwf	??_I2C1_Transmit
  2698  020F  0876               	movf	??_I2C1_Transmit,w
  2699  0210  07A1               	addwf	I2C1_Transmit@i,f
  2700  0211                     l1711:	
  2701  0211  0875               	movf	I2C1_Transmit@size,w
  2702  0212  0221               	subwf	I2C1_Transmit@i,w
  2703  0213  1803               	btfsc	3,0
  2704  0214  2A36               	goto	l1713
  2705  0215                     l1699:	
  2706                           ;PIC_I2C1.c: 71: {
  2707                           ;PIC_I2C1.c: 72: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2708                           
  2709  0215  3005               	movlw	5
  2710  0216  0024               	movlb	4	; select bank4
  2711  0217  0514               	andwf	20,w	;volatile
  2712  0218  00F6               	movwf	??_I2C1_Transmit
  2713  0219  0816               	movf	22,w	;volatile
  2714  021A  391F               	andlw	31
  2715  021B  0476               	iorwf	??_I2C1_Transmit,w
  2716  021C  1D03               	btfss	3,2
  2717  021D  2A15               	goto	l1699
  2718                           
  2719                           ;PIC_I2C1.c: 73: SSPBUF = *(pData+i);
  2720  021E  0020               	movlb	0	; select bank0
  2721  021F  0821               	movf	I2C1_Transmit@i,w
  2722  0220  0774               	addwf	I2C1_Transmit@pData,w
  2723  0221  00F6               	movwf	??_I2C1_Transmit
  2724  0222  0876               	movf	??_I2C1_Transmit,w
  2725  0223  0086               	movwf	6
  2726  0224  0187               	clrf	7
  2727  0225  0801               	movf	1,w
  2728  0226  0024               	movlb	4	; select bank4
  2729  0227  0091               	movwf	17	;volatile
  2730  0228                     l238:	
  2731                           ;PIC_I2C1.c: 74: while(SSPSTATbits.R_nW);
  2732                           
  2733  0228  1914               	btfsc	20,2	;volatile
  2734  0229  2A28               	goto	l238
  2735                           
  2736                           ;PIC_I2C1.c: 76: result = SSPCON2bits.ACKSTAT;
  2737  022A  3000               	movlw	0
  2738  022B  1B16               	btfsc	22,6	;volatile
  2739  022C  3001               	movlw	1
  2740  022D  0020               	movlb	0	; select bank0
  2741  022E  00A3               	movwf	I2C1_Transmit@result
  2742                           
  2743                           ;PIC_I2C1.c: 77: if (result)
  2744  022F  0823               	movf	I2C1_Transmit@result,w
  2745  0230  1903               	btfsc	3,2
  2746  0231  2A0D               	goto	l1709
  2747                           
  2748                           ;PIC_I2C1.c: 78: {
  2749                           ;PIC_I2C1.c: 79: result = 2;
  2750  0232  3002               	movlw	2
  2751  0233  00F6               	movwf	??_I2C1_Transmit
  2752  0234  0876               	movf	??_I2C1_Transmit,w
  2753  0235  00A3               	movwf	I2C1_Transmit@result
  2754  0236                     l1713:	
  2755                           ;PIC_I2C1.c: 81: }
  2756                           ;PIC_I2C1.c: 82: }
  2757                           ;PIC_I2C1.c: 83: }
  2758                           ;PIC_I2C1.c: 85: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2759                           
  2760  0236  3005               	movlw	5
  2761  0237  0024               	movlb	4	; select bank4
  2762  0238  0514               	andwf	20,w	;volatile
  2763  0239  00F6               	movwf	??_I2C1_Transmit
  2764  023A  0816               	movf	22,w	;volatile
  2765  023B  391F               	andlw	31
  2766  023C  0476               	iorwf	??_I2C1_Transmit,w
  2767  023D  1D03               	btfss	3,2
  2768  023E  2A36               	goto	l1713
  2769                           
  2770                           ;PIC_I2C1.c: 86: SSPCON2bits.PEN = 1;
  2771  023F  1516               	bsf	22,2	;volatile
  2772                           
  2773                           ;PIC_I2C1.c: 87: break;
  2774  0240  2A6E               	goto	l1733
  2775  0241                     l247:	
  2776                           ;PIC_I2C1.c: 89: case I2C_MODE_SLAVE:
  2777                           
  2778                           
  2779                           ;PIC_I2C1.c: 90: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2780  0241  0024               	movlb	4	; select bank4
  2781  0242  1D94               	btfss	20,3	;volatile
  2782  0243  1E14               	btfss	20,4	;volatile
  2783  0244  2A63               	goto	l1727
  2784                           
  2785                           ;PIC_I2C1.c: 91: {
  2786                           ;PIC_I2C1.c: 92: for(uint8_t i = 0;i<size;i++)
  2787  0245  0020               	movlb	0	; select bank0
  2788  0246  01A2               	clrf	I2C1_Transmit@i_450
  2789  0247                     l1723:	
  2790  0247  0875               	movf	I2C1_Transmit@size,w
  2791  0248  0222               	subwf	I2C1_Transmit@i_450,w
  2792  0249  1803               	btfsc	3,0
  2793  024A  2A5E               	goto	l1725
  2794                           
  2795                           ;PIC_I2C1.c: 93: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2796  024B  0822               	movf	I2C1_Transmit@i_450,w
  2797  024C  0774               	addwf	I2C1_Transmit@pData,w
  2798  024D  00F6               	movwf	??_I2C1_Transmit
  2799  024E  0876               	movf	??_I2C1_Transmit,w
  2800  024F  0086               	movwf	6
  2801  0250  0187               	clrf	7
  2802  0251  0801               	movf	1,w
  2803  0252  00F7               	movwf	??_I2C1_Transmit+1
  2804  0253  0822               	movf	I2C1_Transmit@i_450,w
  2805  0254  3E5B               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2806  0255  0086               	movwf	6
  2807  0256  0187               	clrf	7
  2808  0257  0877               	movf	??_I2C1_Transmit+1,w
  2809  0258  0081               	movwf	1
  2810  0259  3001               	movlw	1
  2811  025A  00F6               	movwf	??_I2C1_Transmit
  2812  025B  0876               	movf	??_I2C1_Transmit,w
  2813  025C  07A2               	addwf	I2C1_Transmit@i_450,f
  2814  025D  2A47               	goto	l1723
  2815  025E                     l1725:	
  2816                           
  2817                           ;PIC_I2C1.c: 94: result = size;
  2818  025E  0875               	movf	I2C1_Transmit@size,w
  2819  025F  00F6               	movwf	??_I2C1_Transmit
  2820  0260  0876               	movf	??_I2C1_Transmit,w
  2821  0261  00A3               	movwf	I2C1_Transmit@result
  2822                           
  2823                           ;PIC_I2C1.c: 95: }
  2824  0262  2A6E               	goto	l1733
  2825  0263                     l1727:	
  2826                           
  2827                           ;PIC_I2C1.c: 96: else
  2828                           ;PIC_I2C1.c: 97: result = 0;
  2829  0263  0020               	movlb	0	; select bank0
  2830  0264  01A3               	clrf	I2C1_Transmit@result
  2831                           
  2832                           ;PIC_I2C1.c: 99: }
  2833                           
  2834                           ;PIC_I2C1.c: 98: break;
  2835  0265  2A6E               	goto	l1733
  2836  0266                     l1731:	
  2837  0266  086D               	movf	_I2C1_Config+18,w
  2838                           
  2839                           ; Switch size 1, requested type "space"
  2840                           ; Number of cases is 2, Range of values is 0 to 1
  2841                           ; switch strategies available:
  2842                           ; Name         Instructions Cycles
  2843                           ; simple_byte            7     4 (average)
  2844                           ; direct_byte           10     6 (fixed)
  2845                           ; jumptable            260     6 (fixed)
  2846                           ;	Chosen strategy is simple_byte
  2847  0267  3A00               	xorlw	0	; case 0
  2848  0268  1903               	skipnz
  2849  0269  29EB               	goto	l1687
  2850  026A  3A01               	xorlw	1	; case 1
  2851  026B  1903               	skipnz
  2852  026C  2A41               	goto	l247
  2853  026D  2A6E               	goto	l1733
  2854  026E                     l1733:	
  2855                           
  2856                           ;PIC_I2C1.c: 101: return result;
  2857  026E  0020               	movlb	0	; select bank0
  2858  026F  0823               	movf	I2C1_Transmit@result,w
  2859  0270  0008               	return
  2860  0271                     __end_of_I2C1_Transmit:	
  2861                           
  2862                           	psect	text13
  2863  0465                     __ptext13:	
  2864 ;; *************** function _I2C_Receive *****************
  2865 ;; Defined at:
  2866 ;;		line 18 in file "PIC_I2C.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  I2Cx            1    wreg     enum E2417
  2869 ;;  address         1    4[BANK0 ] unsigned char 
  2870 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  2871 ;;		 -> MPU6050_Init@data(1), MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2872 ;;  size            1    6[BANK0 ] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  I2Cx            1   10[BANK0 ] enum E2417
  2875 ;;  result          1   11[BANK0 ] char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      char 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1
  2885 ;;      Params:         0       3       0
  2886 ;;      Locals:         0       2       0
  2887 ;;      Temps:          0       3       0
  2888 ;;      Totals:         0       8       0
  2889 ;;Total ram usage:        8 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    4
  2892 ;; This function calls:
  2893 ;;		_I2C1_Receive
  2894 ;; This function is called by:
  2895 ;;		_MPU6050_Read_Data
  2896 ;;		_MPU6050_Read_MultiData
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _I2C_Receive
  2902  0465                     _I2C_Receive:	
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2906                           ;I2C_Receive@I2Cx stored from wreg
  2907  0465  0020               	movlb	0	; select bank0
  2908  0466  00AA               	movwf	I2C_Receive@I2Cx
  2909                           
  2910                           ;PIC_I2C.c: 20: int8_t result = -1;
  2911  0467  01AB               	clrf	I2C_Receive@result
  2912  0468  03AB               	decf	I2C_Receive@result,f
  2913                           
  2914                           ;PIC_I2C.c: 22: switch(I2Cx)
  2915  0469  2C79               	goto	l1805
  2916  046A                     l1801:	
  2917                           ;PIC_I2C.c: 23: {
  2918                           ;PIC_I2C.c: 24: case I2C1_MODULE:
  2919                           
  2920                           
  2921                           ;PIC_I2C.c: 25: result = I2C1_Receive(address,pData,size);
  2922  046A  0825               	movf	I2C_Receive@pData,w
  2923  046B  00A7               	movwf	??_I2C_Receive
  2924  046C  0827               	movf	??_I2C_Receive,w
  2925  046D  00F4               	movwf	I2C1_Receive@pData
  2926  046E  0826               	movf	I2C_Receive@size,w
  2927  046F  00A8               	movwf	??_I2C_Receive+1
  2928  0470  0828               	movf	??_I2C_Receive+1,w
  2929  0471  00F5               	movwf	I2C1_Receive@size
  2930  0472  0824               	movf	I2C_Receive@address,w
  2931  0473  201C               	fcall	_I2C1_Receive
  2932  0474  0020               	movlb	0	; select bank0
  2933  0475  00A9               	movwf	??_I2C_Receive+2
  2934  0476  0829               	movf	??_I2C_Receive+2,w
  2935  0477  00AB               	movwf	I2C_Receive@result
  2936                           
  2937                           ;PIC_I2C.c: 27: }
  2938                           
  2939                           ;PIC_I2C.c: 26: break;
  2940  0478  2C7E               	goto	l1807
  2941  0479                     l1805:	
  2942  0479  082A               	movf	I2C_Receive@I2Cx,w
  2943                           
  2944                           ; Switch size 1, requested type "space"
  2945                           ; Number of cases is 1, Range of values is 0 to 0
  2946                           ; switch strategies available:
  2947                           ; Name         Instructions Cycles
  2948                           ; simple_byte            4     3 (average)
  2949                           ; direct_byte            8     6 (fixed)
  2950                           ; jumptable            260     6 (fixed)
  2951                           ;	Chosen strategy is simple_byte
  2952  047A  3A00               	xorlw	0	; case 0
  2953  047B  1903               	skipnz
  2954  047C  2C6A               	goto	l1801
  2955  047D  2C7E               	goto	l1807
  2956  047E                     l1807:	
  2957                           
  2958                           ;PIC_I2C.c: 28: return result;
  2959  047E  082B               	movf	I2C_Receive@result,w
  2960  047F  0008               	return
  2961  0480                     __end_of_I2C_Receive:	
  2962                           
  2963                           	psect	text14
  2964  001C                     __ptext14:	
  2965 ;; *************** function _I2C1_Receive *****************
  2966 ;; Defined at:
  2967 ;;		line 104 in file "PIC_I2C1.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  address         1    wreg     unsigned char 
  2970 ;;  pData           1    4[COMMON] PTR unsigned char 
  2971 ;;		 -> MPU6050_Init@data(1), MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2972 ;;  size            1    5[COMMON] unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  address         1    0[BANK0 ] unsigned char 
  2975 ;;  i               1    3[BANK0 ] unsigned char 
  2976 ;;  i               1    2[BANK0 ] unsigned char 
  2977 ;;  result          1    1[BANK0 ] char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      char 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1
  2987 ;;      Params:         2       0       0
  2988 ;;      Locals:         0       4       0
  2989 ;;      Temps:          2       0       0
  2990 ;;      Totals:         4       4       0
  2991 ;;Total ram usage:        8 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    3
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_I2C_Receive
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _I2C1_Receive
  3003  001C                     _I2C1_Receive:	
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  3007                           ;I2C1_Receive@address stored from wreg
  3008  001C  0020               	movlb	0	; select bank0
  3009  001D  00A0               	movwf	I2C1_Receive@address
  3010                           
  3011                           ;PIC_I2C1.c: 106: int8_t result;
  3012                           ;PIC_I2C1.c: 108: switch(I2C1_Config.Mode)
  3013  001E  28AE               	goto	l1781
  3014  001F                     l1739:	
  3015                           ;PIC_I2C1.c: 111: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3016                           
  3017                           ;PIC_I2C1.c: 109: {
  3018                           ;PIC_I2C1.c: 110: case I2C_MODE_MASTER:
  3019                           
  3020  001F  3005               	movlw	5
  3021  0020  0024               	movlb	4	; select bank4
  3022  0021  0514               	andwf	20,w	;volatile
  3023  0022  00F6               	movwf	??_I2C1_Receive
  3024  0023  0816               	movf	22,w	;volatile
  3025  0024  391F               	andlw	31
  3026  0025  0476               	iorwf	??_I2C1_Receive,w
  3027  0026  1D03               	btfss	3,2
  3028  0027  281F               	goto	l1739
  3029                           
  3030                           ;PIC_I2C1.c: 112: SSPCON2bits.SEN = 1;
  3031  0028  1416               	bsf	22,0	;volatile
  3032  0029                     l1741:	
  3033                           ;PIC_I2C1.c: 114: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3034                           
  3035  0029  3005               	movlw	5
  3036  002A  0514               	andwf	20,w	;volatile
  3037  002B  00F6               	movwf	??_I2C1_Receive
  3038  002C  0816               	movf	22,w	;volatile
  3039  002D  391F               	andlw	31
  3040  002E  0476               	iorwf	??_I2C1_Receive,w
  3041  002F  1D03               	btfss	3,2
  3042  0030  2829               	goto	l1741
  3043                           
  3044                           ;PIC_I2C1.c: 115: SSPBUF = ((address << 1)|0x01);
  3045  0031  1403               	setc
  3046  0032  0020               	movlb	0	; select bank0
  3047  0033  0D20               	rlf	I2C1_Receive@address,w
  3048  0034  0024               	movlb	4	; select bank4
  3049  0035  0091               	movwf	17	;volatile
  3050  0036                     l264:	
  3051                           ;PIC_I2C1.c: 116: while(SSPSTATbits.R_nW);
  3052                           
  3053  0036  1914               	btfsc	20,2	;volatile
  3054  0037  2836               	goto	l264
  3055                           
  3056                           ;PIC_I2C1.c: 118: result = SSPCON2bits.ACKSTAT;
  3057  0038  3000               	movlw	0
  3058  0039  1B16               	btfsc	22,6	;volatile
  3059  003A  3001               	movlw	1
  3060  003B  0020               	movlb	0	; select bank0
  3061  003C  00A1               	movwf	I2C1_Receive@result
  3062                           
  3063                           ;PIC_I2C1.c: 119: if (!result)
  3064  003D  0821               	movf	I2C1_Receive@result,w
  3065  003E  1D03               	btfss	3,2
  3066  003F  287E               	goto	l1765
  3067                           
  3068                           ;PIC_I2C1.c: 120: {
  3069                           ;PIC_I2C1.c: 121: for (uint8_t i=0;i<size;i++)
  3070  0040  01A2               	clrf	I2C1_Receive@i
  3071  0041                     l1763:	
  3072  0041  0875               	movf	I2C1_Receive@size,w
  3073  0042  0222               	subwf	I2C1_Receive@i,w
  3074  0043  1803               	btfsc	3,0
  3075  0044  287E               	goto	l1765
  3076  0045                     l1751:	
  3077                           ;PIC_I2C1.c: 122: {
  3078                           ;PIC_I2C1.c: 123: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3079                           
  3080  0045  3005               	movlw	5
  3081  0046  0024               	movlb	4	; select bank4
  3082  0047  0514               	andwf	20,w	;volatile
  3083  0048  00F6               	movwf	??_I2C1_Receive
  3084  0049  0816               	movf	22,w	;volatile
  3085  004A  391F               	andlw	31
  3086  004B  0476               	iorwf	??_I2C1_Receive,w
  3087  004C  1D03               	btfss	3,2
  3088  004D  2845               	goto	l1751
  3089                           
  3090                           ;PIC_I2C1.c: 124: SSPCON2bits.RCEN = 1;
  3091  004E  1596               	bsf	22,3	;volatile
  3092  004F                     l273:	
  3093                           ;PIC_I2C1.c: 125: while(SSPCON2bits.RCEN);
  3094                           
  3095  004F  1996               	btfsc	22,3	;volatile
  3096  0050  284F               	goto	l273
  3097                           
  3098                           ;PIC_I2C1.c: 126: *(pData+i) = SSPBUF;
  3099  0051  0811               	movf	17,w	;volatile
  3100  0052  00F6               	movwf	??_I2C1_Receive
  3101  0053  0020               	movlb	0	; select bank0
  3102  0054  0822               	movf	I2C1_Receive@i,w
  3103  0055  0774               	addwf	I2C1_Receive@pData,w
  3104  0056  00F7               	movwf	??_I2C1_Receive+1
  3105  0057  0877               	movf	??_I2C1_Receive+1,w
  3106  0058  0086               	movwf	6
  3107  0059  0187               	clrf	7
  3108  005A  0876               	movf	??_I2C1_Receive,w
  3109  005B  0081               	movwf	1
  3110  005C                     l1755:	
  3111                           ;PIC_I2C1.c: 127: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3112                           
  3113  005C  3005               	movlw	5
  3114  005D  0024               	movlb	4	; select bank4
  3115  005E  0514               	andwf	20,w	;volatile
  3116  005F  00F6               	movwf	??_I2C1_Receive
  3117  0060  0816               	movf	22,w	;volatile
  3118  0061  391F               	andlw	31
  3119  0062  0476               	iorwf	??_I2C1_Receive,w
  3120  0063  1D03               	btfss	3,2
  3121  0064  285C               	goto	l1755
  3122                           
  3123                           ;PIC_I2C1.c: 128: if (i == size-1)
  3124  0065  0875               	movf	I2C1_Receive@size,w
  3125  0066  3EFF               	addlw	255
  3126  0067  00F6               	movwf	??_I2C1_Receive
  3127  0068  30FF               	movlw	255
  3128  0069  1803               	skipnc
  3129  006A  3000               	movlw	0
  3130  006B  00F7               	movwf	??_I2C1_Receive+1
  3131  006C  0020               	movlb	0	; select bank0
  3132  006D  0822               	movf	I2C1_Receive@i,w
  3133  006E  0676               	xorwf	??_I2C1_Receive,w
  3134  006F  0477               	iorwf	??_I2C1_Receive+1,w
  3135  0070  1D03               	skipz
  3136  0071  2875               	goto	l279
  3137                           
  3138                           ;PIC_I2C1.c: 129: SSPCON2bits.ACKDT = 1;
  3139  0072  0024               	movlb	4	; select bank4
  3140  0073  1696               	bsf	22,5	;volatile
  3141  0074  2877               	goto	l280
  3142  0075                     l279:	
  3143                           
  3144                           ;PIC_I2C1.c: 130: else
  3145                           ;PIC_I2C1.c: 131: SSPCON2bits.ACKDT = 0;
  3146  0075  0024               	movlb	4	; select bank4
  3147  0076  1296               	bcf	22,5	;volatile
  3148  0077                     l280:	
  3149                           
  3150                           ;PIC_I2C1.c: 132: SSPCON2bits.ACKEN = 1;
  3151  0077  1616               	bsf	22,4	;volatile
  3152  0078  3001               	movlw	1
  3153  0079  00F6               	movwf	??_I2C1_Receive
  3154  007A  0876               	movf	??_I2C1_Receive,w
  3155  007B  0020               	movlb	0	; select bank0
  3156  007C  07A2               	addwf	I2C1_Receive@i,f
  3157  007D  2841               	goto	l1763
  3158  007E                     l1765:	
  3159                           ;PIC_I2C1.c: 133: }
  3160                           ;PIC_I2C1.c: 134: }
  3161                           ;PIC_I2C1.c: 136: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3162                           
  3163  007E  3005               	movlw	5
  3164  007F  0024               	movlb	4	; select bank4
  3165  0080  0514               	andwf	20,w	;volatile
  3166  0081  00F6               	movwf	??_I2C1_Receive
  3167  0082  0816               	movf	22,w	;volatile
  3168  0083  391F               	andlw	31
  3169  0084  0476               	iorwf	??_I2C1_Receive,w
  3170  0085  1D03               	btfss	3,2
  3171  0086  287E               	goto	l1765
  3172                           
  3173                           ;PIC_I2C1.c: 137: SSPCON2bits.PEN = 1;
  3174  0087  1516               	bsf	22,2	;volatile
  3175                           
  3176                           ;PIC_I2C1.c: 138: break;
  3177  0088  28B6               	goto	l1783
  3178  0089                     l286:	
  3179                           ;PIC_I2C1.c: 140: case I2C_MODE_SLAVE:
  3180                           
  3181                           
  3182                           ;PIC_I2C1.c: 141: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  3183  0089  0024               	movlb	4	; select bank4
  3184  008A  1D94               	btfss	20,3	;volatile
  3185  008B  1E14               	btfss	20,4	;volatile
  3186  008C  28B6               	goto	l1783
  3187                           
  3188                           ;PIC_I2C1.c: 142: {
  3189                           ;PIC_I2C1.c: 143: for(uint8_t i = 0;i<size;i++)
  3190  008D  0020               	movlb	0	; select bank0
  3191  008E  01A3               	clrf	I2C1_Receive@i_457
  3192  008F                     l1775:	
  3193  008F  0875               	movf	I2C1_Receive@size,w
  3194  0090  0223               	subwf	I2C1_Receive@i_457,w
  3195  0091  1803               	btfsc	3,0
  3196  0092  28A6               	goto	l1777
  3197                           
  3198                           ;PIC_I2C1.c: 144: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  3199  0093  0823               	movf	I2C1_Receive@i_457,w
  3200  0094  3E63               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3201  0095  0086               	movwf	6
  3202  0096  0187               	clrf	7
  3203  0097  0801               	movf	1,w
  3204  0098  00F6               	movwf	??_I2C1_Receive
  3205  0099  0823               	movf	I2C1_Receive@i_457,w
  3206  009A  0774               	addwf	I2C1_Receive@pData,w
  3207  009B  00F7               	movwf	??_I2C1_Receive+1
  3208  009C  0877               	movf	??_I2C1_Receive+1,w
  3209  009D  0086               	movwf	6
  3210  009E  0187               	clrf	7
  3211  009F  0876               	movf	??_I2C1_Receive,w
  3212  00A0  0081               	movwf	1
  3213  00A1  3001               	movlw	1
  3214  00A2  00F6               	movwf	??_I2C1_Receive
  3215  00A3  0876               	movf	??_I2C1_Receive,w
  3216  00A4  07A3               	addwf	I2C1_Receive@i_457,f
  3217  00A5  288F               	goto	l1775
  3218  00A6                     l1777:	
  3219                           
  3220                           ;PIC_I2C1.c: 145: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  3221  00A6  3063               	movlw	(low (_I2C1_Config+8))& (0+255)
  3222  00A7  3AFF               	xorlw	255
  3223  00A8  3E01               	addlw	1
  3224  00A9  076C               	addwf	_I2C1_Config+17,w
  3225  00AA  00F6               	movwf	??_I2C1_Receive
  3226  00AB  0876               	movf	??_I2C1_Receive,w
  3227  00AC  00A1               	movwf	I2C1_Receive@result
  3228                           
  3229                           ;PIC_I2C1.c: 148: }
  3230                           
  3231                           ;PIC_I2C1.c: 146: }
  3232                           ;PIC_I2C1.c: 147: break;
  3233  00AD  28B6               	goto	l1783
  3234  00AE                     l1781:	
  3235  00AE  086D               	movf	_I2C1_Config+18,w
  3236                           
  3237                           ; Switch size 1, requested type "space"
  3238                           ; Number of cases is 2, Range of values is 0 to 1
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte            7     4 (average)
  3242                           ; direct_byte           10     6 (fixed)
  3243                           ; jumptable            260     6 (fixed)
  3244                           ;	Chosen strategy is simple_byte
  3245  00AF  3A00               	xorlw	0	; case 0
  3246  00B0  1903               	skipnz
  3247  00B1  281F               	goto	l1739
  3248  00B2  3A01               	xorlw	1	; case 1
  3249  00B3  1903               	skipnz
  3250  00B4  2889               	goto	l286
  3251  00B5  28B6               	goto	l1783
  3252  00B6                     l1783:	
  3253                           
  3254                           ;PIC_I2C1.c: 150: return result;
  3255  00B6  0020               	movlb	0	; select bank0
  3256  00B7  0821               	movf	I2C1_Receive@result,w
  3257  00B8  0008               	return
  3258  00B9                     __end_of_I2C1_Receive:	
  3259                           
  3260                           	psect	text15
  3261  0271                     __ptext15:	
  3262 ;; *************** function _I2C1_Init *****************
  3263 ;; Defined at:
  3264 ;;		line 8 in file "PIC_I2C1.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  I2C1_Init_PO    2    0[BANK0 ] PTR FTN()void 
  3267 ;;		 -> I2C_InitPort(1), 
  3268 ;;  address         1    2[BANK0 ] unsigned char 
  3269 ;;  mode            1    3[BANK0 ] enum E2409
  3270 ;;  Speed           1    4[BANK0 ] enum E2413
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1
  3282 ;;      Params:         0       5       0
  3283 ;;      Locals:         0       0       0
  3284 ;;      Temps:          1       0       0
  3285 ;;      Totals:         1       5       0
  3286 ;;Total ram usage:        6 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    4
  3289 ;; This function calls:
  3290 ;;		_I2C_InitPort
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function _I2C1_Init
  3298  0271                     _I2C1_Init:	
  3299                           
  3300                           ;PIC_I2C1.c: 10: I2C1_Init_PORT();
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _I2C1_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3304  0271  0020               	movlb	0	; select bank0
  3305  0272  0821               	movf	I2C1_Init@I2C1_Init_PORT+1,w
  3306  0273  008A               	movwf	10
  3307  0274  0820               	movf	I2C1_Init@I2C1_Init_PORT,w
  3308  0275  000A               	callw
  3309  0276  3182               	pagesel	$
  3310                           
  3311                           ;PIC_I2C1.c: 11: I2C1_Config.Mode = mode;
  3312  0277  0020               	movlb	0	; select bank0
  3313  0278  0823               	movf	I2C1_Init@mode,w
  3314  0279  00F5               	movwf	??_I2C1_Init
  3315  027A  0875               	movf	??_I2C1_Init,w
  3316  027B  00ED               	movwf	_I2C1_Config+18
  3317                           
  3318                           ;PIC_I2C1.c: 13: switch(mode)
  3319  027C  2AB4               	goto	l1893
  3320  027D                     l209:	
  3321                           ;PIC_I2C1.c: 14: {
  3322                           ;PIC_I2C1.c: 15: case I2C_MODE_MASTER:
  3323                           
  3324                           
  3325                           ;PIC_I2C1.c: 16: SSPCON1 |= (0x08<<0);
  3326  027D  0024               	movlb	4	; select bank4
  3327  027E  1595               	bsf	21,3	;volatile
  3328                           
  3329                           ;PIC_I2C1.c: 17: if(Speed==I2C_SPEED_STANDARD)
  3330  027F  0020               	movlb	0	; select bank0
  3331  0280  0824               	movf	I2C1_Init@Speed,w
  3332  0281  1D03               	btfss	3,2
  3333  0282  2A87               	goto	l1867
  3334                           
  3335                           ;PIC_I2C1.c: 18: {
  3336                           ;PIC_I2C1.c: 19: SSPSTAT |= (1<<7);
  3337  0283  0024               	movlb	4	; select bank4
  3338  0284  1794               	bsf	20,7	;volatile
  3339                           
  3340                           ;PIC_I2C1.c: 20: SSPADD = 0x4F;
  3341  0285  304F               	movlw	79
  3342  0286  2A91               	goto	L1
  3343  0287                     l1867:	
  3344                           ;PIC_I2C1.c: 21: }
  3345                           
  3346                           
  3347                           ;PIC_I2C1.c: 22: else if(Speed==I2C_SPEED_HIGH)
  3348  0287  0020               	movlb	0	; select bank0
  3349  0288  0324               	decf	I2C1_Init@Speed,w
  3350  0289  1D03               	btfss	3,2
  3351  028A  2A92               	goto	l1873
  3352                           
  3353                           ;PIC_I2C1.c: 23: {
  3354                           ;PIC_I2C1.c: 24: SSPSTAT &= ~(1<<7);
  3355  028B  307F               	movlw	127
  3356  028C  00F5               	movwf	??_I2C1_Init
  3357  028D  0875               	movf	??_I2C1_Init,w
  3358  028E  0024               	movlb	4	; select bank4
  3359  028F  0594               	andwf	20,f	;volatile
  3360                           
  3361                           ;PIC_I2C1.c: 25: SSPADD = 0x13;
  3362  0290  3013               	movlw	19
  3363  0291                     L1:	
  3364  0291  0092               	movwf	18	;volatile
  3365  0292                     l1873:	
  3366                           
  3367                           ;PIC_I2C1.c: 26: }
  3368                           ;PIC_I2C1.c: 27: SSPCON1bits.SSPEN = 1;
  3369  0292  0024               	movlb	4	; select bank4
  3370  0293  2AB2               	goto	l1889
  3371  0294                     l1875:	
  3372                           ;PIC_I2C1.c: 30: case I2C_MODE_SLAVE:
  3373                           
  3374                           ;PIC_I2C1.c: 28: break;
  3375                           
  3376                           
  3377                           ;PIC_I2C1.c: 31: SSPSTAT = 0x00;
  3378  0294  0024               	movlb	4	; select bank4
  3379  0295  0194               	clrf	20	;volatile
  3380                           
  3381                           ;PIC_I2C1.c: 32: if(Speed==I2C_SPEED_STANDARD)
  3382  0296  0020               	movlb	0	; select bank0
  3383  0297  0824               	movf	I2C1_Init@Speed,w
  3384  0298  1D03               	btfss	3,2
  3385  0299  2A9D               	goto	l1881
  3386                           
  3387                           ;PIC_I2C1.c: 33: SSPSTAT |= (1<<7);
  3388  029A  0024               	movlb	4	; select bank4
  3389  029B  1794               	bsf	20,7	;volatile
  3390  029C  2AA6               	goto	l216
  3391  029D                     l1881:	
  3392                           
  3393                           ;PIC_I2C1.c: 34: else if(Speed==I2C_SPEED_HIGH)
  3394  029D  0020               	movlb	0	; select bank0
  3395  029E  0324               	decf	I2C1_Init@Speed,w
  3396  029F  1D03               	btfss	3,2
  3397  02A0  2AA6               	goto	l216
  3398                           
  3399                           ;PIC_I2C1.c: 35: SSPSTAT &= ~(1<<7);
  3400  02A1  307F               	movlw	127
  3401  02A2  00F5               	movwf	??_I2C1_Init
  3402  02A3  0875               	movf	??_I2C1_Init,w
  3403  02A4  0024               	movlb	4	; select bank4
  3404  02A5  0594               	andwf	20,f	;volatile
  3405  02A6                     l216:	
  3406                           
  3407                           ;PIC_I2C1.c: 37: SSPCON1 |= (0x06<<0);
  3408  02A6  3006               	movlw	6
  3409  02A7  00F5               	movwf	??_I2C1_Init
  3410  02A8  0875               	movf	??_I2C1_Init,w
  3411  02A9  0024               	movlb	4	; select bank4
  3412  02AA  0495               	iorwf	21,f	;volatile
  3413                           
  3414                           ;PIC_I2C1.c: 38: SSPCON2bits.SEN= 1;
  3415  02AB  1416               	bsf	22,0	;volatile
  3416                           
  3417                           ;PIC_I2C1.c: 39: SSPADD = address << 1;
  3418  02AC  0020               	movlb	0	; select bank0
  3419  02AD  3522               	lslf	I2C1_Init@address,w
  3420  02AE  0024               	movlb	4	; select bank4
  3421  02AF  0092               	movwf	18	;volatile
  3422                           
  3423                           ;PIC_I2C1.c: 40: SSPMSK = 0xFE;
  3424  02B0  30FE               	movlw	254
  3425  02B1  0093               	movwf	19	;volatile
  3426  02B2                     l1889:	
  3427                           
  3428                           ;PIC_I2C1.c: 41: SSPCON1bits.SSPEN = 1;
  3429  02B2  1695               	bsf	21,5	;volatile
  3430                           
  3431                           ;PIC_I2C1.c: 43: }
  3432                           
  3433                           ;PIC_I2C1.c: 42: break;
  3434  02B3  2ABD               	goto	l213
  3435  02B4                     l1893:	
  3436  02B4  0020               	movlb	0	; select bank0
  3437  02B5  0823               	movf	I2C1_Init@mode,w
  3438                           
  3439                           ; Switch size 1, requested type "space"
  3440                           ; Number of cases is 2, Range of values is 0 to 1
  3441                           ; switch strategies available:
  3442                           ; Name         Instructions Cycles
  3443                           ; simple_byte            7     4 (average)
  3444                           ; direct_byte           10     6 (fixed)
  3445                           ; jumptable            260     6 (fixed)
  3446                           ;	Chosen strategy is simple_byte
  3447  02B6  3A00               	xorlw	0	; case 0
  3448  02B7  1903               	skipnz
  3449  02B8  2A7D               	goto	l209
  3450  02B9  3A01               	xorlw	1	; case 1
  3451  02BA  1903               	skipnz
  3452  02BB  2A94               	goto	l1875
  3453  02BC  2ABD               	goto	l213
  3454  02BD                     l213:	
  3455                           
  3456                           ;PIC_I2C1.c: 44: SSP1IE = 1;
  3457  02BD  0021               	movlb	1	; select bank1
  3458  02BE  1591               	bsf	17,3	;volatile
  3459                           
  3460                           ;PIC_I2C1.c: 45: BCL1IE = 1;
  3461  02BF  1592               	bsf	18,3	;volatile
  3462                           
  3463                           ;PIC_I2C1.c: 46: SSP1IF = 0;
  3464  02C0  0020               	movlb	0	; select bank0
  3465  02C1  1191               	bcf	17,3	;volatile
  3466                           
  3467                           ;PIC_I2C1.c: 47: BCL1IF = 0;
  3468  02C2  1192               	bcf	18,3	;volatile
  3469                           
  3470                           ;PIC_I2C1.c: 49: PEIE = 1;
  3471  02C3  170B               	bsf	11,6	;volatile
  3472                           
  3473                           ;PIC_I2C1.c: 50: GIE = 1;
  3474  02C4  178B               	bsf	11,7	;volatile
  3475  02C5  0008               	return
  3476  02C6                     __end_of_I2C1_Init:	
  3477                           
  3478                           	psect	text16
  3479  04C5                     __ptext16:	
  3480 ;; *************** function _I2C_InitPort *****************
  3481 ;; Defined at:
  3482 ;;		line 66 in file "main.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1
  3496 ;;      Params:         0       0       0
  3497 ;;      Locals:         0       0       0
  3498 ;;      Temps:          1       0       0
  3499 ;;      Totals:         1       0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;;		_I2C1_Init
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _I2C_InitPort
  3513  04C5                     _I2C_InitPort:	
  3514                           
  3515                           ;main.c: 68: TRISA |= (1<<1);
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _I2C_InitPort: [wreg+status,2+status,0]
  3519  04C5  0021               	movlb	1	; select bank1
  3520  04C6  148C               	bsf	12,1	;volatile
  3521                           
  3522                           ;main.c: 69: TRISA |= (1<<2);
  3523  04C7  150C               	bsf	12,2	;volatile
  3524                           
  3525                           ;main.c: 71: ANSELA &= ~(1<<1);
  3526  04C8  30FD               	movlw	253
  3527  04C9  00F4               	movwf	??_I2C_InitPort
  3528  04CA  0874               	movf	??_I2C_InitPort,w
  3529  04CB  0023               	movlb	3	; select bank3
  3530  04CC  058C               	andwf	12,f	;volatile
  3531                           
  3532                           ;main.c: 72: ANSELA &= ~(1<<2);
  3533  04CD  30FB               	movlw	251
  3534  04CE  00F4               	movwf	??_I2C_InitPort
  3535  04CF  0874               	movf	??_I2C_InitPort,w
  3536  04D0  058C               	andwf	12,f	;volatile
  3537  04D1  0008               	return
  3538  04D2                     __end_of_I2C_InitPort:	
  3539                           
  3540                           	psect	text17
  3541  04D2                     __ptext17:	
  3542 ;; *************** function _Basic_Init *****************
  3543 ;; Defined at:
  3544 ;;		line 43 in file "main.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1
  3558 ;;      Params:         0       0       0
  3559 ;;      Locals:         0       0       0
  3560 ;;      Temps:          0       0       0
  3561 ;;      Totals:         0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    3
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _Basic_Init
  3574  04D2                     _Basic_Init:	
  3575                           
  3576                           ;main.c: 45: OSCCON = 0xF0;
  3577                           
  3578                           ;incstack = 0
  3579                           ; Regs used in _Basic_Init: [wreg+status,2]
  3580  04D2  30F0               	movlw	240
  3581  04D3  0021               	movlb	1	; select bank1
  3582  04D4  0099               	movwf	25	;volatile
  3583                           
  3584                           ;main.c: 49: TRISA = 0x00;
  3585  04D5  018C               	clrf	12	;volatile
  3586                           
  3587                           ;main.c: 50: ANSELA = 0x00;
  3588  04D6  0023               	movlb	3	; select bank3
  3589  04D7  018C               	clrf	12	;volatile
  3590                           
  3591                           ;main.c: 51: WPUA = 0x00;
  3592  04D8  0024               	movlb	4	; select bank4
  3593  04D9  018C               	clrf	12	;volatile
  3594                           
  3595                           ;main.c: 54: APFCON = 0x00;
  3596  04DA  0022               	movlb	2	; select bank2
  3597  04DB  019D               	clrf	29	;volatile
  3598                           
  3599                           ;main.c: 56: PORTA = 0x00;
  3600  04DC  0020               	movlb	0	; select bank0
  3601  04DD  018C               	clrf	12	;volatile
  3602  04DE  0008               	return
  3603  04DF                     __end_of_Basic_Init:	
  3604                           
  3605                           	psect	intentry
  3606  0004                     __pintentry:	
  3607 ;; *************** function _Handle *****************
  3608 ;; Defined at:
  3609 ;;		line 37 in file "main.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;		None
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1
  3623 ;;      Params:         0       0       0
  3624 ;;      Locals:         0       0       0
  3625 ;;      Temps:          1       0       0
  3626 ;;      Totals:         1       0       0
  3627 ;;Total ram usage:        1 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    2
  3630 ;; This function calls:
  3631 ;;		_I2C_Interrupt
  3632 ;;		_UART_Interrupt
  3633 ;; This function is called by:
  3634 ;;		Interrupt level 1
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638  0004                     _Handle:	
  3639                           
  3640                           ;incstack = 0
  3641  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3642                           
  3643                           ; Regs used in _Handle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3644  0005  3180               	pagesel	$
  3645  0006  0020               	movlb	0	; select bank0
  3646  0007  087F               	movf	127,w
  3647  0008  00F3               	movwf	??_Handle
  3648                           
  3649                           ;main.c: 39: UART_Interrupt();
  3650  0009  23D9               	fcall	_UART_Interrupt
  3651                           
  3652                           ;main.c: 40: I2C_Interrupt();
  3653  000A  24F1               	fcall	_I2C_Interrupt
  3654  000B  0873               	movf	??_Handle,w
  3655  000C  0020               	movlb	0	; select bank0
  3656  000D  00FF               	movwf	127
  3657  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3658  000F  0009               	retfie
  3659  0010                     __end_of_Handle:	
  3660                           
  3661                           	psect	text19
  3662  03D9                     __ptext19:	
  3663 ;; *************** function _UART_Interrupt *****************
  3664 ;; Defined at:
  3665 ;;		line 107 in file "PIC_UART.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  x               1    2[COMMON] unsigned char 
  3670 ;;  dt              1    1[COMMON] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1
  3680 ;;      Params:         0       0       0
  3681 ;;      Locals:         2       0       0
  3682 ;;      Temps:          1       0       0
  3683 ;;      Totals:         3       0       0
  3684 ;;Total ram usage:        3 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_Handle
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           
  3694                           ;psect for function _UART_Interrupt
  3695  03D9                     _UART_Interrupt:	
  3696                           
  3697                           ;PIC_UART.c: 109: uint8_t x;
  3698                           ;PIC_UART.c: 110: uint8_t dt;
  3699                           ;PIC_UART.c: 112: if (RCIF == 1)
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3703  03D9  0020               	movlb	0	; select bank0
  3704  03DA  1E91               	btfss	17,5	;volatile
  3705  03DB  0008               	return
  3706                           
  3707                           ;PIC_UART.c: 113: {
  3708                           ;PIC_UART.c: 114: dt = RCREG;
  3709  03DC  0023               	movlb	3	; select bank3
  3710  03DD  0819               	movf	25,w	;volatile
  3711  03DE  00F0               	movwf	??_UART_Interrupt
  3712  03DF  0870               	movf	??_UART_Interrupt,w
  3713  03E0  00F1               	movwf	UART_Interrupt@dt
  3714                           
  3715                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 8;
  3716  03E1  0878               	movf	_UART_Buffer_outptr,w
  3717  03E2  3E01               	addlw	1
  3718  03E3  3907               	andlw	7
  3719  03E4  00F0               	movwf	??_UART_Interrupt
  3720  03E5  0870               	movf	??_UART_Interrupt,w
  3721  03E6  00F2               	movwf	UART_Interrupt@x
  3722                           
  3723                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  3724  03E7  0872               	movf	UART_Interrupt@x,w
  3725  03E8  0679               	xorwf	_UART_Buffer_inptr,w
  3726  03E9  1903               	skipnz
  3727  03EA  2BF7               	goto	i1l1615
  3728                           
  3729                           ;PIC_UART.c: 117: {
  3730                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  3731  03EB  0871               	movf	UART_Interrupt@dt,w
  3732  03EC  00F0               	movwf	??_UART_Interrupt
  3733  03ED  0878               	movf	_UART_Buffer_outptr,w
  3734  03EE  3E53               	addlw	(low (_UART_Buffer| 0))& (0+255)
  3735  03EF  0086               	movwf	6
  3736  03F0  0187               	clrf	7
  3737  03F1  0870               	movf	??_UART_Interrupt,w
  3738  03F2  0081               	movwf	1
  3739                           
  3740                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  3741  03F3  0872               	movf	UART_Interrupt@x,w
  3742  03F4  00F0               	movwf	??_UART_Interrupt
  3743  03F5  0870               	movf	??_UART_Interrupt,w
  3744  03F6  00F8               	movwf	_UART_Buffer_outptr
  3745  03F7                     i1l1615:	
  3746                           
  3747                           ;PIC_UART.c: 120: }
  3748                           ;PIC_UART.c: 122: if (OERR == 1)
  3749  03F7  1C9D               	btfss	29,1	;volatile
  3750  03F8  2BFD               	goto	i1l129
  3751                           
  3752                           ;PIC_UART.c: 123: {
  3753                           ;PIC_UART.c: 124: CREN = 0;
  3754  03F9  121D               	bcf	29,4	;volatile
  3755  03FA                     i1l130:	
  3756                           ;PIC_UART.c: 125: while (OERR);
  3757                           
  3758  03FA  189D               	btfsc	29,1	;volatile
  3759  03FB  2BFA               	goto	i1l130
  3760                           
  3761                           ;PIC_UART.c: 126: CREN = 1;
  3762  03FC  161D               	bsf	29,4	;volatile
  3763  03FD                     i1l129:	
  3764                           
  3765                           ;PIC_UART.c: 127: }
  3766                           ;PIC_UART.c: 128: RCIF = 0;
  3767  03FD  0020               	movlb	0	; select bank0
  3768  03FE  1291               	bcf	17,5	;volatile
  3769  03FF  0008               	return
  3770  0400                     __end_of_UART_Interrupt:	
  3771                           
  3772                           	psect	text20
  3773  04F1                     __ptext20:	
  3774 ;; *************** function _I2C_Interrupt *****************
  3775 ;; Defined at:
  3776 ;;		line 31 in file "PIC_I2C.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;		None
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;		None
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  1    wreg      void 
  3783 ;; Registers used:
  3784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMMON   BANK0   BANK1
  3790 ;;      Params:         0       0       0
  3791 ;;      Locals:         0       0       0
  3792 ;;      Temps:          0       0       0
  3793 ;;      Totals:         0       0       0
  3794 ;;Total ram usage:        0 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    1
  3797 ;; This function calls:
  3798 ;;		_I2C1_Interrupt
  3799 ;; This function is called by:
  3800 ;;		_Handle
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           
  3805                           ;psect for function _I2C_Interrupt
  3806  04F1                     _I2C_Interrupt:	
  3807                           
  3808                           ;PIC_I2C.c: 33: I2C1_Interrupt();
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3812  04F1  22C6               	fcall	_I2C1_Interrupt
  3813  04F2  0008               	return
  3814  04F3                     __end_of_I2C_Interrupt:	
  3815                           
  3816                           	psect	text21
  3817  02C6                     __ptext21:	
  3818 ;; *************** function _I2C1_Interrupt *****************
  3819 ;; Defined at:
  3820 ;;		line 153 in file "PIC_I2C1.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1
  3834 ;;      Params:         0       0       0
  3835 ;;      Locals:         0       0       0
  3836 ;;      Temps:          1       0       0
  3837 ;;      Totals:         1       0       0
  3838 ;;Total ram usage:        1 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_I2C_Interrupt
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _I2C1_Interrupt
  3849  02C6                     _I2C1_Interrupt:	
  3850                           
  3851                           ;PIC_I2C1.c: 155: if(SSP1IF&&SSP1IE)
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3855  02C6  0020               	movlb	0	; select bank0
  3856  02C7  1D91               	btfss	17,3	;volatile
  3857  02C8  2B12               	goto	i1l1007
  3858  02C9  0021               	movlb	1	; select bank1
  3859  02CA  1D91               	btfss	17,3	;volatile
  3860  02CB  2B12               	goto	i1l1007
  3861                           
  3862                           ;PIC_I2C1.c: 156: {
  3863                           ;PIC_I2C1.c: 157: if(SSPSTATbits.D_nA)
  3864  02CC  0024               	movlb	4	; select bank4
  3865  02CD  1E94               	btfss	20,5	;volatile
  3866  02CE  2AE9               	goto	i1l295
  3867                           
  3868                           ;PIC_I2C1.c: 158: {
  3869                           ;PIC_I2C1.c: 159: if(SSPSTATbits.R_nW)
  3870  02CF  1D14               	btfss	20,2	;volatile
  3871  02D0  2ADC               	goto	i1l983
  3872                           
  3873                           ;PIC_I2C1.c: 160: {
  3874                           ;PIC_I2C1.c: 161: if(!SSPCON2bits.ACKSTAT)
  3875  02D1  1B16               	btfsc	22,6	;volatile
  3876  02D2  2B10               	goto	i1l1005
  3877  02D3                     i1l975:	
  3878                           ;PIC_I2C1.c: 162: {
  3879                           ;PIC_I2C1.c: 163: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3880                           
  3881  02D3  0814               	movf	20,w	;volatile
  3882  02D4  3901               	andlw	1
  3883  02D5  00F0               	movwf	??_I2C1_Interrupt
  3884  02D6  0E15               	swapf	21,w	;volatile
  3885  02D7  3901               	andlw	1
  3886  02D8  0470               	iorwf	??_I2C1_Interrupt,w
  3887  02D9  1D03               	btfss	3,2
  3888  02DA  2AD3               	goto	i1l975
  3889  02DB  2AFC               	goto	L2
  3890  02DC                     i1l983:	
  3891                           ;PIC_I2C1.c: 167: }
  3892                           ;PIC_I2C1.c: 168: }
  3893                           
  3894                           ;PIC_I2C1.c: 166: SSPCON1bits.CKP = 1;
  3895                           
  3896                           ;PIC_I2C1.c: 165: I2C1_Config.TransmitPoint++;
  3897                           
  3898                           ;PIC_I2C1.c: 164: SSPBUF = *I2C1_Config.TransmitPoint;
  3899                           
  3900                           
  3901                           ;PIC_I2C1.c: 169: else
  3902                           ;PIC_I2C1.c: 170: {
  3903                           ;PIC_I2C1.c: 171: *I2C1_Config.ReceivePoint = SSPBUF;
  3904  02DC  0811               	movf	17,w	;volatile
  3905  02DD  00F0               	movwf	??_I2C1_Interrupt
  3906  02DE  0020               	movlb	0	; select bank0
  3907  02DF  086C               	movf	low ((_I2C1_Config| 0+17)),w
  3908  02E0  0086               	movwf	6
  3909  02E1  0187               	clrf	7
  3910  02E2  0870               	movf	??_I2C1_Interrupt,w
  3911  02E3  0081               	movwf	1
  3912                           
  3913                           ;PIC_I2C1.c: 172: I2C1_Config.ReceivePoint++;
  3914  02E4  3001               	movlw	1
  3915  02E5  00F0               	movwf	??_I2C1_Interrupt
  3916  02E6  0870               	movf	??_I2C1_Interrupt,w
  3917  02E7  07EC               	addwf	low ((_I2C1_Config| 0+17)),f
  3918  02E8  2B0E               	goto	i1l1003
  3919  02E9                     i1l295:	
  3920                           ;PIC_I2C1.c: 174: }
  3921                           ;PIC_I2C1.c: 175: }
  3922                           
  3923                           ;PIC_I2C1.c: 173: SSPCON1bits.CKP = 1;
  3924                           
  3925                           
  3926                           ;PIC_I2C1.c: 176: else if(!SSPSTATbits.D_nA)
  3927  02E9  1A94               	btfsc	20,5	;volatile
  3928  02EA  2B10               	goto	i1l1005
  3929                           
  3930                           ;PIC_I2C1.c: 177: {
  3931                           ;PIC_I2C1.c: 178: SSPBUF;
  3932  02EB  0811               	movf	17,w	;volatile
  3933                           
  3934                           ;PIC_I2C1.c: 180: if(SSPSTATbits.R_nW)
  3935  02EC  1D14               	btfss	20,2	;volatile
  3936  02ED  2B09               	goto	i1l1001
  3937                           
  3938                           ;PIC_I2C1.c: 181: {
  3939                           ;PIC_I2C1.c: 182: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3940  02EE  305B               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3941  02EF  00F0               	movwf	??_I2C1_Interrupt
  3942  02F0  0870               	movf	??_I2C1_Interrupt,w
  3943  02F1  0020               	movlb	0	; select bank0
  3944  02F2  00EB               	movwf	low ((_I2C1_Config| 0+16))
  3945  02F3                     i1l995:	
  3946                           ;PIC_I2C1.c: 184: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3947                           
  3948  02F3  0024               	movlb	4	; select bank4
  3949  02F4  0814               	movf	20,w	;volatile
  3950  02F5  3901               	andlw	1
  3951  02F6  00F0               	movwf	??_I2C1_Interrupt
  3952  02F7  0E15               	swapf	21,w	;volatile
  3953  02F8  3901               	andlw	1
  3954  02F9  0470               	iorwf	??_I2C1_Interrupt,w
  3955  02FA  1D03               	btfss	3,2
  3956  02FB  2AF3               	goto	i1l995
  3957  02FC                     L2:	
  3958                           
  3959                           ;PIC_I2C1.c: 185: SSPBUF = *I2C1_Config.TransmitPoint;
  3960  02FC  0020               	movlb	0	; select bank0
  3961  02FD  086B               	movf	low ((_I2C1_Config| 0+16)),w
  3962  02FE  0086               	movwf	6
  3963  02FF  0187               	clrf	7
  3964  0300  0801               	movf	1,w
  3965  0301  0024               	movlb	4	; select bank4
  3966  0302  0091               	movwf	17	;volatile
  3967                           
  3968                           ;PIC_I2C1.c: 186: I2C1_Config.TransmitPoint++;
  3969  0303  3001               	movlw	1
  3970  0304  00F0               	movwf	??_I2C1_Interrupt
  3971  0305  0870               	movf	??_I2C1_Interrupt,w
  3972  0306  0020               	movlb	0	; select bank0
  3973  0307  07EB               	addwf	low ((_I2C1_Config| 0+16)),f
  3974                           
  3975                           ;PIC_I2C1.c: 187: }
  3976  0308  2B0E               	goto	i1l1003
  3977  0309                     i1l1001:	
  3978                           
  3979                           ;PIC_I2C1.c: 188: else
  3980                           ;PIC_I2C1.c: 189: {
  3981                           ;PIC_I2C1.c: 190: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3982  0309  3063               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3983  030A  00F0               	movwf	??_I2C1_Interrupt
  3984  030B  0870               	movf	??_I2C1_Interrupt,w
  3985  030C  0020               	movlb	0	; select bank0
  3986  030D  00EC               	movwf	low ((_I2C1_Config| 0+17))
  3987  030E                     i1l1003:	
  3988                           
  3989                           ;PIC_I2C1.c: 191: }
  3990                           ;PIC_I2C1.c: 192: SSPCON1bits.CKP = 1;
  3991  030E  0024               	movlb	4	; select bank4
  3992  030F  1615               	bsf	21,4	;volatile
  3993  0310                     i1l1005:	
  3994                           
  3995                           ;PIC_I2C1.c: 193: }
  3996                           ;PIC_I2C1.c: 194: SSP1IF = 0;
  3997  0310  0020               	movlb	0	; select bank0
  3998  0311  1191               	bcf	17,3	;volatile
  3999  0312                     i1l1007:	
  4000                           
  4001                           ;PIC_I2C1.c: 195: }
  4002                           ;PIC_I2C1.c: 197: if(BCL1IE&&BCL1IF)
  4003  0312  0021               	movlb	1	; select bank1
  4004  0313  1D92               	btfss	18,3	;volatile
  4005  0314  0008               	return
  4006  0315  0020               	movlb	0	; select bank0
  4007  0316  1D92               	btfss	18,3	;volatile
  4008  0317  0008               	return
  4009                           
  4010                           ;PIC_I2C1.c: 198: BCL1IF = 0;
  4011  0318  1192               	bcf	18,3	;volatile
  4012  0319  0008               	return
  4013  031A                     __end_of_I2C1_Interrupt:	
  4014  007E                     btemp	set	126	;btemp
  4015  007E                     int$flags	set	126
  4016  007E                     wtemp0	set	126


Data Sizes:
    Strings     31
    Constant    24
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     51      78
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C1_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@data(BANK0[1]), MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@pData(BANK0[1]), MPU6050_Write_Data@reg(BANK0[1]), 

    I2C1_Init@I2C1_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_InitPort(), 

    I2C_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@data(BANK0[1]), MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@pData(BANK0[1]), MPU6050_Write_Data@reg(BANK0[1]), 

    S274$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S274$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    MPU6050_Read_MultiData@pData	PTR unsigned char  size(1) Largest target is 14
		 -> main@accel_t_gyro(BANK0[14]), 

    MPU6050_Read_Data@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Init@data(BANK0[1]), MPU6050_Init@addr(BANK0[1]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _printf->___lwdiv
    _putch->_UART_Transmit
    _UART_Init->_UART_InitPort
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive
    _I2C1_Init->_I2C_InitPort

Critical Paths under _Handle in COMMON

    _Handle->_UART_Interrupt
    _I2C_Interrupt->_I2C1_Interrupt

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwdiv
    _MPU6050_Read_MultiData->_I2C_Receive
    _MPU6050_Read_MultiData->_I2C_Transmit
    _MPU6050_Init->_MPU6050_Read_Data
    _MPU6050_Init->_MPU6050_Write_Data
    _MPU6050_Write_Data->_I2C_Transmit
    _MPU6050_Read_Data->_I2C_Receive
    _MPU6050_Read_Data->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive

Critical Paths under _Handle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   11572
                                             25 BANK0     26    26      0
                         _Basic_Init
                          _I2C1_Init
                       _MPU6050_Init
             _MPU6050_Read_MultiData
                          _UART_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              29    19     10    1014
                                              4 BANK0     21    11     10
                            ___lwdiv
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              5 COMMON     1     1      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (3) _UART_Transmit                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     395
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     194
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_MultiData                               8     6      2    3222
                                             12 BANK0      8     6      2
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         5     5      0    5249
                                             18 BANK0      5     5      0
                  _MPU6050_Read_Data
                 _MPU6050_Write_Data
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write_Data                                   6     5      1    1891
                                             12 BANK0      6     5      1
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read_Data                                    6     5      1    3191
                                             12 BANK0      6     5      1
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1700
                                              4 BANK0      8     5      3
                      _I2C1_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          8     5      3    1229
                                              4 BANK0      8     5      3
                       _I2C1_Receive
 ---------------------------------------------------------------------------------
 (3) _I2C1_Receive                                         8     6      2     606
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Init                                            6     1      5     556
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _I2C_InitPort *
 ---------------------------------------------------------------------------------
 (2) _I2C_InitPort                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handle                                               1     1      0      68
                                              3 COMMON     1     1      0
                      _I2C_Interrupt
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (6) _UART_Interrupt                                       3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C_Interrupt                                        0     0      0       0
                     _I2C1_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C1_Init
     _I2C_InitPort *
   _MPU6050_Init
     _MPU6050_Read_Data
       _I2C_Receive
         _I2C1_Receive
       _I2C_Transmit
         _I2C1_Transmit
     _MPU6050_Write_Data
       _I2C_Transmit
         _I2C1_Transmit
   _MPU6050_Read_MultiData
     _I2C_Receive
       _I2C1_Receive
     _I2C_Transmit
       _I2C1_Transmit
   _UART_Init
     _UART_InitPort *
   _printf
     ___lwdiv
     _putch
       _UART_Transmit

 _Handle (ROOT)
   _I2C_Interrupt
     _I2C1_Interrupt
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      58       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      58       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Jan 10 15:07:31 2018

                    __CFG_CP$OFF 0000                      _SSPSTATbits 0214                              l108 04E0  
                            l213 02BD                              l216 02A6                              l209 027D  
                            l229 0201                              l238 0228                              l247 0241  
                            l280 0077                              l264 0036                              l273 004F  
                            l337 0152                              l286 0089                              l279 0075  
                            _GIE 005F                     __CFG_CPD$OFF 0000             __size_of_I2C_Receive 001B  
                   __CFG_BORV$LO 0000                              wreg 0009                       _Basic_Init 04D2  
             MPU6050_Init@result 0034                     __CFG_LVP$OFF 0000                             l1711 0211  
                           l1801 046A                             l1713 0236                             l1723 0247  
                           l1731 0266                             l1741 0029                             l1805 0479  
                           l1725 025E                             l1733 026E                             l1709 020D  
                           l1751 0045                             l1807 047E                             l1727 0263  
                           l1841 035B                             l1755 005C                             l1763 0041  
                           l1739 001F                             l1843 0367                             l1931 00EE  
                           l1765 007E                             l1781 00AE                             l1853 0382  
                           l1941 00FF                             l1925 00D8                             l1775 008F  
                           l1783 00B6                             l1687 01EB                             l1881 029D  
                           l1873 0292                             l1777 00A6                             l1689 01F5  
                           l1793 045E                             l1849 0379                             l1875 0294  
                           l1867 0287                             l1699 0215                             l1795 0463  
                           l1955 0122                             l1947 011E                             l1893 02B4  
                           l1789 044F                             l1957 00BE                             l1967 0169  
                           l1889 02B2                             STR_1 04A9                             STR_2 0488  
                           _CREN 0CEC                             u1405 035E                             u1505 0395  
                           u1425 0368                             u1435 0372                             u1445 037A  
                           u1545 0114                             _PEIE 005E                             _RCIE 048D  
                           _RCIF 008D                             _OERR 0CE9                             _SPEN 0CEF  
                           _TXIF 008C                             _WPUA 020C                  ??_I2C1_Transmit 0076  
                   __CFG_WRT$OFF 0000            __size_of_I2C_InitPort 000D                             _main 0153  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                 ??_I2C1_Interrupt 0070                             start 0010  
                  __CFG_IESO$OFF 0000            __size_of_I2C_Transmit 001B                    __CFG_PLLEN$ON 0000  
              __end_of_I2C1_Init 02C6                            ?_main 0070                            _BRG16 0CFB  
                  __CFG_WDTE$OFF 0000                  __end_of___lwdiv 0387                            i1l130 03FA  
                          i1l129 03FD                            i1l295 02E9                            i1l975 02D3  
                          i1l983 02DC                            i1l995 02F3                            _RCREG 0199  
                          _RCSTA 019D                            _PORTA 000C                            _TRISA 008C  
                          _TXREG 019A                            _TXSTA 019E                   __CFG_FCMEN$OFF 0000  
             __size_of_UART_Init 0038                     _I2C_InitPort 04C5                _UART_Buffer_inptr 0079  
                  ?_MPU6050_Init 0070                            _putch 04ED                   __CFG_BOREN$OFF 0000  
                          pclath 000A                     main@swap_163 003F                     main@swap_164 0040  
                   main@swap_165 0041                     main@swap_166 0042                     main@swap_167 0043  
                   main@swap_168 0044         ??_MPU6050_Read_MultiData 002E           __size_of_I2C_Interrupt 0002  
                          status 0003                            wtemp0 007E                     _I2C_Transmit 044A  
                 __CFG_MCLRE$OFF 0000                  __initialization 0011                     __end_of_main 01E8  
                         ??_main 0039                I2C_Receive@result 002B                I2C1_Receive@i_457 0023  
              I2C1_Receive@pData 0074                      ?_Basic_Init 0070                   ??_MPU6050_Init 0032  
                         _BCL1IE 0493                           _BCL1IF 0093                           _APFCON 011D  
                         _ANSELA 018C                           ?_putch 0070                           i1l1001 0309  
                         i1l1003 030E                           i1l1005 0310                           i1l1007 0312  
                         i1l1615 03F7                           _OSCCON 0099                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IE 048B                           _SSP1IF 008B  
                         _SSPADD 0212                           _SSPBUF 0211                           _SSPMSK 0213  
                         _Handle 0004                   __CFG_PWRTE$OFF 0000             MPU6050_Read_Data@reg 0030  
              __end_of_UART_Init 0352                        ??___lwdiv 0020               _UART_Buffer_outptr 0078  
                  _I2C_Interrupt 04F1                           _printf 00B9      __size_of_MPU6050_Write_Data 0025  
        __size_of_UART_Interrupt 0027                 I2C_Transmit@I2Cx 002A            __end_of_UART_InitPort 04C5  
                         putch@c 0075                 I2C_Transmit@size 0026          UART_Init@UART_Init_PORT 0075  
        __end_of__initialization 0019  __size_of_MPU6050_Read_MultiData 0027            __end_of_UART_Transmit 04E7  
                 __pcstackCOMMON 0070              __size_of_Basic_Init 000D                    __end_of_putch 04F1  
                 ?_I2C_Interrupt 0070               I2C_Receive@address 0024              I2C1_Transmit@result 0023  
                        ??_putch 0075                       __pbssBANK0 0053                          ?_Handle 0070  
             I2C1_Receive@result 0021                       __pmaintext 0153             __end_of_MPU6050_Init 03B2  
                     __pintentry 0004           _MPU6050_Read_MultiData 03B2                    ??_I2C_Receive 0027  
                        ?_printf 0024                _MPU6050_Read_Data 0425               ?_MPU6050_Read_Data 002C  
                      _I2C1_Init 0271                          _SSPCON1 0215                          _SSPCON2 0216  
                        _SSPSTAT 0214              ??_MPU6050_Read_Data 002D                __end_of_baudtable 04A9  
        MPU6050_Write_Data@pData 002C            __end_of_I2C1_Transmit 0271                  __size_of_Handle 000C  
                ??_I2C_Interrupt 0071                          ___lwdiv 0352        __end_of_MPU6050_Read_Data 044A  
      MPU6050_Read_MultiData@reg 0032                  __CFG_STVREN$OFF 0000                          __ptext1 00B9  
                        __ptext2 04ED                          __ptext3 04DF                          __ptext4 0352  
                        __ptext5 031A                          __ptext6 04B7                          __ptext7 03B2  
                        __ptext8 0387                          __ptext9 0400                  __size_of_printf 009A  
                 _UART_Interrupt 03D9                __end_of_hexpowers 0488                       ?_I2C1_Init 0020  
                   ??_Basic_Init 0074              __end_of_I2C_Receive 0480                          clrloop0 04E8  
           end_of_initialization 0019                 I2C1_Init@address 0022                    ?_I2C1_Receive 0074  
                    _I2C1_Config 005B                I2C_Transmit@pData 0025                          printf@c 0038  
                        printf@f 0024               __end_of_Basic_Init 04DF           __end_of_UART_Interrupt 0400  
                      _UART_Init 031A          __size_of_I2C1_Interrupt 0054                 __CFG_FOSC$INTOSC 0000  
               MPU6050_Init@addr 0035                 MPU6050_Init@data 0036                   ??_I2C1_Receive 0076  
          __size_of_MPU6050_Init 002B                       main@result 003D                   __end_of_Handle 0010  
               UART_Interrupt@dt 0071       __size_of_MPU6050_Read_Data 0025                  ?_UART_Interrupt 0070  
                     ?_UART_Init 0075       __end_of_MPU6050_Write_Data 0425                      _I2C_Receive 0465  
                 __end_of_printf 0153              start_initialization 0011                      ??_I2C1_Init 0075  
               I2C_Receive@pData 0025             I2C1_Transmit@address 0020                     _MPU6050_Init 0387  
               I2C1_Receive@size 0075                         ??_Handle 0073            MPU6050_Write_Data@reg 0030  
        ?_MPU6050_Read_MultiData 002C           __size_of_UART_InitPort 000E          MPU6050_Read_Data@result 0031  
                       ??_printf 002E                      __pbssCOMMON 0078                        ___latbits 0000  
         __size_of_UART_Transmit 0008                    __pcstackBANK0 0020              I2C1_Receive@address 0020  
                  ?_I2C_InitPort 0070               I2C1_Transmit@i_450 0022      MPU6050_Read_MultiData@pData 002C  
             I2C1_Transmit@pData 0074                        _baudtable 0499                    ?_I2C_Transmit 0024  
 __end_of_MPU6050_Read_MultiData 03D9                 ___lwdiv@dividend 0076                         ?___lwdiv 0074  
                    ??_UART_Init 0020                   _I2C1_Interrupt 02C6             __end_of_I2C1_Receive 00B9  
                 ??_I2C_InitPort 0074                        _hexpowers 0480                    _UART_InitPort 04B7  
               ___lwdiv@quotient 0022                   __size_of_putch 0004          I2C1_Init@I2C1_Init_PORT 0020  
                 ??_I2C_Transmit 0027                        clear_ram0 04E7                    _UART_Transmit 04DF  
         __end_of_I2C1_Interrupt 031A            __end_of_I2C_Interrupt 04F3                       printf@flag 0032  
                     printf@prec 0037           __size_of_I2C1_Transmit 0089                   ?_UART_InitPort 0070  
                UART_Interrupt@x 0072                  I2C_Receive@I2Cx 002A         MPU6050_Write_Data@result 0031  
                I2C_Receive@size 0026                   ?_UART_Transmit 0070           MPU6050_Read_Data@pData 002C  
               ??_UART_Interrupt 0070                  ?_I2C1_Interrupt 0070                 __size_of___lwdiv 0035  
                   ?_I2C_Receive 0024       MPU6050_Read_MultiData@size 002D                I2C1_Transmit@size 0075  
                ___lwdiv@divisor 0074                  ___lwdiv@counter 0021                     UART_Init@brg 0077  
                       __ptext10 0425                         __ptext11 044A                         __ptext20 04F1  
                       __ptext12 01E8                         __ptext21 02C6                         __ptext13 0465  
                       __ptext14 001C                         __ptext15 0271                         __ptext16 04C5  
                       __ptext17 04D2                         __ptext19 03D9               _MPU6050_Write_Data 0400  
                  __size_of_main 0095              ?_MPU6050_Write_Data 002C                   I2C1_Init@Speed 0024  
                  _I2C1_Transmit 01E8             __end_of_I2C_InitPort 04D2            __size_of_I2C1_Receive 009D  
                       int$flags 007E              I2C_Transmit@address 0024                        printf@idx 0033  
                      printf@val 0035                         main@swap 003E     MPU6050_Read_MultiData@result 0033  
           ??_MPU6050_Write_Data 002D             __end_of_I2C_Transmit 0465                  ??_UART_InitPort 0074  
                       intlevel1 0000                  ??_UART_Transmit 0074                     _I2C1_Receive 001C  
                UART_Transmit@dt 0074                   ?_I2C1_Transmit 0074                __CFG_CLKOUTEN$OFF 0000  
                    _UART_Buffer 0053                    I2C1_Init@mode 0023                         printf@ap 0034  
                  I2C1_Receive@i 0022               I2C_Transmit@result 002B                    __pstringtext1 0499  
                  __pstringtext2 0480                    __pstringtext3 04A9                    __pstringtext4 0000  
               main@accel_t_gyro 0045                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
                 I2C1_Transmit@i 0021               __size_of_I2C1_Init 0055  
