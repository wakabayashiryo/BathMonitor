

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Dec 20 07:17:31 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.43
    24                           ; Generated 25/07/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F1822 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011D                     	;# 
   109  018C                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0294                     	;# 
   151  0295                     	;# 
   152  0295                     	;# 
   153  0296                     	;# 
   154  0391                     	;# 
   155  0392                     	;# 
   156  0393                     	;# 
   157  039A                     	;# 
   158  039C                     	;# 
   159  039D                     	;# 
   160  039E                     	;# 
   161  039F                     	;# 
   162  0FE4                     	;# 
   163  0FE5                     	;# 
   164  0FE6                     	;# 
   165  0FE7                     	;# 
   166  0FE8                     	;# 
   167  0FE9                     	;# 
   168  0FEA                     	;# 
   169  0FEB                     	;# 
   170  0FED                     	;# 
   171  0FEE                     	;# 
   172  0FEF                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  008C                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  010C                     	;# 
   214  0111                     	;# 
   215  0112                     	;# 
   216  0115                     	;# 
   217  0116                     	;# 
   218  0117                     	;# 
   219  0118                     	;# 
   220  0119                     	;# 
   221  011A                     	;# 
   222  011B                     	;# 
   223  011D                     	;# 
   224  011D                     	;# 
   225  018C                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0193                     	;# 
   232  0194                     	;# 
   233  0195                     	;# 
   234  0196                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019D                     	;# 
   244  019E                     	;# 
   245  019F                     	;# 
   246  020C                     	;# 
   247  0211                     	;# 
   248  0211                     	;# 
   249  0212                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0213                     	;# 
   253  0214                     	;# 
   254  0214                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0216                     	;# 
   259  0216                     	;# 
   260  0217                     	;# 
   261  0217                     	;# 
   262  0291                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0295                     	;# 
   269  0296                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  0393                     	;# 
   273  039A                     	;# 
   274  039C                     	;# 
   275  039D                     	;# 
   276  039E                     	;# 
   277  039F                     	;# 
   278  0FE4                     	;# 
   279  0FE5                     	;# 
   280  0FE6                     	;# 
   281  0FE7                     	;# 
   282  0FE8                     	;# 
   283  0FE9                     	;# 
   284  0FEA                     	;# 
   285  0FEB                     	;# 
   286  0FED                     	;# 
   287  0FEE                     	;# 
   288  0FEF                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  008C                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  010C                     	;# 
   330  0111                     	;# 
   331  0112                     	;# 
   332  0115                     	;# 
   333  0116                     	;# 
   334  0117                     	;# 
   335  0118                     	;# 
   336  0119                     	;# 
   337  011A                     	;# 
   338  011B                     	;# 
   339  011D                     	;# 
   340  011D                     	;# 
   341  018C                     	;# 
   342  0191                     	;# 
   343  0191                     	;# 
   344  0192                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0193                     	;# 
   348  0194                     	;# 
   349  0195                     	;# 
   350  0196                     	;# 
   351  0199                     	;# 
   352  019A                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019C                     	;# 
   358  019C                     	;# 
   359  019D                     	;# 
   360  019E                     	;# 
   361  019F                     	;# 
   362  020C                     	;# 
   363  0211                     	;# 
   364  0211                     	;# 
   365  0212                     	;# 
   366  0212                     	;# 
   367  0213                     	;# 
   368  0213                     	;# 
   369  0214                     	;# 
   370  0214                     	;# 
   371  0215                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0216                     	;# 
   375  0216                     	;# 
   376  0217                     	;# 
   377  0217                     	;# 
   378  0291                     	;# 
   379  0291                     	;# 
   380  0292                     	;# 
   381  0293                     	;# 
   382  0294                     	;# 
   383  0295                     	;# 
   384  0295                     	;# 
   385  0296                     	;# 
   386  0391                     	;# 
   387  0392                     	;# 
   388  0393                     	;# 
   389  039A                     	;# 
   390  039C                     	;# 
   391  039D                     	;# 
   392  039E                     	;# 
   393  039F                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  008C                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011D                     	;# 
   457  018C                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0199                     	;# 
   468  019A                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020C                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0294                     	;# 
   499  0295                     	;# 
   500  0295                     	;# 
   501  0296                     	;# 
   502  0391                     	;# 
   503  0392                     	;# 
   504  0393                     	;# 
   505  039A                     	;# 
   506  039C                     	;# 
   507  039D                     	;# 
   508  039E                     	;# 
   509  039F                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521                           
   522                           	psect	stringtext1
   523  007A                     __pstringtext1:	
   524  007A                     _baudtable:	
   525  007A  340A               	retlw	10
   526  007B  341A               	retlw	26
   527  007C  3404               	retlw	4
   528  007D  340D               	retlw	13
   529  007E  3440               	retlw	64
   530  007F  3403               	retlw	3
   531  0080  34CF               	retlw	207
   532  0081  3400               	retlw	0
   533  0082  34BF               	retlw	191
   534  0083  3400               	retlw	0
   535  0084  3467               	retlw	103
   536  0085  3400               	retlw	0
   537  0086  3422               	retlw	34
   538  0087  3400               	retlw	0
   539  0088  3410               	retlw	16
   540  0089  3400               	retlw	0
   541  008A                     __end_of_baudtable:	
   542  000C                     _PORTA	set	12
   543  0093                     _BCL1IF	set	147
   544  008B                     _SSP1IF	set	139
   545  008C                     _TXIF	set	140
   546  005F                     _GIE	set	95
   547  005E                     _PEIE	set	94
   548  008D                     _RCIF	set	141
   549  008C                     _TRISA	set	140
   550  0099                     _OSCCON	set	153
   551  0493                     _BCL1IE	set	1171
   552  048B                     _SSP1IE	set	1163
   553  048D                     _RCIE	set	1165
   554  011D                     _APFCON	set	285
   555  0199                     _RCREG	set	409
   556  019A                     _TXREG	set	410
   557  019C                     _SPBRGH	set	412
   558  019B                     _SPBRGL	set	411
   559  019D                     _RCSTA	set	413
   560  019E                     _TXSTA	set	414
   561  018C                     _ANSELA	set	396
   562  0CEC                     _CREN	set	3308
   563  0CE9                     _OERR	set	3305
   564  0CEF                     _SPEN	set	3311
   565  0CFB                     _BRG16	set	3323
   566  0214                     _SSPSTATbits	set	532
   567  0211                     _SSPBUF	set	529
   568  0216                     _SSPCON2	set	534
   569  0213                     _SSPMSK	set	531
   570  0216                     _SSPCON2bits	set	534
   571  0215                     _SSPCON1bits	set	533
   572  0212                     _SSPADD	set	530
   573  0214                     _SSPSTAT	set	532
   574  0215                     _SSPCON1	set	533
   575  020C                     _WPUA	set	524
   576  008A                     STR_1:	
   577  008A  3448               	retlw	72	;'H'
   578  008B  3465               	retlw	101	;'e'
   579  008C  346C               	retlw	108	;'l'
   580  008D  346C               	retlw	108	;'l'
   581  008E  346F               	retlw	111	;'o'
   582  008F  3420               	retlw	32	;' '
   583  0090  3457               	retlw	87	;'W'
   584  0091  346F               	retlw	111	;'o'
   585  0092  3472               	retlw	114	;'r'
   586  0093  346C               	retlw	108	;'l'
   587  0094  3464               	retlw	100	;'d'
   588  0095  340A               	retlw	10
   589  0096  3400               	retlw	0
   590                           
   591                           	psect	stringtext2
   592  0000                     __pstringtext2:	
   593                           
   594                           ; #config settings
   595  0000                     
   596                           	psect	cinit
   597  0010                     start_initialization:	
   598  0010                     __initialization:	
   599                           
   600                           ; Clear objects allocated to COMMON
   601  0010  01F8               	clrf	__pbssCOMMON& (0+127)
   602  0011  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   603                           
   604                           ; Clear objects allocated to BANK0
   605  0012  3020               	movlw	low __pbssBANK0
   606  0013  0084               	movwf	4
   607  0014  3000               	movlw	high __pbssBANK0
   608  0015  0085               	movwf	5
   609  0016  3033               	movlw	51
   610  0017  20E5               	fcall	clear_ram0
   611  0018                     end_of_initialization:	
   612                           ;End of C runtime variable initialization code
   613                           
   614  0018                     __end_of__initialization:	
   615  0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   616  0019  0020               	movlb	0
   617  001A  28B2               	ljmp	_main	;jump to C main() function
   618                           
   619                           	psect	bssCOMMON
   620  0078                     __pbssCOMMON:	
   621  0078                     _UART_Buffer_outptr:	
   622  0078                     	ds	1
   623  0079                     _UART_Buffer_inptr:	
   624  0079                     	ds	1
   625                           
   626                           	psect	bssBANK0
   627  0020                     __pbssBANK0:	
   628  0020                     _UART_Buffer:	
   629  0020                     	ds	32
   630  0040                     _I2C1_Config:	
   631  0040                     	ds	19
   632                           
   633                           	psect	clrtext
   634  00E5                     clear_ram0:	
   635                           ;	Called with FSR0 containing the base address, and
   636                           ;	WREG with the size to clear
   637                           
   638  00E5  0064               	clrwdt	;clear the watchdog before getting into this loop
   639  00E6                     clrloop0:	
   640  00E6  0180               	clrf	0	;clear RAM location pointed to by FSR
   641  00E7  3101               	addfsr 0,1
   642  00E8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   643  00E9  28E6               	goto	clrloop0	;have we reached the end yet?
   644  00EA  3400               	retlw	0	;all done for this memory range, return
   645                           
   646                           	psect	cstackCOMMON
   647  0070                     __pcstackCOMMON:	
   648  0070                     ?_Basic_Init:	
   649  0070                     ?_UART_InitPort:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_UART_Interrupt:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_UART_Interrupt:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Handle:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_UART_Transmit:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_putch:	
   668                           ; 1 bytes @ 0x0
   669                           
   670                           
   671                           ; 1 bytes @ 0x0
   672  0070                     	ds	1
   673  0071                     UART_Interrupt@dt:	
   674                           
   675                           ; 1 bytes @ 0x1
   676  0071                     	ds	1
   677  0072                     UART_Interrupt@x:	
   678                           
   679                           ; 1 bytes @ 0x2
   680  0072                     	ds	1
   681  0073                     ??_Handle:	
   682                           
   683                           ; 1 bytes @ 0x3
   684  0073                     	ds	1
   685  0074                     ??_Basic_Init:	
   686  0074                     ??_UART_InitPort:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ??_UART_Transmit:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     UART_Transmit@dt:	
   693                           ; 1 bytes @ 0x4
   694                           
   695                           
   696                           ; 1 bytes @ 0x4
   697  0074                     	ds	1
   698  0075                     ?_UART_Init:	
   699  0075                     ??_putch:	
   700                           ; 1 bytes @ 0x5
   701                           
   702  0075                     putch@c:	
   703                           ; 1 bytes @ 0x5
   704                           
   705  0075                     UART_Init@UART_Init_PORT:	
   706                           ; 1 bytes @ 0x5
   707                           
   708                           
   709                           ; 2 bytes @ 0x5
   710  0075                     	ds	1
   711  0076                     ?_printf:	
   712  0076                     printf@f:	
   713                           ; 2 bytes @ 0x6
   714                           
   715                           
   716                           ; 2 bytes @ 0x6
   717  0076                     	ds	1
   718  0077                     UART_Init@brg:	
   719                           
   720                           ; 1 bytes @ 0x7
   721  0077                     	ds	1
   722                           
   723                           	psect	cstackBANK0
   724  0053                     __pcstackBANK0:	
   725  0053                     ??_UART_Init:	
   726  0053                     ??_printf:	
   727                           ; 1 bytes @ 0x0
   728                           
   729                           
   730                           ; 1 bytes @ 0x0
   731  0053                     	ds	3
   732  0056                     printf@ap:	
   733                           
   734                           ; 1 bytes @ 0x3
   735  0056                     	ds	1
   736  0057                     printf@c:	
   737                           
   738                           ; 1 bytes @ 0x4
   739  0057                     	ds	1
   740  0058                     ??_main:	
   741                           
   742                           ; 1 bytes @ 0x5
   743  0058                     	ds	1
   744                           
   745                           	psect	maintext
   746  00B2                     __pmaintext:	
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 9 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B1F/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1
   766 ;;      Params:         0       0       0
   767 ;;      Locals:         0       0       0
   768 ;;      Temps:          0       1       0
   769 ;;      Totals:         0       1       0
   770 ;;Total ram usage:        1 bytes
   771 ;; Hardware stack levels required when called:    5
   772 ;; This function calls:
   773 ;;		_Basic_Init
   774 ;;		_UART_Init
   775 ;;		_printf
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _main
   783  00B2                     _main:	
   784                           
   785                           ;main.c: 11: Basic_Init();
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   789  00B2  20D0               	fcall	_Basic_Init
   790                           
   791                           ;main.c: 12: UART_Init(UART_InitPort,BAUD_9600);
   792  00B3  30C3               	movlw	low _UART_InitPort
   793  00B4  00F5               	movwf	UART_Init@UART_Init_PORT
   794  00B5  3000               	movlw	high _UART_InitPort
   795  00B6  00F6               	movwf	UART_Init@UART_Init_PORT+1
   796  00B7  3003               	movlw	3
   797  00B8  0020               	movlb	0	; select bank0
   798  00B9  00D8               	movwf	??_main
   799  00BA  0858               	movf	??_main,w
   800  00BB  00F7               	movwf	UART_Init@brg
   801  00BC  201B               	fcall	_UART_Init
   802  00BD                     l1108:	
   803                           ;main.c: 14: while(1)
   804                           
   805                           
   806                           ;main.c: 15: {
   807                           ;main.c: 16: printf("Hello World\n");
   808  00BD  308A               	movlw	low (STR_1| (0+32768))
   809  00BE  00F6               	movwf	printf@f
   810  00BF  3080               	movlw	high (STR_1| (0+32768))
   811  00C0  00F7               	movwf	printf@f+1
   812  00C1  2097               	fcall	_printf
   813  00C2  28BD               	goto	l1108
   814  00C3                     __end_of_main:	
   815                           
   816                           	psect	text1
   817  0097                     __ptext1:	
   818 ;; *************** function _printf *****************
   819 ;; Defined at:
   820 ;;		line 464 in file "/opt/microchip/xc8/v1.43/sources/common/doprnt.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  f               2    6[COMMON] PTR const unsigned char 
   823 ;;		 -> STR_1(13), 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  tmpval          4    0        struct .
   826 ;;  cp              2    0        PTR const unsigned char 
   827 ;;  len             2    0        unsigned int 
   828 ;;  val             2    0        unsigned int 
   829 ;;  c               1    4[BANK0 ] char 
   830 ;;  ap              1    3[BANK0 ] PTR void [1]
   831 ;;		 -> ?_printf(2), 
   832 ;;  flag            1    0        unsigned char 
   833 ;;  prec            1    0        char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  2    6[COMMON] int 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1
   843 ;;      Params:         2       0       0
   844 ;;      Locals:         0       2       0
   845 ;;      Temps:          0       3       0
   846 ;;      Totals:         2       5       0
   847 ;;Total ram usage:        7 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    4
   850 ;; This function calls:
   851 ;;		_putch
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _printf
   859  0097                     _printf:	
   860                           
   861                           ;doprnt.c: 466: va_list ap;
   862                           ;doprnt.c: 499: signed char c;
   863                           ;doprnt.c: 506: signed char prec;
   864                           ;doprnt.c: 508: unsigned char flag;
   865                           ;doprnt.c: 523: union {
   866                           ;doprnt.c: 524: unsigned long vd;
   867                           ;doprnt.c: 525: double integ;
   868                           ;doprnt.c: 526: } tmpval;
   869                           ;doprnt.c: 528: unsigned int val;
   870                           ;doprnt.c: 529: unsigned len;
   871                           ;doprnt.c: 530: const char * cp;
   872                           ;doprnt.c: 533: *ap = __va_start();
   873                           
   874                           ;incstack = 0
   875                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   876  0097  3078               	movlw	(low ((?_printf| 0+2)))& (0+255)
   877  0098  0020               	movlb	0	; select bank0
   878  0099  00D3               	movwf	??_printf
   879  009A  0853               	movf	??_printf,w
   880  009B  00D6               	movwf	printf@ap
   881  009C                     l1102:	
   882                           ;doprnt.c: 543: }
   883                           ;doprnt.c: 1422: {
   884                           
   885                           ;doprnt.c: 542: continue;
   886                           
   887                           ;doprnt.c: 536: while(c = *f++) {
   888                           
   889  009C  0877               	movf	printf@f+1,w
   890  009D  0020               	movlb	0	; select bank0
   891  009E  00D4               	movwf	??_printf+1
   892  009F  0876               	movf	printf@f,w
   893  00A0  00D3               	movwf	??_printf
   894  00A1  0AF6               	incf	printf@f,f
   895  00A2  1903               	skipnz
   896  00A3  0AF7               	incf	printf@f+1,f
   897  00A4  0853               	movf	??_printf,w
   898  00A5  0084               	movwf	4
   899  00A6  0854               	movf	??_printf+1,w
   900  00A7  0085               	movwf	5
   901  00A8  0800               	movf	0,w	;code access
   902  00A9  00D5               	movwf	??_printf+2
   903  00AA  0855               	movf	??_printf+2,w
   904  00AB  00D7               	movwf	printf@c
   905  00AC  0857               	movf	printf@c,w
   906  00AD  1903               	btfsc	3,2
   907  00AE  0008               	return
   908                           
   909                           ;doprnt.c: 540: {
   910                           ;doprnt.c: 541: (putch(c) );
   911  00AF  0857               	movf	printf@c,w
   912  00B0  20EB               	fcall	_putch
   913  00B1  289C               	goto	l1102
   914  00B2                     __end_of_printf:	
   915                           ;doprnt.c: 1469: }
   916                           ;doprnt.c: 1533: }
   917                           ;doprnt.c: 1540: return 0;
   918                           ;	Return value of _printf is never used
   919                           
   920                           
   921                           	psect	text2
   922  00EB                     __ptext2:	
   923 ;; *************** function _putch *****************
   924 ;; Defined at:
   925 ;;		line 76 in file "PIC_UART.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  c               1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  c               1    5[COMMON] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1
   939 ;;      Params:         0       0       0
   940 ;;      Locals:         1       0       0
   941 ;;      Temps:          0       0       0
   942 ;;      Totals:         1       0       0
   943 ;;Total ram usage:        1 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    3
   946 ;; This function calls:
   947 ;;		_UART_Transmit
   948 ;; This function is called by:
   949 ;;		_printf
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _putch
   955  00EB                     _putch:	
   956                           
   957                           ;incstack = 0
   958                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
   959                           ;putch@c stored from wreg
   960  00EB  00F5               	movwf	putch@c
   961                           
   962                           ;PIC_UART.c: 78: UART_Transmit(c);
   963  00EC  0875               	movf	putch@c,w
   964  00ED  20DD               	fcall	_UART_Transmit
   965  00EE  0008               	return
   966  00EF                     __end_of_putch:	
   967                           
   968                           	psect	text3
   969  00DD                     __ptext3:	
   970 ;; *************** function _UART_Transmit *****************
   971 ;; Defined at:
   972 ;;		line 70 in file "PIC_UART.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  dt              1    wreg     unsigned char 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  dt              1    4[COMMON] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1
   986 ;;      Params:         0       0       0
   987 ;;      Locals:         1       0       0
   988 ;;      Temps:          0       0       0
   989 ;;      Totals:         1       0       0
   990 ;;Total ram usage:        1 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    2
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_putch
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _UART_Transmit
  1002  00DD                     _UART_Transmit:	
  1003                           
  1004                           ;incstack = 0
  1005                           ; Regs used in _UART_Transmit: [wreg]
  1006                           ;UART_Transmit@dt stored from wreg
  1007  00DD  00F4               	movwf	UART_Transmit@dt
  1008  00DE                     l95:	
  1009                           ;PIC_UART.c: 72: while (TXIF == 0);
  1010                           
  1011  00DE  0020               	movlb	0	; select bank0
  1012  00DF  1E11               	btfss	17,4	;volatile
  1013  00E0  28DE               	goto	l95
  1014                           
  1015                           ;PIC_UART.c: 73: TXREG = dt;
  1016  00E1  0874               	movf	UART_Transmit@dt,w
  1017  00E2  0023               	movlb	3	; select bank3
  1018  00E3  009A               	movwf	26	;volatile
  1019  00E4  0008               	return
  1020  00E5                     __end_of_UART_Transmit:	
  1021                           
  1022                           	psect	text4
  1023  001B                     __ptext4:	
  1024 ;; *************** function _UART_Init *****************
  1025 ;; Defined at:
  1026 ;;		line 37 in file "PIC_UART.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  UART_Init_PO    2    5[COMMON] PTR FTN()void 
  1029 ;;		 -> UART_InitPort(1), 
  1030 ;;  brg             1    7[COMMON] enum E2280
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1
  1042 ;;      Params:         3       0       0
  1043 ;;      Locals:         0       0       0
  1044 ;;      Temps:          0       4       0
  1045 ;;      Totals:         3       4       0
  1046 ;;Total ram usage:        7 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    3
  1049 ;; This function calls:
  1050 ;;		_UART_InitPort
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           
  1057                           ;psect for function _UART_Init
  1058  001B                     _UART_Init:	
  1059                           
  1060                           ;PIC_UART.c: 39: UART_Init_PORT();
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1064  001B  0876               	movf	UART_Init@UART_Init_PORT+1,w
  1065  001C  008A               	movwf	10
  1066  001D  0875               	movf	UART_Init@UART_Init_PORT,w
  1067  001E  000A               	callw
  1068  001F  3180               	pagesel	$
  1069                           
  1070                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1071  0020  3020               	movlw	32
  1072  0021  0023               	movlb	3	; select bank3
  1073  0022  009E               	movwf	30	;volatile
  1074                           
  1075                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1076  0023  3010               	movlw	16
  1077  0024  009D               	movwf	29	;volatile
  1078                           
  1079                           ;PIC_UART.c: 44: BRG16 = 1;
  1080  0025  159F               	bsf	31,3	;volatile
  1081                           
  1082                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1083  0026  0877               	movf	UART_Init@brg,w
  1084  0027  0020               	movlb	0	; select bank0
  1085  0028  00D3               	movwf	??_UART_Init
  1086  0029  01D4               	clrf	??_UART_Init+1
  1087  002A  35D3               	lslf	??_UART_Init,f
  1088  002B  0DD4               	rlf	??_UART_Init+1,f
  1089  002C  307A               	movlw	low (_baudtable| (0+32768))
  1090  002D  0753               	addwf	??_UART_Init,w
  1091  002E  0084               	movwf	4
  1092  002F  3080               	movlw	high (_baudtable| (0+32768))
  1093  0030  3D54               	addwfc	??_UART_Init+1,w
  1094  0031  0085               	movwf	5
  1095  0032  0800               	movf	0,w	;code access
  1096  0033  0023               	movlb	3	; select bank3
  1097  0034  009B               	movwf	27	;volatile
  1098                           
  1099                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1100  0035  0877               	movf	UART_Init@brg,w
  1101  0036  0020               	movlb	0	; select bank0
  1102  0037  00D3               	movwf	??_UART_Init
  1103  0038  01D4               	clrf	??_UART_Init+1
  1104  0039  35D3               	lslf	??_UART_Init,f
  1105  003A  0DD4               	rlf	??_UART_Init+1,f
  1106  003B  307A               	movlw	low (_baudtable| (0+32768))
  1107  003C  0753               	addwf	??_UART_Init,w
  1108  003D  0084               	movwf	4
  1109  003E  3080               	movlw	high (_baudtable| (0+32768))
  1110  003F  3D54               	addwfc	??_UART_Init+1,w
  1111  0040  0085               	movwf	5
  1112  0041  3F00               	moviw [0]fsr0
  1113  0042  00D5               	movwf	??_UART_Init+2
  1114  0043  3F01               	moviw [1]fsr0
  1115  0044  00D6               	movwf	??_UART_Init+3
  1116  0045  0856               	movf	??_UART_Init+3,w
  1117  0046  0023               	movlb	3	; select bank3
  1118  0047  009C               	movwf	28	;volatile
  1119                           
  1120                           ;PIC_UART.c: 48: RCIF = 0;
  1121  0048  0020               	movlb	0	; select bank0
  1122  0049  1291               	bcf	17,5	;volatile
  1123                           
  1124                           ;PIC_UART.c: 49: RCIE = 1;
  1125  004A  0021               	movlb	1	; select bank1
  1126  004B  1691               	bsf	17,5	;volatile
  1127                           
  1128                           ;PIC_UART.c: 50: PEIE = 1;
  1129  004C  170B               	bsf	11,6	;volatile
  1130                           
  1131                           ;PIC_UART.c: 51: GIE = 1;
  1132  004D  178B               	bsf	11,7	;volatile
  1133                           
  1134                           ;PIC_UART.c: 53: SPEN = 1;
  1135  004E  0023               	movlb	3	; select bank3
  1136  004F  179D               	bsf	29,7	;volatile
  1137                           
  1138                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1139  0050  01F9               	clrf	_UART_Buffer_inptr
  1140                           
  1141                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1142  0051  01F8               	clrf	_UART_Buffer_outptr
  1143  0052  0008               	return
  1144  0053                     __end_of_UART_Init:	
  1145                           
  1146                           	psect	text5
  1147  00C3                     __ptext5:	
  1148 ;; *************** function _UART_InitPort *****************
  1149 ;; Defined at:
  1150 ;;		line 42 in file "main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1
  1164 ;;      Params:         0       0       0
  1165 ;;      Locals:         0       0       0
  1166 ;;      Temps:          1       0       0
  1167 ;;      Totals:         1       0       0
  1168 ;;Total ram usage:        1 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;;		_UART_Init
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _UART_InitPort
  1181  00C3                     _UART_InitPort:	
  1182                           
  1183                           ;main.c: 44: TRISA &= ~(1<<4);
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  1187  00C3  30EF               	movlw	239
  1188  00C4  00F4               	movwf	??_UART_InitPort
  1189  00C5  0874               	movf	??_UART_InitPort,w
  1190  00C6  0021               	movlb	1	; select bank1
  1191  00C7  058C               	andwf	12,f	;volatile
  1192                           
  1193                           ;main.c: 45: ANSELA &= ~(1<<4);
  1194  00C8  30EF               	movlw	239
  1195  00C9  00F4               	movwf	??_UART_InitPort
  1196  00CA  0874               	movf	??_UART_InitPort,w
  1197  00CB  0023               	movlb	3	; select bank3
  1198  00CC  058C               	andwf	12,f	;volatile
  1199                           
  1200                           ;main.c: 46: APFCON |= (1<<2);
  1201  00CD  0022               	movlb	2	; select bank2
  1202  00CE  151D               	bsf	29,2	;volatile
  1203  00CF  0008               	return
  1204  00D0                     __end_of_UART_InitPort:	
  1205                           
  1206                           	psect	text6
  1207  00D0                     __ptext6:	
  1208 ;; *************** function _Basic_Init *****************
  1209 ;; Defined at:
  1210 ;;		line 26 in file "main.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1
  1224 ;;      Params:         0       0       0
  1225 ;;      Locals:         0       0       0
  1226 ;;      Temps:          0       0       0
  1227 ;;      Totals:         0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    2
  1231 ;; This function calls:
  1232 ;;		Nothing
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           
  1239                           ;psect for function _Basic_Init
  1240  00D0                     _Basic_Init:	
  1241                           
  1242                           ;main.c: 28: OSCCON = 0xF0;
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _Basic_Init: [wreg+status,2]
  1246  00D0  30F0               	movlw	240
  1247  00D1  0021               	movlb	1	; select bank1
  1248  00D2  0099               	movwf	25	;volatile
  1249                           
  1250                           ;main.c: 32: TRISA = 0x00;
  1251  00D3  018C               	clrf	12	;volatile
  1252                           
  1253                           ;main.c: 33: ANSELA = 0x00;
  1254  00D4  0023               	movlb	3	; select bank3
  1255  00D5  018C               	clrf	12	;volatile
  1256                           
  1257                           ;main.c: 34: WPUA = 0x00;
  1258  00D6  0024               	movlb	4	; select bank4
  1259  00D7  018C               	clrf	12	;volatile
  1260                           
  1261                           ;main.c: 37: APFCON = 0x00;
  1262  00D8  0022               	movlb	2	; select bank2
  1263  00D9  019D               	clrf	29	;volatile
  1264                           
  1265                           ;main.c: 39: PORTA = 0x00;
  1266  00DA  0020               	movlb	0	; select bank0
  1267  00DB  018C               	clrf	12	;volatile
  1268  00DC  0008               	return
  1269  00DD                     __end_of_Basic_Init:	
  1270                           
  1271                           	psect	intentry
  1272  0004                     __pintentry:	
  1273 ;; *************** function _Handle *****************
  1274 ;; Defined at:
  1275 ;;		line 20 in file "main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1
  1289 ;;      Params:         0       0       0
  1290 ;;      Locals:         0       0       0
  1291 ;;      Temps:          1       0       0
  1292 ;;      Totals:         1       0       0
  1293 ;;Total ram usage:        1 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    1
  1296 ;; This function calls:
  1297 ;;		_UART_Interrupt
  1298 ;; This function is called by:
  1299 ;;		Interrupt level 1
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303  0004                     _Handle:	
  1304                           
  1305                           ;incstack = 0
  1306  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1307                           
  1308                           ; Regs used in _Handle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1309  0005  3180               	pagesel	$
  1310  0006  0020               	movlb	0	; select bank0
  1311  0007  087F               	movf	127,w
  1312  0008  00F3               	movwf	??_Handle
  1313                           
  1314                           ;main.c: 22: UART_Interrupt();
  1315  0009  2053               	fcall	_UART_Interrupt
  1316  000A  0873               	movf	??_Handle,w
  1317  000B  0020               	movlb	0	; select bank0
  1318  000C  00FF               	movwf	127
  1319  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1320  000E  0009               	retfie
  1321  000F                     __end_of_Handle:	
  1322                           
  1323                           	psect	text8
  1324  0053                     __ptext8:	
  1325 ;; *************** function _UART_Interrupt *****************
  1326 ;; Defined at:
  1327 ;;		line 107 in file "PIC_UART.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  x               1    2[COMMON] unsigned char 
  1332 ;;  dt              1    1[COMMON] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1
  1342 ;;      Params:         0       0       0
  1343 ;;      Locals:         2       0       0
  1344 ;;      Temps:          1       0       0
  1345 ;;      Totals:         3       0       0
  1346 ;;Total ram usage:        3 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_Handle
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _UART_Interrupt
  1357  0053                     _UART_Interrupt:	
  1358                           
  1359                           ;PIC_UART.c: 109: uint8_t x;
  1360                           ;PIC_UART.c: 110: uint8_t dt;
  1361                           ;PIC_UART.c: 112: if (RCIF == 1)
  1362                           
  1363                           ;incstack = 0
  1364                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1365  0053  0020               	movlb	0	; select bank0
  1366  0054  1E91               	btfss	17,5	;volatile
  1367  0055  0008               	return
  1368                           
  1369                           ;PIC_UART.c: 113: {
  1370                           ;PIC_UART.c: 114: dt = RCREG;
  1371  0056  0023               	movlb	3	; select bank3
  1372  0057  0819               	movf	25,w	;volatile
  1373  0058  00F0               	movwf	??_UART_Interrupt
  1374  0059  0870               	movf	??_UART_Interrupt,w
  1375  005A  00F1               	movwf	UART_Interrupt@dt
  1376                           
  1377                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 32;
  1378  005B  0878               	movf	_UART_Buffer_outptr,w
  1379  005C  3E01               	addlw	1
  1380  005D  391F               	andlw	31
  1381  005E  00F0               	movwf	??_UART_Interrupt
  1382  005F  0870               	movf	??_UART_Interrupt,w
  1383  0060  00F2               	movwf	UART_Interrupt@x
  1384                           
  1385                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  1386  0061  0872               	movf	UART_Interrupt@x,w
  1387  0062  0679               	xorwf	_UART_Buffer_inptr,w
  1388  0063  1903               	skipnz
  1389  0064  2871               	goto	i1l816
  1390                           
  1391                           ;PIC_UART.c: 117: {
  1392                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  1393  0065  0871               	movf	UART_Interrupt@dt,w
  1394  0066  00F0               	movwf	??_UART_Interrupt
  1395  0067  0878               	movf	_UART_Buffer_outptr,w
  1396  0068  3E20               	addlw	(low (_UART_Buffer| 0))& (0+255)
  1397  0069  0086               	movwf	6
  1398  006A  0187               	clrf	7
  1399  006B  0870               	movf	??_UART_Interrupt,w
  1400  006C  0081               	movwf	1
  1401                           
  1402                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  1403  006D  0872               	movf	UART_Interrupt@x,w
  1404  006E  00F0               	movwf	??_UART_Interrupt
  1405  006F  0870               	movf	??_UART_Interrupt,w
  1406  0070  00F8               	movwf	_UART_Buffer_outptr
  1407  0071                     i1l816:	
  1408                           
  1409                           ;PIC_UART.c: 120: }
  1410                           ;PIC_UART.c: 122: if (OERR == 1)
  1411  0071  1C9D               	btfss	29,1	;volatile
  1412  0072  2877               	goto	i1l116
  1413                           
  1414                           ;PIC_UART.c: 123: {
  1415                           ;PIC_UART.c: 124: CREN = 0;
  1416  0073  121D               	bcf	29,4	;volatile
  1417  0074                     i1l117:	
  1418                           ;PIC_UART.c: 125: while (OERR);
  1419                           
  1420  0074  189D               	btfsc	29,1	;volatile
  1421  0075  2874               	goto	i1l117
  1422                           
  1423                           ;PIC_UART.c: 126: CREN = 1;
  1424  0076  161D               	bsf	29,4	;volatile
  1425  0077                     i1l116:	
  1426                           
  1427                           ;PIC_UART.c: 127: }
  1428                           ;PIC_UART.c: 128: RCIF = 0;
  1429  0077  0020               	movlb	0	; select bank0
  1430  0078  1291               	bcf	17,5	;volatile
  1431  0079  0008               	return
  1432  007A                     __end_of_UART_Interrupt:	
  1433  007E                     btemp	set	126	;btemp
  1434  007E                     int$flags	set	126
  1435  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    16
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      6      57
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    S122$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S122$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _main->_printf
    _printf->_putch
    _putch->_UART_Transmit
    _UART_Init->_UART_InitPort

Critical Paths under _Handle in COMMON

    _Handle->_UART_Interrupt

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _Handle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     349
                                              5 BANK0      1     1      0
                         _Basic_Init
                          _UART_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     177
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              5 COMMON     1     1      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (3) _UART_Transmit                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     172
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handle                                               1     1      0      45
                                              3 COMMON     1     1      0
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (5) _UART_Interrupt                                       3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _UART_Init
     _UART_InitPort *
   _printf
     _putch
       _UART_Transmit

 _Handle (ROOT)
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      43       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      43       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Dec 20 07:17:31 2017

            __CFG_CP$OFF 0000              _SSPSTATbits 0214                       l95 00DE  
                    _GIE 005F             __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000  
                    wreg 0009               _Basic_Init 00D0             __CFG_LVP$OFF 0000  
                   l1102 009C                     l1108 00BD                     STR_1 008A  
                   _CREN 0CEC                     _PEIE 005E                     _RCIE 048D  
                   _RCIF 008D                     _OERR 0CE9                     _SPEN 0CEF  
                   _TXIF 008C                     _WPUA 020C             __CFG_WRT$OFF 0000  
                   _main 00B2                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 000F  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000            __CFG_PLLEN$ON 0000  
                  ?_main 0070                    _BRG16 0CFB            __CFG_WDTE$OFF 0000  
                  i1l116 0077                    i1l117 0074                    i1l816 0071  
                  _RCREG 0199                    _RCSTA 019D                    _PORTA 000C  
                  _TRISA 008C                    _TXREG 019A                    _TXSTA 019E  
         __CFG_FCMEN$OFF 0000       __size_of_UART_Init 0038        _UART_Buffer_inptr 0079  
                  _putch 00EB           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0010  
           __end_of_main 00C3                   ??_main 0058              ?_Basic_Init 0070  
                 _BCL1IE 0493                   _BCL1IF 0093                   _APFCON 011D  
                 _ANSELA 018C                   ?_putch 0070                   _OSCCON 0099  
                 _SPBRGH 019C                   _SPBRGL 019B                   _SSP1IE 048B  
                 _SSP1IF 008B                   _SSPADD 0212                   _SSPBUF 0211  
                 _SSPMSK 0213                   _Handle 0004           __CFG_PWRTE$OFF 0000  
      __end_of_UART_Init 0053       _UART_Buffer_outptr 0078                   _printf 0097  
__size_of_UART_Interrupt 0027    __end_of_UART_InitPort 00D0                   putch@c 0075  
UART_Init@UART_Init_PORT 0075  __end_of__initialization 0018    __end_of_UART_Transmit 00E5  
         __pcstackCOMMON 0070      __size_of_Basic_Init 000D            __end_of_putch 00EF  
                ??_putch 0075               __pbssBANK0 0020                  ?_Handle 0070  
             __pmaintext 00B2               __pintentry 0004                  ?_printf 0076  
                _SSPCON1 0215                  _SSPCON2 0216                  _SSPSTAT 0214  
      __end_of_baudtable 008A          __size_of_Handle 000B          __CFG_STVREN$OFF 0000  
                __ptext1 0097                  __ptext2 00EB                  __ptext3 00DD  
                __ptext4 001B                  __ptext5 00C3                  __ptext6 00D0  
                __ptext8 0053          __size_of_printf 001B           _UART_Interrupt 0053  
           ??_Basic_Init 0074                  clrloop0 00E6     end_of_initialization 0018  
            _I2C1_Config 0040                  printf@c 0057                  printf@f 0076  
     __end_of_Basic_Init 00DD   __end_of_UART_Interrupt 007A                _UART_Init 001B  
       __CFG_FOSC$INTOSC 0000           __end_of_Handle 000F         UART_Interrupt@dt 0071  
        ?_UART_Interrupt 0070               ?_UART_Init 0075           __end_of_printf 00B2  
    start_initialization 0010                 ??_Handle 0073   __size_of_UART_InitPort 000D  
               ??_printf 0053              __pbssCOMMON 0078                ___latbits 0000  
 __size_of_UART_Transmit 0008            __pcstackBANK0 0053                _baudtable 007A  
            ??_UART_Init 0053            _UART_InitPort 00C3           __size_of_putch 0004  
              clear_ram0 00E5            _UART_Transmit 00DD           ?_UART_InitPort 0070  
        UART_Interrupt@x 0072           ?_UART_Transmit 0070         ??_UART_Interrupt 0070  
           UART_Init@brg 0077            __size_of_main 0011                 int$flags 007E  
        ??_UART_InitPort 0074                 intlevel1 0000          ??_UART_Transmit 0074  
        UART_Transmit@dt 0074        __CFG_CLKOUTEN$OFF 0000              _UART_Buffer 0020  
               printf@ap 0056            __pstringtext1 007A            __pstringtext2 0000  
            _SSPCON1bits 0215              _SSPCON2bits 0216  
