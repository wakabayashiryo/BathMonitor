

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Jan 13 14:00:02 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.43
    33                           ; Generated 25/07/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC12F1822 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0199                     	;# 
   129  019A                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019C                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  0211                     	;# 
   141  0211                     	;# 
   142  0212                     	;# 
   143  0212                     	;# 
   144  0213                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0214                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0391                     	;# 
   164  0392                     	;# 
   165  0393                     	;# 
   166  039A                     	;# 
   167  039C                     	;# 
   168  039D                     	;# 
   169  039E                     	;# 
   170  039F                     	;# 
   171  0FE4                     	;# 
   172  0FE5                     	;# 
   173  0FE6                     	;# 
   174  0FE7                     	;# 
   175  0FE8                     	;# 
   176  0FE9                     	;# 
   177  0FEA                     	;# 
   178  0FEB                     	;# 
   179  0FED                     	;# 
   180  0FEE                     	;# 
   181  0FEF                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  008C                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  010C                     	;# 
   223  0111                     	;# 
   224  0112                     	;# 
   225  0115                     	;# 
   226  0116                     	;# 
   227  0117                     	;# 
   228  0118                     	;# 
   229  0119                     	;# 
   230  011A                     	;# 
   231  011B                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  018C                     	;# 
   235  0191                     	;# 
   236  0191                     	;# 
   237  0192                     	;# 
   238  0193                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0194                     	;# 
   242  0195                     	;# 
   243  0196                     	;# 
   244  0199                     	;# 
   245  019A                     	;# 
   246  019B                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019C                     	;# 
   251  019C                     	;# 
   252  019D                     	;# 
   253  019E                     	;# 
   254  019F                     	;# 
   255  020C                     	;# 
   256  0211                     	;# 
   257  0211                     	;# 
   258  0212                     	;# 
   259  0212                     	;# 
   260  0213                     	;# 
   261  0213                     	;# 
   262  0214                     	;# 
   263  0214                     	;# 
   264  0215                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0216                     	;# 
   268  0216                     	;# 
   269  0217                     	;# 
   270  0217                     	;# 
   271  0291                     	;# 
   272  0291                     	;# 
   273  0292                     	;# 
   274  0293                     	;# 
   275  0294                     	;# 
   276  0295                     	;# 
   277  0295                     	;# 
   278  0296                     	;# 
   279  0391                     	;# 
   280  0392                     	;# 
   281  0393                     	;# 
   282  039A                     	;# 
   283  039C                     	;# 
   284  039D                     	;# 
   285  039E                     	;# 
   286  039F                     	;# 
   287  0FE4                     	;# 
   288  0FE5                     	;# 
   289  0FE6                     	;# 
   290  0FE7                     	;# 
   291  0FE8                     	;# 
   292  0FE9                     	;# 
   293  0FEA                     	;# 
   294  0FEB                     	;# 
   295  0FED                     	;# 
   296  0FEE                     	;# 
   297  0FEF                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  008C                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0095                     	;# 
   328  0096                     	;# 
   329  0097                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  010C                     	;# 
   339  0111                     	;# 
   340  0112                     	;# 
   341  0115                     	;# 
   342  0116                     	;# 
   343  0117                     	;# 
   344  0118                     	;# 
   345  0119                     	;# 
   346  011A                     	;# 
   347  011B                     	;# 
   348  011D                     	;# 
   349  011D                     	;# 
   350  018C                     	;# 
   351  0191                     	;# 
   352  0191                     	;# 
   353  0192                     	;# 
   354  0193                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0194                     	;# 
   358  0195                     	;# 
   359  0196                     	;# 
   360  0199                     	;# 
   361  019A                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019C                     	;# 
   367  019C                     	;# 
   368  019D                     	;# 
   369  019E                     	;# 
   370  019F                     	;# 
   371  020C                     	;# 
   372  0211                     	;# 
   373  0211                     	;# 
   374  0212                     	;# 
   375  0212                     	;# 
   376  0213                     	;# 
   377  0213                     	;# 
   378  0214                     	;# 
   379  0214                     	;# 
   380  0215                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0216                     	;# 
   384  0216                     	;# 
   385  0217                     	;# 
   386  0217                     	;# 
   387  0291                     	;# 
   388  0291                     	;# 
   389  0292                     	;# 
   390  0293                     	;# 
   391  0294                     	;# 
   392  0295                     	;# 
   393  0295                     	;# 
   394  0296                     	;# 
   395  0391                     	;# 
   396  0392                     	;# 
   397  0393                     	;# 
   398  039A                     	;# 
   399  039C                     	;# 
   400  039D                     	;# 
   401  039E                     	;# 
   402  039F                     	;# 
   403  0FE4                     	;# 
   404  0FE5                     	;# 
   405  0FE6                     	;# 
   406  0FE7                     	;# 
   407  0FE8                     	;# 
   408  0FE9                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  008C                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  010C                     	;# 
   455  0111                     	;# 
   456  0112                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0194                     	;# 
   474  0195                     	;# 
   475  0196                     	;# 
   476  0199                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019D                     	;# 
   485  019E                     	;# 
   486  019F                     	;# 
   487  020C                     	;# 
   488  0211                     	;# 
   489  0211                     	;# 
   490  0212                     	;# 
   491  0212                     	;# 
   492  0213                     	;# 
   493  0213                     	;# 
   494  0214                     	;# 
   495  0214                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0216                     	;# 
   501  0217                     	;# 
   502  0217                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0391                     	;# 
   512  0392                     	;# 
   513  0393                     	;# 
   514  039A                     	;# 
   515  039C                     	;# 
   516  039D                     	;# 
   517  039E                     	;# 
   518  039F                     	;# 
   519  0FE4                     	;# 
   520  0FE5                     	;# 
   521  0FE6                     	;# 
   522  0FE7                     	;# 
   523  0FE8                     	;# 
   524  0FE9                     	;# 
   525  0FEA                     	;# 
   526  0FEB                     	;# 
   527  0FED                     	;# 
   528  0FEE                     	;# 
   529  0FEF                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0008                     	;# 
   539  0009                     	;# 
   540  000A                     	;# 
   541  000B                     	;# 
   542  000C                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  008C                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  010C                     	;# 
   571  0111                     	;# 
   572  0112                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  011A                     	;# 
   579  011B                     	;# 
   580  011D                     	;# 
   581  011D                     	;# 
   582  018C                     	;# 
   583  0191                     	;# 
   584  0191                     	;# 
   585  0192                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0194                     	;# 
   590  0195                     	;# 
   591  0196                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019C                     	;# 
   599  019C                     	;# 
   600  019D                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  020C                     	;# 
   604  0211                     	;# 
   605  0211                     	;# 
   606  0212                     	;# 
   607  0212                     	;# 
   608  0213                     	;# 
   609  0213                     	;# 
   610  0214                     	;# 
   611  0214                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0216                     	;# 
   616  0216                     	;# 
   617  0217                     	;# 
   618  0217                     	;# 
   619  0291                     	;# 
   620  0291                     	;# 
   621  0292                     	;# 
   622  0293                     	;# 
   623  0294                     	;# 
   624  0295                     	;# 
   625  0295                     	;# 
   626  0296                     	;# 
   627  0391                     	;# 
   628  0392                     	;# 
   629  0393                     	;# 
   630  039A                     	;# 
   631  039C                     	;# 
   632  039D                     	;# 
   633  039E                     	;# 
   634  039F                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646                           
   647                           	psect	stringtext1
   648  03B4                     __pstringtext1:	
   649  03B4                     _baudtable:	
   650  03B4  340A               	retlw	10
   651  03B5  341A               	retlw	26
   652  03B6  3404               	retlw	4
   653  03B7  340D               	retlw	13
   654  03B8  3440               	retlw	64
   655  03B9  3403               	retlw	3
   656  03BA  34CF               	retlw	207
   657  03BB  3400               	retlw	0
   658  03BC  34BF               	retlw	191
   659  03BD  3400               	retlw	0
   660  03BE  3467               	retlw	103
   661  03BF  3400               	retlw	0
   662  03C0  3422               	retlw	34
   663  03C1  3400               	retlw	0
   664  03C2  3410               	retlw	16
   665  03C3  3400               	retlw	0
   666  03C4                     __end_of_baudtable:	
   667  000C                     _PORTA	set	12
   668  0093                     _BCL1IF	set	147
   669  008B                     _SSP1IF	set	139
   670  008C                     _TXIF	set	140
   671  005F                     _GIE	set	95
   672  005E                     _PEIE	set	94
   673  008D                     _RCIF	set	141
   674  008C                     _TRISA	set	140
   675  0099                     _OSCCON	set	153
   676  0493                     _BCL1IE	set	1171
   677  048B                     _SSP1IE	set	1163
   678  048D                     _RCIE	set	1165
   679  011D                     _APFCON	set	285
   680  0199                     _RCREG	set	409
   681  019A                     _TXREG	set	410
   682  019C                     _SPBRGH	set	412
   683  019B                     _SPBRGL	set	411
   684  019D                     _RCSTA	set	413
   685  019E                     _TXSTA	set	414
   686  018C                     _ANSELA	set	396
   687  0CEC                     _CREN	set	3308
   688  0CE9                     _OERR	set	3305
   689  0CEF                     _SPEN	set	3311
   690  0CFB                     _BRG16	set	3323
   691  0214                     _SSPSTATbits	set	532
   692  0211                     _SSPBUF	set	529
   693  0216                     _SSPCON2	set	534
   694  0213                     _SSPMSK	set	531
   695  0216                     _SSPCON2bits	set	534
   696  0215                     _SSPCON1bits	set	533
   697  0212                     _SSPADD	set	530
   698  0214                     _SSPSTAT	set	532
   699  0215                     _SSPCON1	set	533
   700  020C                     _WPUA	set	524
   701                           
   702                           ; #config settings
   703  0000                     
   704                           	psect	cinit
   705  0011                     start_initialization:	
   706  0011                     __initialization:	
   707                           
   708                           ; Clear objects allocated to COMMON
   709  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   710  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   711                           
   712                           ; Clear objects allocated to BANK0
   713  0013  3053               	movlw	low __pbssBANK0
   714  0014  0084               	movwf	4
   715  0015  3000               	movlw	high __pbssBANK0
   716  0016  0085               	movwf	5
   717  0017  301B               	movlw	27
   718  0018  23F4               	fcall	clear_ram0
   719  0019                     end_of_initialization:	
   720                           ;End of C runtime variable initialization code
   721                           
   722  0019                     __end_of__initialization:	
   723  0019  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   724  001A  0020               	movlb	0
   725  001B  281C               	ljmp	_main	;jump to C main() function
   726                           
   727                           	psect	bssCOMMON
   728  0078                     __pbssCOMMON:	
   729  0078                     _UART_Buffer_outptr:	
   730  0078                     	ds	1
   731  0079                     _UART_Buffer_inptr:	
   732  0079                     	ds	1
   733                           
   734                           	psect	bssBANK0
   735  0053                     __pbssBANK0:	
   736  0053                     _UART_Buffer:	
   737  0053                     	ds	8
   738  005B                     _I2C1_Config:	
   739  005B                     	ds	19
   740                           
   741                           	psect	clrtext
   742  03F4                     clear_ram0:	
   743                           ;	Called with FSR0 containing the base address, and
   744                           ;	WREG with the size to clear
   745                           
   746  03F4  0064               	clrwdt	;clear the watchdog before getting into this loop
   747  03F5                     clrloop0:	
   748  03F5  0180               	clrf	0	;clear RAM location pointed to by FSR
   749  03F6  3101               	addfsr 0,1
   750  03F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   751  03F8  2BF5               	goto	clrloop0	;have we reached the end yet?
   752  03F9  3400               	retlw	0	;all done for this memory range, return
   753                           
   754                           	psect	cstackCOMMON
   755  0070                     __pcstackCOMMON:	
   756  0070                     ?_Basic_Init:	
   757  0070                     ?_UART_InitPort:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_I2C_InitPort:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_MPU6050_Init:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_UART_Transmit:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_UART_Interrupt:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_UART_Interrupt:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_I2C_Interrupt:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_I2C1_Interrupt:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ??_I2C1_Interrupt:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_main:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_Handle:	
   788                           ; 1 bytes @ 0x0
   789                           
   790                           
   791                           ; 1 bytes @ 0x0
   792  0070                     	ds	1
   793  0071                     ??_I2C_Interrupt:	
   794  0071                     UART_Interrupt@dt:	
   795                           ; 1 bytes @ 0x1
   796                           
   797                           
   798                           ; 1 bytes @ 0x1
   799  0071                     	ds	1
   800  0072                     UART_Interrupt@x:	
   801                           
   802                           ; 1 bytes @ 0x2
   803  0072                     	ds	1
   804  0073                     ??_Handle:	
   805                           
   806                           ; 1 bytes @ 0x3
   807  0073                     	ds	1
   808  0074                     ??_Basic_Init:	
   809  0074                     ??_UART_InitPort:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     ??_I2C_InitPort:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ??_UART_Transmit:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     ?_I2C1_Transmit:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0074                     ?_I2C1_Receive:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     UART_Transmit@dt:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     I2C1_Transmit@pData:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0074                     I2C1_Receive@pData:	
   831                           ; 1 bytes @ 0x4
   832                           
   833                           
   834                           ; 1 bytes @ 0x4
   835  0074                     	ds	1
   836  0075                     ?_UART_Init:	
   837  0075                     ??_I2C1_Init:	
   838                           ; 1 bytes @ 0x5
   839                           
   840  0075                     I2C1_Transmit@size:	
   841                           ; 1 bytes @ 0x5
   842                           
   843  0075                     I2C1_Receive@size:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0075                     UART_Init@UART_Init_PORT:	
   847                           ; 1 bytes @ 0x5
   848                           
   849                           
   850                           ; 2 bytes @ 0x5
   851  0075                     	ds	1
   852  0076                     ??_I2C1_Transmit:	
   853  0076                     ??_I2C1_Receive:	
   854                           ; 1 bytes @ 0x6
   855                           
   856                           
   857                           ; 1 bytes @ 0x6
   858  0076                     	ds	1
   859  0077                     UART_Init@brg:	
   860                           
   861                           ; 1 bytes @ 0x7
   862  0077                     	ds	1
   863                           
   864                           	psect	cstackBANK0
   865  0020                     __pcstackBANK0:	
   866  0020                     ??_UART_Init:	
   867  0020                     ?_I2C1_Init:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     I2C1_Transmit@address:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     I2C1_Receive@address:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     I2C1_Init@I2C1_Init_PORT:	
   877                           ; 1 bytes @ 0x0
   878                           
   879                           
   880                           ; 2 bytes @ 0x0
   881  0020                     	ds	1
   882  0021                     I2C1_Transmit@i:	
   883  0021                     I2C1_Receive@result:	
   884                           ; 1 bytes @ 0x1
   885                           
   886                           
   887                           ; 1 bytes @ 0x1
   888  0021                     	ds	1
   889  0022                     I2C1_Init@address:	
   890  0022                     I2C1_Transmit@i_442:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0022                     I2C1_Receive@i:	
   894                           ; 1 bytes @ 0x2
   895                           
   896                           
   897                           ; 1 bytes @ 0x2
   898  0022                     	ds	1
   899  0023                     I2C1_Init@mode:	
   900  0023                     I2C1_Transmit@result:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0023                     I2C1_Receive@i_449:	
   904                           ; 1 bytes @ 0x3
   905                           
   906                           
   907                           ; 1 bytes @ 0x3
   908  0023                     	ds	1
   909  0024                     ?_I2C_Transmit:	
   910  0024                     ?_I2C_Receive:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0024                     I2C_Transmit@address:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0024                     I2C_Receive@address:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0024                     I2C1_Init@Speed:	
   920                           ; 1 bytes @ 0x4
   921                           
   922                           
   923                           ; 1 bytes @ 0x4
   924  0024                     	ds	1
   925  0025                     I2C_Transmit@pData:	
   926  0025                     I2C_Receive@pData:	
   927                           ; 1 bytes @ 0x5
   928                           
   929                           
   930                           ; 1 bytes @ 0x5
   931  0025                     	ds	1
   932  0026                     I2C_Transmit@size:	
   933  0026                     I2C_Receive@size:	
   934                           ; 1 bytes @ 0x6
   935                           
   936                           
   937                           ; 1 bytes @ 0x6
   938  0026                     	ds	1
   939  0027                     ??_I2C_Transmit:	
   940  0027                     ??_I2C_Receive:	
   941                           ; 1 bytes @ 0x7
   942                           
   943                           
   944                           ; 1 bytes @ 0x7
   945  0027                     	ds	3
   946  002A                     I2C_Transmit@I2Cx:	
   947  002A                     I2C_Receive@I2Cx:	
   948                           ; 1 bytes @ 0xA
   949                           
   950                           
   951                           ; 1 bytes @ 0xA
   952  002A                     	ds	1
   953  002B                     I2C_Transmit@result:	
   954  002B                     I2C_Receive@result:	
   955                           ; 1 bytes @ 0xB
   956                           
   957                           
   958                           ; 1 bytes @ 0xB
   959  002B                     	ds	1
   960  002C                     ?_MPU6050_Read_MultiData:	
   961  002C                     ?_MPU6050_Write_Data:	
   962                           ; 1 bytes @ 0xC
   963                           
   964  002C                     ?_MPU6050_Read_Data:	
   965                           ; 1 bytes @ 0xC
   966                           
   967  002C                     MPU6050_Write_Data@pData:	
   968                           ; 1 bytes @ 0xC
   969                           
   970  002C                     MPU6050_Read_Data@pData:	
   971                           ; 1 bytes @ 0xC
   972                           
   973  002C                     MPU6050_Read_MultiData@pData:	
   974                           ; 1 bytes @ 0xC
   975                           
   976                           
   977                           ; 1 bytes @ 0xC
   978  002C                     	ds	1
   979  002D                     ??_MPU6050_Write_Data:	
   980  002D                     ??_MPU6050_Read_Data:	
   981                           ; 1 bytes @ 0xD
   982                           
   983  002D                     MPU6050_Read_MultiData@size:	
   984                           ; 1 bytes @ 0xD
   985                           
   986                           
   987                           ; 1 bytes @ 0xD
   988  002D                     	ds	1
   989  002E                     ??_MPU6050_Read_MultiData:	
   990                           
   991                           ; 1 bytes @ 0xE
   992  002E                     	ds	2
   993  0030                     MPU6050_Read_Data@reg:	
   994                           
   995                           ; 1 bytes @ 0x10
   996  0030                     	ds	1
   997  0031                     MPU6050_Write_Data@reg:	
   998  0031                     MPU6050_Read_Data@result:	
   999                           ; 1 bytes @ 0x11
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x11
  1003  0031                     	ds	1
  1004  0032                     MPU6050_Read_MultiData@reg:	
  1005  0032                     MPU6050_Write_Data@senddata:	
  1006                           ; 1 bytes @ 0x12
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x12
  1010  0032                     	ds	1
  1011  0033                     MPU6050_Read_MultiData@result:	
  1012                           
  1013                           ; 1 bytes @ 0x13
  1014  0033                     	ds	1
  1015  0034                     MPU6050_Write_Data@result:	
  1016                           
  1017                           ; 1 bytes @ 0x14
  1018  0034                     	ds	1
  1019  0035                     ??_MPU6050_Init:	
  1020                           
  1021                           ; 1 bytes @ 0x15
  1022  0035                     	ds	2
  1023  0037                     MPU6050_Init@result:	
  1024                           
  1025                           ; 1 bytes @ 0x17
  1026  0037                     	ds	1
  1027  0038                     MPU6050_Init@data:	
  1028                           
  1029                           ; 1 bytes @ 0x18
  1030  0038                     	ds	1
  1031  0039                     MPU6050_Init@addr:	
  1032                           
  1033                           ; 1 bytes @ 0x19
  1034  0039                     	ds	1
  1035  003A                     ??_main:	
  1036                           
  1037                           ; 1 bytes @ 0x1A
  1038  003A                     	ds	3
  1039  003D                     main@result:	
  1040                           
  1041                           ; 1 bytes @ 0x1D
  1042  003D                     	ds	1
  1043  003E                     main@swap:	
  1044                           
  1045                           ; 1 bytes @ 0x1E
  1046  003E                     	ds	1
  1047  003F                     main@swap_163:	
  1048                           
  1049                           ; 1 bytes @ 0x1F
  1050  003F                     	ds	1
  1051  0040                     main@swap_164:	
  1052                           
  1053                           ; 1 bytes @ 0x20
  1054  0040                     	ds	1
  1055  0041                     main@swap_165:	
  1056                           
  1057                           ; 1 bytes @ 0x21
  1058  0041                     	ds	1
  1059  0042                     main@swap_166:	
  1060                           
  1061                           ; 1 bytes @ 0x22
  1062  0042                     	ds	1
  1063  0043                     main@swap_167:	
  1064                           
  1065                           ; 1 bytes @ 0x23
  1066  0043                     	ds	1
  1067  0044                     main@swap_168:	
  1068                           
  1069                           ; 1 bytes @ 0x24
  1070  0044                     	ds	1
  1071  0045                     main@accel_t_gyro:	
  1072                           
  1073                           ; 14 bytes @ 0x25
  1074  0045                     	ds	14
  1075                           
  1076                           	psect	maintext
  1077  001C                     __pmaintext:	
  1078 ;;
  1079 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1080 ;;
  1081 ;; *************** function _main *****************
  1082 ;; Defined at:
  1083 ;;		line 9 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  swap            1   36[BANK0 ] unsigned char 
  1088 ;;  swap            1   35[BANK0 ] unsigned char 
  1089 ;;  swap            1   34[BANK0 ] unsigned char 
  1090 ;;  swap            1   33[BANK0 ] unsigned char 
  1091 ;;  swap            1   32[BANK0 ] unsigned char 
  1092 ;;  swap            1   31[BANK0 ] unsigned char 
  1093 ;;  swap            1   30[BANK0 ] unsigned char 
  1094 ;;  accel_t_gyro   14   37[BANK0 ] struct .
  1095 ;;  result          1   29[BANK0 ] char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : B1F/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1
  1105 ;;      Params:         0       0       0
  1106 ;;      Locals:         0      22       0
  1107 ;;      Temps:          0       3       0
  1108 ;;      Totals:         0      25       0
  1109 ;;Total ram usage:       25 bytes
  1110 ;; Hardware stack levels required when called:    7
  1111 ;; This function calls:
  1112 ;;		_Basic_Init
  1113 ;;		_I2C1_Init
  1114 ;;		_MPU6050_Init
  1115 ;;		_MPU6050_Read_MultiData
  1116 ;;		_UART_Init
  1117 ;;		_UART_Transmit
  1118 ;; This function is called by:
  1119 ;;		Startup code after reset
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _main
  1125  001C                     _main:	
  1126                           
  1127                           ;main.c: 11: accel_t_gyro_union accel_t_gyro;
  1128                           ;main.c: 13: Basic_Init();
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1132  001C  23DF               	fcall	_Basic_Init
  1133                           
  1134                           ;main.c: 14: UART_Init(UART_InitPort,BAUD_9600);
  1135  001D  30C4               	movlw	low _UART_InitPort
  1136  001E  00F5               	movwf	UART_Init@UART_Init_PORT
  1137  001F  3003               	movlw	high _UART_InitPort
  1138  0020  00F6               	movwf	UART_Init@UART_Init_PORT+1
  1139  0021  3003               	movlw	3
  1140  0022  0020               	movlb	0	; select bank0
  1141  0023  00BA               	movwf	??_main
  1142  0024  083A               	movf	??_main,w
  1143  0025  00F7               	movwf	UART_Init@brg
  1144  0026  2299               	fcall	_UART_Init
  1145                           
  1146                           ;main.c: 16: I2C1_Init(I2C_InitPort,0x00,I2C_MODE_MASTER,I2C_SPEED_HIGH);
  1147  0027  30D2               	movlw	low _I2C_InitPort
  1148  0028  0020               	movlb	0	; select bank0
  1149  0029  00A0               	movwf	I2C1_Init@I2C1_Init_PORT
  1150  002A  3003               	movlw	high _I2C_InitPort
  1151  002B  00A1               	movwf	I2C1_Init@I2C1_Init_PORT+1
  1152  002C  01A2               	clrf	I2C1_Init@address
  1153  002D  01A3               	clrf	I2C1_Init@mode
  1154  002E  01A4               	clrf	I2C1_Init@Speed
  1155  002F  0AA4               	incf	I2C1_Init@Speed,f
  1156  0030  21F0               	fcall	_I2C1_Init
  1157                           
  1158                           ;main.c: 18: MPU6050_Init();
  1159  0031  2363               	fcall	_MPU6050_Init
  1160  0032                     l1814:	
  1161                           ;main.c: 20: int8_t result;
  1162                           ;main.c: 22: while(1)
  1163                           
  1164                           
  1165                           ;main.c: 23: {
  1166                           ;main.c: 24: result = MPU6050_Read_MultiData(0x3B,(uint8_t *)&accel_t_gyro,sizeof(accel_
      +                          t_gyro));
  1167  0032  3045               	movlw	(low (main@accel_t_gyro| 0))& (0+255)
  1168  0033  0020               	movlb	0	; select bank0
  1169  0034  00BA               	movwf	??_main
  1170  0035  083A               	movf	??_main,w
  1171  0036  00AC               	movwf	MPU6050_Read_MultiData@pData
  1172  0037  300E               	movlw	14
  1173  0038  00BB               	movwf	??_main+1
  1174  0039  083B               	movf	??_main+1,w
  1175  003A  00AD               	movwf	MPU6050_Read_MultiData@size
  1176  003B  303B               	movlw	59
  1177  003C  22D1               	fcall	_MPU6050_Read_MultiData
  1178  003D  0020               	movlb	0	; select bank0
  1179  003E  00BC               	movwf	??_main+2
  1180  003F  083C               	movf	??_main+2,w
  1181  0040  00BD               	movwf	main@result
  1182                           
  1183                           ;main.c: 27: {uint8_t swap = accel_t_gyro.reg.x_accel_h; accel_t_gyro.reg.x_accel_h = ac
      +                          cel_t_gyro.reg.x_accel_l; accel_t_gyro.reg.x_accel_l = swap;};
  1184  0041  0845               	movf	main@accel_t_gyro,w
  1185  0042  00BA               	movwf	??_main
  1186  0043  083A               	movf	??_main,w
  1187  0044  00BE               	movwf	main@swap
  1188  0045  0846               	movf	main@accel_t_gyro+1,w
  1189  0046  00BA               	movwf	??_main
  1190  0047  083A               	movf	??_main,w
  1191  0048  00C5               	movwf	main@accel_t_gyro
  1192  0049  083E               	movf	main@swap,w
  1193  004A  00BA               	movwf	??_main
  1194  004B  083A               	movf	??_main,w
  1195  004C  00C6               	movwf	main@accel_t_gyro+1
  1196                           
  1197                           ;main.c: 28: {uint8_t swap = accel_t_gyro.reg.y_accel_h; accel_t_gyro.reg.y_accel_h = ac
      +                          cel_t_gyro.reg.y_accel_l; accel_t_gyro.reg.y_accel_l = swap;};
  1198  004D  0847               	movf	main@accel_t_gyro+2,w
  1199  004E  00BA               	movwf	??_main
  1200  004F  083A               	movf	??_main,w
  1201  0050  00BF               	movwf	main@swap_163
  1202  0051  0848               	movf	main@accel_t_gyro+3,w
  1203  0052  00BA               	movwf	??_main
  1204  0053  083A               	movf	??_main,w
  1205  0054  00C7               	movwf	main@accel_t_gyro+2
  1206  0055  083F               	movf	main@swap_163,w
  1207  0056  00BA               	movwf	??_main
  1208  0057  083A               	movf	??_main,w
  1209  0058  00C8               	movwf	main@accel_t_gyro+3
  1210                           
  1211                           ;main.c: 29: {uint8_t swap = accel_t_gyro.reg.z_accel_h; accel_t_gyro.reg.z_accel_h = ac
      +                          cel_t_gyro.reg.z_accel_l; accel_t_gyro.reg.z_accel_l = swap;};
  1212  0059  0849               	movf	main@accel_t_gyro+4,w
  1213  005A  00BA               	movwf	??_main
  1214  005B  083A               	movf	??_main,w
  1215  005C  00C0               	movwf	main@swap_164
  1216  005D  084A               	movf	main@accel_t_gyro+5,w
  1217  005E  00BA               	movwf	??_main
  1218  005F  083A               	movf	??_main,w
  1219  0060  00C9               	movwf	main@accel_t_gyro+4
  1220  0061  0840               	movf	main@swap_164,w
  1221  0062  00BA               	movwf	??_main
  1222  0063  083A               	movf	??_main,w
  1223  0064  00CA               	movwf	main@accel_t_gyro+5
  1224                           
  1225                           ;main.c: 30: {uint8_t swap = accel_t_gyro.reg.t_h; accel_t_gyro.reg.t_h = accel_t_gyro.r
      +                          eg.t_l; accel_t_gyro.reg.t_l = swap;};
  1226  0065  084B               	movf	main@accel_t_gyro+6,w
  1227  0066  00BA               	movwf	??_main
  1228  0067  083A               	movf	??_main,w
  1229  0068  00C1               	movwf	main@swap_165
  1230  0069  084C               	movf	main@accel_t_gyro+7,w
  1231  006A  00BA               	movwf	??_main
  1232  006B  083A               	movf	??_main,w
  1233  006C  00CB               	movwf	main@accel_t_gyro+6
  1234  006D  0841               	movf	main@swap_165,w
  1235  006E  00BA               	movwf	??_main
  1236  006F  083A               	movf	??_main,w
  1237  0070  00CC               	movwf	main@accel_t_gyro+7
  1238                           
  1239                           ;main.c: 31: {uint8_t swap = accel_t_gyro.reg.x_gyro_h; accel_t_gyro.reg.x_gyro_h = acce
      +                          l_t_gyro.reg.x_gyro_l; accel_t_gyro.reg.x_gyro_l = swap;};
  1240  0071  084D               	movf	main@accel_t_gyro+8,w
  1241  0072  00BA               	movwf	??_main
  1242  0073  083A               	movf	??_main,w
  1243  0074  00C2               	movwf	main@swap_166
  1244  0075  084E               	movf	main@accel_t_gyro+9,w
  1245  0076  00BA               	movwf	??_main
  1246  0077  083A               	movf	??_main,w
  1247  0078  00CD               	movwf	main@accel_t_gyro+8
  1248  0079  0842               	movf	main@swap_166,w
  1249  007A  00BA               	movwf	??_main
  1250  007B  083A               	movf	??_main,w
  1251  007C  00CE               	movwf	main@accel_t_gyro+9
  1252                           
  1253                           ;main.c: 32: {uint8_t swap = accel_t_gyro.reg.y_gyro_h; accel_t_gyro.reg.y_gyro_h = acce
      +                          l_t_gyro.reg.y_gyro_l; accel_t_gyro.reg.y_gyro_l = swap;};
  1254  007D  084F               	movf	main@accel_t_gyro+10,w
  1255  007E  00BA               	movwf	??_main
  1256  007F  083A               	movf	??_main,w
  1257  0080  00C3               	movwf	main@swap_167
  1258  0081  0850               	movf	main@accel_t_gyro+11,w
  1259  0082  00BA               	movwf	??_main
  1260  0083  083A               	movf	??_main,w
  1261  0084  00CF               	movwf	main@accel_t_gyro+10
  1262  0085  0843               	movf	main@swap_167,w
  1263  0086  00BA               	movwf	??_main
  1264  0087  083A               	movf	??_main,w
  1265  0088  00D0               	movwf	main@accel_t_gyro+11
  1266                           
  1267                           ;main.c: 33: {uint8_t swap = accel_t_gyro.reg.z_gyro_h; accel_t_gyro.reg.z_gyro_h = acce
      +                          l_t_gyro.reg.z_gyro_l; accel_t_gyro.reg.z_gyro_l = swap;};
  1268  0089  0851               	movf	main@accel_t_gyro+12,w
  1269  008A  00BA               	movwf	??_main
  1270  008B  083A               	movf	??_main,w
  1271  008C  00C4               	movwf	main@swap_168
  1272  008D  0852               	movf	main@accel_t_gyro+13,w
  1273  008E  00BA               	movwf	??_main
  1274  008F  083A               	movf	??_main,w
  1275  0090  00D1               	movwf	main@accel_t_gyro+12
  1276  0091  0844               	movf	main@swap_168,w
  1277  0092  00BA               	movwf	??_main
  1278  0093  083A               	movf	??_main,w
  1279  0094  00D2               	movwf	main@accel_t_gyro+13
  1280                           
  1281                           ;main.c: 35: UART_Transmit(0xFF);
  1282  0095  30FF               	movlw	255
  1283  0096  23EC               	fcall	_UART_Transmit
  1284                           
  1285                           ;main.c: 36: UART_Transmit(0xFF);
  1286  0097  30FF               	movlw	255
  1287  0098  23EC               	fcall	_UART_Transmit
  1288                           
  1289                           ;main.c: 37: UART_Transmit(0xFF);
  1290  0099  30FF               	movlw	255
  1291  009A  23EC               	fcall	_UART_Transmit
  1292                           
  1293                           ;main.c: 38: UART_Transmit(0xFF);
  1294  009B  30FF               	movlw	255
  1295  009C  23EC               	fcall	_UART_Transmit
  1296                           
  1297                           ;main.c: 39: UART_Transmit(0xFF);
  1298  009D  30FF               	movlw	255
  1299  009E  23EC               	fcall	_UART_Transmit
  1300                           
  1301                           ;main.c: 41: UART_Transmit(accel_t_gyro.reg.x_accel_h);
  1302  009F  0020               	movlb	0	; select bank0
  1303  00A0  0845               	movf	main@accel_t_gyro,w
  1304  00A1  23EC               	fcall	_UART_Transmit
  1305                           
  1306                           ;main.c: 42: UART_Transmit(accel_t_gyro.reg.x_accel_l);
  1307  00A2  0020               	movlb	0	; select bank0
  1308  00A3  0846               	movf	main@accel_t_gyro+1,w
  1309  00A4  23EC               	fcall	_UART_Transmit
  1310                           
  1311                           ;main.c: 43: UART_Transmit(accel_t_gyro.reg.y_accel_h);
  1312  00A5  0020               	movlb	0	; select bank0
  1313  00A6  0847               	movf	main@accel_t_gyro+2,w
  1314  00A7  23EC               	fcall	_UART_Transmit
  1315                           
  1316                           ;main.c: 44: UART_Transmit(accel_t_gyro.reg.y_accel_l);
  1317  00A8  0020               	movlb	0	; select bank0
  1318  00A9  0848               	movf	main@accel_t_gyro+3,w
  1319  00AA  23EC               	fcall	_UART_Transmit
  1320                           
  1321                           ;main.c: 45: UART_Transmit(accel_t_gyro.reg.z_accel_h);
  1322  00AB  0020               	movlb	0	; select bank0
  1323  00AC  0849               	movf	main@accel_t_gyro+4,w
  1324  00AD  23EC               	fcall	_UART_Transmit
  1325                           
  1326                           ;main.c: 46: UART_Transmit(accel_t_gyro.reg.z_accel_l);
  1327  00AE  0020               	movlb	0	; select bank0
  1328  00AF  084A               	movf	main@accel_t_gyro+5,w
  1329  00B0  23EC               	fcall	_UART_Transmit
  1330                           
  1331                           ;main.c: 48: UART_Transmit(accel_t_gyro.reg.t_h);
  1332  00B1  0020               	movlb	0	; select bank0
  1333  00B2  084B               	movf	main@accel_t_gyro+6,w
  1334  00B3  23EC               	fcall	_UART_Transmit
  1335                           
  1336                           ;main.c: 49: UART_Transmit(accel_t_gyro.reg.t_l);
  1337  00B4  0020               	movlb	0	; select bank0
  1338  00B5  084C               	movf	main@accel_t_gyro+7,w
  1339  00B6  23EC               	fcall	_UART_Transmit
  1340                           
  1341                           ;main.c: 51: UART_Transmit(accel_t_gyro.reg.x_gyro_h);
  1342  00B7  0020               	movlb	0	; select bank0
  1343  00B8  084D               	movf	main@accel_t_gyro+8,w
  1344  00B9  23EC               	fcall	_UART_Transmit
  1345                           
  1346                           ;main.c: 52: UART_Transmit(accel_t_gyro.reg.x_gyro_l);
  1347  00BA  0020               	movlb	0	; select bank0
  1348  00BB  084E               	movf	main@accel_t_gyro+9,w
  1349  00BC  23EC               	fcall	_UART_Transmit
  1350                           
  1351                           ;main.c: 53: UART_Transmit(accel_t_gyro.reg.y_gyro_h);
  1352  00BD  0020               	movlb	0	; select bank0
  1353  00BE  084F               	movf	main@accel_t_gyro+10,w
  1354  00BF  23EC               	fcall	_UART_Transmit
  1355                           
  1356                           ;main.c: 54: UART_Transmit(accel_t_gyro.reg.y_gyro_l);
  1357  00C0  0020               	movlb	0	; select bank0
  1358  00C1  0850               	movf	main@accel_t_gyro+11,w
  1359  00C2  23EC               	fcall	_UART_Transmit
  1360                           
  1361                           ;main.c: 55: UART_Transmit(accel_t_gyro.reg.z_gyro_h);
  1362  00C3  0020               	movlb	0	; select bank0
  1363  00C4  0851               	movf	main@accel_t_gyro+12,w
  1364  00C5  23EC               	fcall	_UART_Transmit
  1365                           
  1366                           ;main.c: 56: UART_Transmit(accel_t_gyro.reg.z_gyro_l);
  1367  00C6  0020               	movlb	0	; select bank0
  1368  00C7  0852               	movf	main@accel_t_gyro+13,w
  1369  00C8  23EC               	fcall	_UART_Transmit
  1370  00C9  2832               	goto	l1814
  1371  00CA                     __end_of_main:	
  1372                           
  1373                           	psect	text1
  1374  03EC                     __ptext1:	
  1375 ;; *************** function _UART_Transmit *****************
  1376 ;; Defined at:
  1377 ;;		line 70 in file "PIC_UART.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  dt              1    wreg     unsigned char 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  dt              1    4[COMMON] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1
  1391 ;;      Params:         0       0       0
  1392 ;;      Locals:         1       0       0
  1393 ;;      Temps:          0       0       0
  1394 ;;      Totals:         1       0       0
  1395 ;;Total ram usage:        1 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    3
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;;		_putch
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _UART_Transmit
  1408  03EC                     _UART_Transmit:	
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _UART_Transmit: [wreg]
  1412                           ;UART_Transmit@dt stored from wreg
  1413  03EC  00F4               	movwf	UART_Transmit@dt
  1414  03ED                     l108:	
  1415                           ;PIC_UART.c: 72: while (TXIF == 0);
  1416                           
  1417  03ED  0020               	movlb	0	; select bank0
  1418  03EE  1E11               	btfss	17,4	;volatile
  1419  03EF  2BED               	goto	l108
  1420                           
  1421                           ;PIC_UART.c: 73: TXREG = dt;
  1422  03F0  0874               	movf	UART_Transmit@dt,w
  1423  03F1  0023               	movlb	3	; select bank3
  1424  03F2  009A               	movwf	26	;volatile
  1425  03F3  0008               	return
  1426  03F4                     __end_of_UART_Transmit:	
  1427                           
  1428                           	psect	text2
  1429  0299                     __ptext2:	
  1430 ;; *************** function _UART_Init *****************
  1431 ;; Defined at:
  1432 ;;		line 37 in file "PIC_UART.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  UART_Init_PO    2    5[COMMON] PTR FTN()void 
  1435 ;;		 -> UART_InitPort(1), 
  1436 ;;  brg             1    7[COMMON] enum E2433
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1
  1448 ;;      Params:         3       0       0
  1449 ;;      Locals:         0       0       0
  1450 ;;      Temps:          0       4       0
  1451 ;;      Totals:         3       4       0
  1452 ;;Total ram usage:        7 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    4
  1455 ;; This function calls:
  1456 ;;		_UART_InitPort
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _UART_Init
  1464  0299                     _UART_Init:	
  1465                           
  1466                           ;PIC_UART.c: 39: UART_Init_PORT();
  1467                           
  1468                           ;incstack = 0
  1469                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1470  0299  0876               	movf	UART_Init@UART_Init_PORT+1,w
  1471  029A  008A               	movwf	10
  1472  029B  0875               	movf	UART_Init@UART_Init_PORT,w
  1473  029C  000A               	callw
  1474  029D  3182               	pagesel	$
  1475                           
  1476                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1477  029E  3020               	movlw	32
  1478  029F  0023               	movlb	3	; select bank3
  1479  02A0  009E               	movwf	30	;volatile
  1480                           
  1481                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1482  02A1  3010               	movlw	16
  1483  02A2  009D               	movwf	29	;volatile
  1484                           
  1485                           ;PIC_UART.c: 44: BRG16 = 1;
  1486  02A3  159F               	bsf	31,3	;volatile
  1487                           
  1488                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1489  02A4  0877               	movf	UART_Init@brg,w
  1490  02A5  0020               	movlb	0	; select bank0
  1491  02A6  00A0               	movwf	??_UART_Init
  1492  02A7  01A1               	clrf	??_UART_Init+1
  1493  02A8  35A0               	lslf	??_UART_Init,f
  1494  02A9  0DA1               	rlf	??_UART_Init+1,f
  1495  02AA  30B4               	movlw	low (_baudtable| (0+32768))
  1496  02AB  0720               	addwf	??_UART_Init,w
  1497  02AC  0084               	movwf	4
  1498  02AD  3083               	movlw	high (_baudtable| (0+32768))
  1499  02AE  3D21               	addwfc	??_UART_Init+1,w
  1500  02AF  0085               	movwf	5
  1501  02B0  0800               	movf	0,w	;code access
  1502  02B1  0023               	movlb	3	; select bank3
  1503  02B2  009B               	movwf	27	;volatile
  1504                           
  1505                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1506  02B3  0877               	movf	UART_Init@brg,w
  1507  02B4  0020               	movlb	0	; select bank0
  1508  02B5  00A0               	movwf	??_UART_Init
  1509  02B6  01A1               	clrf	??_UART_Init+1
  1510  02B7  35A0               	lslf	??_UART_Init,f
  1511  02B8  0DA1               	rlf	??_UART_Init+1,f
  1512  02B9  30B4               	movlw	low (_baudtable| (0+32768))
  1513  02BA  0720               	addwf	??_UART_Init,w
  1514  02BB  0084               	movwf	4
  1515  02BC  3083               	movlw	high (_baudtable| (0+32768))
  1516  02BD  3D21               	addwfc	??_UART_Init+1,w
  1517  02BE  0085               	movwf	5
  1518  02BF  3F00               	moviw [0]fsr0
  1519  02C0  00A2               	movwf	??_UART_Init+2
  1520  02C1  3F01               	moviw [1]fsr0
  1521  02C2  00A3               	movwf	??_UART_Init+3
  1522  02C3  0823               	movf	??_UART_Init+3,w
  1523  02C4  0023               	movlb	3	; select bank3
  1524  02C5  009C               	movwf	28	;volatile
  1525                           
  1526                           ;PIC_UART.c: 48: RCIF = 0;
  1527  02C6  0020               	movlb	0	; select bank0
  1528  02C7  1291               	bcf	17,5	;volatile
  1529                           
  1530                           ;PIC_UART.c: 49: RCIE = 1;
  1531  02C8  0021               	movlb	1	; select bank1
  1532  02C9  1691               	bsf	17,5	;volatile
  1533                           
  1534                           ;PIC_UART.c: 50: PEIE = 1;
  1535  02CA  170B               	bsf	11,6	;volatile
  1536                           
  1537                           ;PIC_UART.c: 51: GIE = 1;
  1538  02CB  178B               	bsf	11,7	;volatile
  1539                           
  1540                           ;PIC_UART.c: 53: SPEN = 1;
  1541  02CC  0023               	movlb	3	; select bank3
  1542  02CD  179D               	bsf	29,7	;volatile
  1543                           
  1544                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1545  02CE  01F9               	clrf	_UART_Buffer_inptr
  1546                           
  1547                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1548  02CF  01F8               	clrf	_UART_Buffer_outptr
  1549  02D0  0008               	return
  1550  02D1                     __end_of_UART_Init:	
  1551                           
  1552                           	psect	text3
  1553  03C4                     __ptext3:	
  1554 ;; *************** function _UART_InitPort *****************
  1555 ;; Defined at:
  1556 ;;		line 82 in file "main.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1
  1570 ;;      Params:         0       0       0
  1571 ;;      Locals:         0       0       0
  1572 ;;      Temps:          1       0       0
  1573 ;;      Totals:         1       0       0
  1574 ;;Total ram usage:        1 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    3
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;;		_UART_Init
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           
  1586                           ;psect for function _UART_InitPort
  1587  03C4                     _UART_InitPort:	
  1588                           
  1589                           ;main.c: 84: TRISA &= ~(1<<4);
  1590                           
  1591                           ;incstack = 0
  1592                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  1593  03C4  30EF               	movlw	239
  1594  03C5  00F4               	movwf	??_UART_InitPort
  1595  03C6  0874               	movf	??_UART_InitPort,w
  1596  03C7  0021               	movlb	1	; select bank1
  1597  03C8  058C               	andwf	12,f	;volatile
  1598                           
  1599                           ;main.c: 85: ANSELA &= ~(1<<4);
  1600  03C9  30EF               	movlw	239
  1601  03CA  00F4               	movwf	??_UART_InitPort
  1602  03CB  0874               	movf	??_UART_InitPort,w
  1603  03CC  0023               	movlb	3	; select bank3
  1604  03CD  058C               	andwf	12,f	;volatile
  1605                           
  1606                           ;main.c: 86: APFCON |= (1<<2);
  1607  03CE  0022               	movlb	2	; select bank2
  1608  03CF  151D               	bsf	29,2	;volatile
  1609                           
  1610                           ;main.c: 87: APFCON |= (1<<7);
  1611  03D0  179D               	bsf	29,7	;volatile
  1612  03D1  0008               	return
  1613  03D2                     __end_of_UART_InitPort:	
  1614                           
  1615                           	psect	text4
  1616  02D1                     __ptext4:	
  1617 ;; *************** function _MPU6050_Read_MultiData *****************
  1618 ;; Defined at:
  1619 ;;		line 27 in file "MPU6050.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  reg             1    wreg     unsigned char 
  1622 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  1623 ;;		 -> main@accel_t_gyro(14), 
  1624 ;;  size            1   13[BANK0 ] unsigned char 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  reg             1   18[BANK0 ] unsigned char 
  1627 ;;  result          1   19[BANK0 ] char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      char 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1
  1637 ;;      Params:         0       2       0
  1638 ;;      Locals:         0       2       0
  1639 ;;      Temps:          0       4       0
  1640 ;;      Totals:         0       8       0
  1641 ;;Total ram usage:        8 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    5
  1644 ;; This function calls:
  1645 ;;		_I2C_Receive
  1646 ;;		_I2C_Transmit
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _MPU6050_Read_MultiData
  1654  02D1                     _MPU6050_Read_MultiData:	
  1655                           
  1656                           ;incstack = 0
  1657                           ; Regs used in _MPU6050_Read_MultiData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1658                           ;MPU6050_Read_MultiData@reg stored from wreg
  1659  02D1  0020               	movlb	0	; select bank0
  1660  02D2  00B2               	movwf	MPU6050_Read_MultiData@reg
  1661                           
  1662                           ;MPU6050.c: 29: int8_t result = 0;
  1663  02D3  01B3               	clrf	MPU6050_Read_MultiData@result
  1664                           
  1665                           ;MPU6050.c: 31: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  1666  02D4  3068               	movlw	104
  1667  02D5  00AE               	movwf	??_MPU6050_Read_MultiData
  1668  02D6  082E               	movf	??_MPU6050_Read_MultiData,w
  1669  02D7  00A4               	movwf	I2C_Transmit@address
  1670  02D8  3032               	movlw	(low (MPU6050_Read_MultiData@reg| 0))& (0+255)
  1671  02D9  00AF               	movwf	??_MPU6050_Read_MultiData+1
  1672  02DA  082F               	movf	??_MPU6050_Read_MultiData+1,w
  1673  02DB  00A5               	movwf	I2C_Transmit@pData
  1674  02DC  01A6               	clrf	I2C_Transmit@size
  1675  02DD  0AA6               	incf	I2C_Transmit@size,f
  1676  02DE  3000               	movlw	0
  1677  02DF  237E               	fcall	_I2C_Transmit
  1678  02E0  0020               	movlb	0	; select bank0
  1679  02E1  00B0               	movwf	??_MPU6050_Read_MultiData+2
  1680  02E2  0830               	movf	??_MPU6050_Read_MultiData+2,w
  1681  02E3  07B3               	addwf	MPU6050_Read_MultiData@result,f
  1682                           
  1683                           ;MPU6050.c: 32: result += I2C_Receive(I2C1_MODULE,0x68,pData,size);
  1684  02E4  3068               	movlw	104
  1685  02E5  00AE               	movwf	??_MPU6050_Read_MultiData
  1686  02E6  082E               	movf	??_MPU6050_Read_MultiData,w
  1687  02E7  00A4               	movwf	I2C_Receive@address
  1688  02E8  082C               	movf	MPU6050_Read_MultiData@pData,w
  1689  02E9  00AF               	movwf	??_MPU6050_Read_MultiData+1
  1690  02EA  082F               	movf	??_MPU6050_Read_MultiData+1,w
  1691  02EB  00A5               	movwf	I2C_Receive@pData
  1692  02EC  082D               	movf	MPU6050_Read_MultiData@size,w
  1693  02ED  00B0               	movwf	??_MPU6050_Read_MultiData+2
  1694  02EE  0830               	movf	??_MPU6050_Read_MultiData+2,w
  1695  02EF  00A6               	movwf	I2C_Receive@size
  1696  02F0  3000               	movlw	0
  1697  02F1  2399               	fcall	_I2C_Receive
  1698  02F2  0020               	movlb	0	; select bank0
  1699  02F3  00B1               	movwf	??_MPU6050_Read_MultiData+3
  1700  02F4  0831               	movf	??_MPU6050_Read_MultiData+3,w
  1701  02F5  07B3               	addwf	MPU6050_Read_MultiData@result,f
  1702                           
  1703                           ;MPU6050.c: 34: return result;
  1704  02F6  0833               	movf	MPU6050_Read_MultiData@result,w
  1705  02F7  0008               	return
  1706  02F8                     __end_of_MPU6050_Read_MultiData:	
  1707                           
  1708                           	psect	text5
  1709  0363                     __ptext5:	
  1710 ;; *************** function _MPU6050_Init *****************
  1711 ;; Defined at:
  1712 ;;		line 37 in file "MPU6050.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  addr            1   25[BANK0 ] unsigned char 
  1717 ;;  data            1   24[BANK0 ] unsigned char 
  1718 ;;  result          1   23[BANK0 ] char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      char 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1
  1728 ;;      Params:         0       0       0
  1729 ;;      Locals:         0       3       0
  1730 ;;      Temps:          0       2       0
  1731 ;;      Totals:         0       5       0
  1732 ;;Total ram usage:        5 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    6
  1735 ;; This function calls:
  1736 ;;		_MPU6050_Read_Data
  1737 ;;		_MPU6050_Write_Data
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _MPU6050_Init
  1745  0363                     _MPU6050_Init:	
  1746                           
  1747                           ;MPU6050.c: 39: int8_t result;
  1748                           ;MPU6050.c: 41: uint8_t addr;
  1749                           ;MPU6050.c: 42: result = MPU6050_Read_Data(0x75,&addr);
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _MPU6050_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1753  0363  3039               	movlw	(low (MPU6050_Init@addr| 0))& (0+255)
  1754  0364  0020               	movlb	0	; select bank0
  1755  0365  00B5               	movwf	??_MPU6050_Init
  1756  0366  0835               	movf	??_MPU6050_Init,w
  1757  0367  00AC               	movwf	MPU6050_Read_Data@pData
  1758  0368  3075               	movlw	117
  1759  0369  231F               	fcall	_MPU6050_Read_Data
  1760  036A  0020               	movlb	0	; select bank0
  1761  036B  00B6               	movwf	??_MPU6050_Init+1
  1762  036C  0836               	movf	??_MPU6050_Init+1,w
  1763  036D  00B7               	movwf	MPU6050_Init@result
  1764                           
  1765                           ;MPU6050.c: 43: if(addr!=0x68) return -1;
  1766  036E  3068               	movlw	104
  1767  036F  0639               	xorwf	MPU6050_Init@addr,w
  1768  0370  1D03               	btfss	3,2
  1769  0371  0008               	return
  1770                           
  1771                           ;MPU6050.c: 45: uint8_t data = 0x00;
  1772                           
  1773                           ;	Return value of _MPU6050_Init is never used
  1774  0372  01B8               	clrf	MPU6050_Init@data
  1775                           
  1776                           ;MPU6050.c: 46: result += MPU6050_Write_Data(0x6B,data);
  1777  0373  0838               	movf	MPU6050_Init@data,w
  1778  0374  00B5               	movwf	??_MPU6050_Init
  1779  0375  0835               	movf	??_MPU6050_Init,w
  1780  0376  00AC               	movwf	MPU6050_Write_Data@pData
  1781  0377  306B               	movlw	107
  1782  0378  2344               	fcall	_MPU6050_Write_Data
  1783  0379  0020               	movlb	0	; select bank0
  1784  037A  00B6               	movwf	??_MPU6050_Init+1
  1785  037B  0836               	movf	??_MPU6050_Init+1,w
  1786  037C  07B7               	addwf	MPU6050_Init@result,f
  1787  037D  0008               	return
  1788  037E                     __end_of_MPU6050_Init:	
  1789                           ;MPU6050.c: 48: return result;
  1790                           ;	Return value of _MPU6050_Init is never used
  1791                           
  1792                           
  1793                           	psect	text6
  1794  0344                     __ptext6:	
  1795 ;; *************** function _MPU6050_Write_Data *****************
  1796 ;; Defined at:
  1797 ;;		line 3 in file "MPU6050.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  reg             1    wreg     unsigned char 
  1800 ;;  pData           1   12[BANK0 ] unsigned char 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  reg             1   17[BANK0 ] unsigned char 
  1803 ;;  senddata        2   18[BANK0 ] unsigned char [2]
  1804 ;;  result          1   20[BANK0 ] char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      char 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1
  1814 ;;      Params:         0       1       0
  1815 ;;      Locals:         0       4       0
  1816 ;;      Temps:          0       4       0
  1817 ;;      Totals:         0       9       0
  1818 ;;Total ram usage:        9 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    5
  1821 ;; This function calls:
  1822 ;;		_I2C_Transmit
  1823 ;; This function is called by:
  1824 ;;		_MPU6050_Init
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _MPU6050_Write_Data
  1830  0344                     _MPU6050_Write_Data:	
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _MPU6050_Write_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1834                           ;MPU6050_Write_Data@reg stored from wreg
  1835  0344  0020               	movlb	0	; select bank0
  1836  0345  00B1               	movwf	MPU6050_Write_Data@reg
  1837                           
  1838                           ;MPU6050.c: 5: int8_t result = 0;
  1839  0346  01B4               	clrf	MPU6050_Write_Data@result
  1840                           
  1841                           ;MPU6050.c: 6: uint8_t senddata[2];
  1842                           ;MPU6050.c: 8: senddata[0] = reg;
  1843  0347  0831               	movf	MPU6050_Write_Data@reg,w
  1844  0348  00AD               	movwf	??_MPU6050_Write_Data
  1845  0349  082D               	movf	??_MPU6050_Write_Data,w
  1846  034A  00B2               	movwf	MPU6050_Write_Data@senddata
  1847                           
  1848                           ;MPU6050.c: 9: senddata[1] = pData;
  1849  034B  082C               	movf	MPU6050_Write_Data@pData,w
  1850  034C  00AD               	movwf	??_MPU6050_Write_Data
  1851  034D  082D               	movf	??_MPU6050_Write_Data,w
  1852  034E  00B3               	movwf	MPU6050_Write_Data@senddata+1
  1853                           
  1854                           ;MPU6050.c: 11: result += I2C_Transmit(I2C1_MODULE,0x68,senddata,2);
  1855  034F  3068               	movlw	104
  1856  0350  00AD               	movwf	??_MPU6050_Write_Data
  1857  0351  082D               	movf	??_MPU6050_Write_Data,w
  1858  0352  00A4               	movwf	I2C_Transmit@address
  1859  0353  3032               	movlw	(low (MPU6050_Write_Data@senddata| 0))& (0+255)
  1860  0354  00AE               	movwf	??_MPU6050_Write_Data+1
  1861  0355  082E               	movf	??_MPU6050_Write_Data+1,w
  1862  0356  00A5               	movwf	I2C_Transmit@pData
  1863  0357  3002               	movlw	2
  1864  0358  00AF               	movwf	??_MPU6050_Write_Data+2
  1865  0359  082F               	movf	??_MPU6050_Write_Data+2,w
  1866  035A  00A6               	movwf	I2C_Transmit@size
  1867  035B  3000               	movlw	0
  1868  035C  237E               	fcall	_I2C_Transmit
  1869  035D  0020               	movlb	0	; select bank0
  1870  035E  00B0               	movwf	??_MPU6050_Write_Data+3
  1871  035F  0830               	movf	??_MPU6050_Write_Data+3,w
  1872  0360  07B4               	addwf	MPU6050_Write_Data@result,f
  1873                           
  1874                           ;MPU6050.c: 13: return result;
  1875  0361  0834               	movf	MPU6050_Write_Data@result,w
  1876  0362  0008               	return
  1877  0363                     __end_of_MPU6050_Write_Data:	
  1878                           
  1879                           	psect	text7
  1880  031F                     __ptext7:	
  1881 ;; *************** function _MPU6050_Read_Data *****************
  1882 ;; Defined at:
  1883 ;;		line 16 in file "MPU6050.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  reg             1    wreg     unsigned char 
  1886 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  1887 ;;		 -> MPU6050_Init@addr(1), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  reg             1   16[BANK0 ] unsigned char 
  1890 ;;  result          1   17[BANK0 ] char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      char 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON   BANK0   BANK1
  1900 ;;      Params:         0       1       0
  1901 ;;      Locals:         0       2       0
  1902 ;;      Temps:          0       3       0
  1903 ;;      Totals:         0       6       0
  1904 ;;Total ram usage:        6 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    5
  1907 ;; This function calls:
  1908 ;;		_I2C_Receive
  1909 ;;		_I2C_Transmit
  1910 ;; This function is called by:
  1911 ;;		_MPU6050_Init
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           
  1916                           ;psect for function _MPU6050_Read_Data
  1917  031F                     _MPU6050_Read_Data:	
  1918                           
  1919                           ;incstack = 0
  1920                           ; Regs used in _MPU6050_Read_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1921                           ;MPU6050_Read_Data@reg stored from wreg
  1922  031F  0020               	movlb	0	; select bank0
  1923  0320  00B0               	movwf	MPU6050_Read_Data@reg
  1924                           
  1925                           ;MPU6050.c: 18: int8_t result = 0;
  1926  0321  01B1               	clrf	MPU6050_Read_Data@result
  1927                           
  1928                           ;MPU6050.c: 20: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  1929  0322  3068               	movlw	104
  1930  0323  00AD               	movwf	??_MPU6050_Read_Data
  1931  0324  082D               	movf	??_MPU6050_Read_Data,w
  1932  0325  00A4               	movwf	I2C_Transmit@address
  1933  0326  3030               	movlw	(low (MPU6050_Read_Data@reg| 0))& (0+255)
  1934  0327  00AE               	movwf	??_MPU6050_Read_Data+1
  1935  0328  082E               	movf	??_MPU6050_Read_Data+1,w
  1936  0329  00A5               	movwf	I2C_Transmit@pData
  1937  032A  01A6               	clrf	I2C_Transmit@size
  1938  032B  0AA6               	incf	I2C_Transmit@size,f
  1939  032C  3000               	movlw	0
  1940  032D  237E               	fcall	_I2C_Transmit
  1941  032E  0020               	movlb	0	; select bank0
  1942  032F  00AF               	movwf	??_MPU6050_Read_Data+2
  1943  0330  082F               	movf	??_MPU6050_Read_Data+2,w
  1944  0331  07B1               	addwf	MPU6050_Read_Data@result,f
  1945                           
  1946                           ;MPU6050.c: 22: result += I2C_Receive(I2C1_MODULE,0x68,pData,1);
  1947  0332  3068               	movlw	104
  1948  0333  00AD               	movwf	??_MPU6050_Read_Data
  1949  0334  082D               	movf	??_MPU6050_Read_Data,w
  1950  0335  00A4               	movwf	I2C_Receive@address
  1951  0336  082C               	movf	MPU6050_Read_Data@pData,w
  1952  0337  00AE               	movwf	??_MPU6050_Read_Data+1
  1953  0338  082E               	movf	??_MPU6050_Read_Data+1,w
  1954  0339  00A5               	movwf	I2C_Receive@pData
  1955  033A  01A6               	clrf	I2C_Receive@size
  1956  033B  0AA6               	incf	I2C_Receive@size,f
  1957  033C  3000               	movlw	0
  1958  033D  2399               	fcall	_I2C_Receive
  1959  033E  0020               	movlb	0	; select bank0
  1960  033F  00AF               	movwf	??_MPU6050_Read_Data+2
  1961  0340  082F               	movf	??_MPU6050_Read_Data+2,w
  1962  0341  07B1               	addwf	MPU6050_Read_Data@result,f
  1963                           
  1964                           ;MPU6050.c: 24: return result;
  1965  0342  0831               	movf	MPU6050_Read_Data@result,w
  1966  0343  0008               	return
  1967  0344                     __end_of_MPU6050_Read_Data:	
  1968                           
  1969                           	psect	text8
  1970  037E                     __ptext8:	
  1971 ;; *************** function _I2C_Transmit *****************
  1972 ;; Defined at:
  1973 ;;		line 5 in file "PIC_I2C.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  I2Cx            1    wreg     enum E2417
  1976 ;;  address         1    4[BANK0 ] unsigned char 
  1977 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  1978 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  1979 ;;  size            1    6[BANK0 ] unsigned char 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  I2Cx            1   10[BANK0 ] enum E2417
  1982 ;;  result          1   11[BANK0 ] char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      char 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1
  1992 ;;      Params:         0       3       0
  1993 ;;      Locals:         0       2       0
  1994 ;;      Temps:          0       3       0
  1995 ;;      Totals:         0       8       0
  1996 ;;Total ram usage:        8 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    4
  1999 ;; This function calls:
  2000 ;;		_I2C1_Transmit
  2001 ;; This function is called by:
  2002 ;;		_MPU6050_Write_Data
  2003 ;;		_MPU6050_Read_Data
  2004 ;;		_MPU6050_Read_MultiData
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _I2C_Transmit
  2010  037E                     _I2C_Transmit:	
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2014                           ;I2C_Transmit@I2Cx stored from wreg
  2015  037E  0020               	movlb	0	; select bank0
  2016  037F  00AA               	movwf	I2C_Transmit@I2Cx
  2017                           
  2018                           ;PIC_I2C.c: 7: int8_t result = -1;
  2019  0380  01AB               	clrf	I2C_Transmit@result
  2020  0381  03AB               	decf	I2C_Transmit@result,f
  2021                           
  2022                           ;PIC_I2C.c: 9: switch(I2Cx)
  2023  0382  2B92               	goto	l1706
  2024  0383                     l1702:	
  2025                           ;PIC_I2C.c: 10: {
  2026                           ;PIC_I2C.c: 11: case I2C1_MODULE:
  2027                           
  2028                           
  2029                           ;PIC_I2C.c: 12: result = I2C1_Transmit(address,pData,size);
  2030  0383  0825               	movf	I2C_Transmit@pData,w
  2031  0384  00A7               	movwf	??_I2C_Transmit
  2032  0385  0827               	movf	??_I2C_Transmit,w
  2033  0386  00F4               	movwf	I2C1_Transmit@pData
  2034  0387  0826               	movf	I2C_Transmit@size,w
  2035  0388  00A8               	movwf	??_I2C_Transmit+1
  2036  0389  0828               	movf	??_I2C_Transmit+1,w
  2037  038A  00F5               	movwf	I2C1_Transmit@size
  2038  038B  0824               	movf	I2C_Transmit@address,w
  2039  038C  2167               	fcall	_I2C1_Transmit
  2040  038D  0020               	movlb	0	; select bank0
  2041  038E  00A9               	movwf	??_I2C_Transmit+2
  2042  038F  0829               	movf	??_I2C_Transmit+2,w
  2043  0390  00AB               	movwf	I2C_Transmit@result
  2044                           
  2045                           ;PIC_I2C.c: 14: }
  2046                           
  2047                           ;PIC_I2C.c: 13: break;
  2048  0391  2B97               	goto	l1708
  2049  0392                     l1706:	
  2050  0392  082A               	movf	I2C_Transmit@I2Cx,w
  2051                           
  2052                           ; Switch size 1, requested type "space"
  2053                           ; Number of cases is 1, Range of values is 0 to 0
  2054                           ; switch strategies available:
  2055                           ; Name         Instructions Cycles
  2056                           ; simple_byte            4     3 (average)
  2057                           ; direct_byte            8     6 (fixed)
  2058                           ; jumptable            260     6 (fixed)
  2059                           ;	Chosen strategy is simple_byte
  2060  0393  3A00               	xorlw	0	; case 0
  2061  0394  1903               	skipnz
  2062  0395  2B83               	goto	l1702
  2063  0396  2B97               	goto	l1708
  2064  0397                     l1708:	
  2065                           
  2066                           ;PIC_I2C.c: 15: return result;
  2067  0397  082B               	movf	I2C_Transmit@result,w
  2068  0398  0008               	return
  2069  0399                     __end_of_I2C_Transmit:	
  2070                           
  2071                           	psect	text9
  2072  0167                     __ptext9:	
  2073 ;; *************** function _I2C1_Transmit *****************
  2074 ;; Defined at:
  2075 ;;		line 53 in file "PIC_I2C1.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  address         1    wreg     unsigned char 
  2078 ;;  pData           1    4[COMMON] PTR unsigned char 
  2079 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  2080 ;;  size            1    5[COMMON] unsigned char 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  address         1    0[BANK0 ] unsigned char 
  2083 ;;  i               1    2[BANK0 ] unsigned char 
  2084 ;;  i               1    1[BANK0 ] unsigned char 
  2085 ;;  result          1    3[BANK0 ] char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      char 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1
  2095 ;;      Params:         2       0       0
  2096 ;;      Locals:         0       4       0
  2097 ;;      Temps:          2       0       0
  2098 ;;      Totals:         4       4       0
  2099 ;;Total ram usage:        8 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    3
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_I2C_Transmit
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _I2C1_Transmit
  2111  0167                     _I2C1_Transmit:	
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2115                           ;I2C1_Transmit@address stored from wreg
  2116  0167  0020               	movlb	0	; select bank0
  2117  0168  00A0               	movwf	I2C1_Transmit@address
  2118                           
  2119                           ;PIC_I2C1.c: 55: int8_t result;
  2120                           ;PIC_I2C1.c: 57: switch(I2C1_Config.Mode)
  2121  0169  29E5               	goto	l1644
  2122  016A                     l1600:	
  2123                           ;PIC_I2C1.c: 60: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2124                           
  2125                           ;PIC_I2C1.c: 58: {
  2126                           ;PIC_I2C1.c: 59: case I2C_MODE_MASTER:
  2127                           
  2128  016A  3005               	movlw	5
  2129  016B  0024               	movlb	4	; select bank4
  2130  016C  0514               	andwf	20,w	;volatile
  2131  016D  00F6               	movwf	??_I2C1_Transmit
  2132  016E  0816               	movf	22,w	;volatile
  2133  016F  391F               	andlw	31
  2134  0170  0476               	iorwf	??_I2C1_Transmit,w
  2135  0171  1D03               	btfss	3,2
  2136  0172  296A               	goto	l1600
  2137                           
  2138                           ;PIC_I2C1.c: 61: SSPCON2bits.SEN = 1;
  2139  0173  1416               	bsf	22,0	;volatile
  2140  0174                     l1602:	
  2141                           ;PIC_I2C1.c: 63: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2142                           
  2143  0174  3005               	movlw	5
  2144  0175  0514               	andwf	20,w	;volatile
  2145  0176  00F6               	movwf	??_I2C1_Transmit
  2146  0177  0816               	movf	22,w	;volatile
  2147  0178  391F               	andlw	31
  2148  0179  0476               	iorwf	??_I2C1_Transmit,w
  2149  017A  1D03               	btfss	3,2
  2150  017B  2974               	goto	l1602
  2151                           
  2152                           ;PIC_I2C1.c: 64: SSPBUF = address << 1;
  2153  017C  0020               	movlb	0	; select bank0
  2154  017D  3520               	lslf	I2C1_Transmit@address,w
  2155  017E  0024               	movlb	4	; select bank4
  2156  017F  0091               	movwf	17	;volatile
  2157  0180                     l229:	
  2158                           ;PIC_I2C1.c: 65: while(SSPSTATbits.R_nW);
  2159                           
  2160  0180  1914               	btfsc	20,2	;volatile
  2161  0181  2980               	goto	l229
  2162                           
  2163                           ;PIC_I2C1.c: 67: result = SSPCON2bits.ACKSTAT;
  2164  0182  3000               	movlw	0
  2165  0183  1B16               	btfsc	22,6	;volatile
  2166  0184  3001               	movlw	1
  2167  0185  0020               	movlb	0	; select bank0
  2168  0186  00A3               	movwf	I2C1_Transmit@result
  2169                           
  2170                           ;PIC_I2C1.c: 68: if (!result)
  2171  0187  0823               	movf	I2C1_Transmit@result,w
  2172  0188  1D03               	btfss	3,2
  2173  0189  29B5               	goto	l1626
  2174                           
  2175                           ;PIC_I2C1.c: 69: {
  2176                           ;PIC_I2C1.c: 70: for(uint8_t i=0;i<size;i++)
  2177  018A  01A1               	clrf	I2C1_Transmit@i
  2178  018B  2990               	goto	l1624
  2179  018C                     l1622:	
  2180                           ;PIC_I2C1.c: 80: break;
  2181                           
  2182  018C  3001               	movlw	1
  2183  018D  00F6               	movwf	??_I2C1_Transmit
  2184  018E  0876               	movf	??_I2C1_Transmit,w
  2185  018F  07A1               	addwf	I2C1_Transmit@i,f
  2186  0190                     l1624:	
  2187  0190  0875               	movf	I2C1_Transmit@size,w
  2188  0191  0221               	subwf	I2C1_Transmit@i,w
  2189  0192  1803               	btfsc	3,0
  2190  0193  29B5               	goto	l1626
  2191  0194                     l1612:	
  2192                           ;PIC_I2C1.c: 71: {
  2193                           ;PIC_I2C1.c: 72: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2194                           
  2195  0194  3005               	movlw	5
  2196  0195  0024               	movlb	4	; select bank4
  2197  0196  0514               	andwf	20,w	;volatile
  2198  0197  00F6               	movwf	??_I2C1_Transmit
  2199  0198  0816               	movf	22,w	;volatile
  2200  0199  391F               	andlw	31
  2201  019A  0476               	iorwf	??_I2C1_Transmit,w
  2202  019B  1D03               	btfss	3,2
  2203  019C  2994               	goto	l1612
  2204                           
  2205                           ;PIC_I2C1.c: 73: SSPBUF = *(pData+i);
  2206  019D  0020               	movlb	0	; select bank0
  2207  019E  0821               	movf	I2C1_Transmit@i,w
  2208  019F  0774               	addwf	I2C1_Transmit@pData,w
  2209  01A0  00F6               	movwf	??_I2C1_Transmit
  2210  01A1  0876               	movf	??_I2C1_Transmit,w
  2211  01A2  0086               	movwf	6
  2212  01A3  0187               	clrf	7
  2213  01A4  0801               	movf	1,w
  2214  01A5  0024               	movlb	4	; select bank4
  2215  01A6  0091               	movwf	17	;volatile
  2216  01A7                     l238:	
  2217                           ;PIC_I2C1.c: 74: while(SSPSTATbits.R_nW);
  2218                           
  2219  01A7  1914               	btfsc	20,2	;volatile
  2220  01A8  29A7               	goto	l238
  2221                           
  2222                           ;PIC_I2C1.c: 76: result = SSPCON2bits.ACKSTAT;
  2223  01A9  3000               	movlw	0
  2224  01AA  1B16               	btfsc	22,6	;volatile
  2225  01AB  3001               	movlw	1
  2226  01AC  0020               	movlb	0	; select bank0
  2227  01AD  00A3               	movwf	I2C1_Transmit@result
  2228                           
  2229                           ;PIC_I2C1.c: 77: if (result)
  2230  01AE  0823               	movf	I2C1_Transmit@result,w
  2231  01AF  1903               	btfsc	3,2
  2232  01B0  298C               	goto	l1622
  2233                           
  2234                           ;PIC_I2C1.c: 78: {
  2235                           ;PIC_I2C1.c: 79: result = 2;
  2236  01B1  3002               	movlw	2
  2237  01B2  00F6               	movwf	??_I2C1_Transmit
  2238  01B3  0876               	movf	??_I2C1_Transmit,w
  2239  01B4  00A3               	movwf	I2C1_Transmit@result
  2240  01B5                     l1626:	
  2241                           ;PIC_I2C1.c: 81: }
  2242                           ;PIC_I2C1.c: 82: }
  2243                           ;PIC_I2C1.c: 83: }
  2244                           ;PIC_I2C1.c: 85: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2245                           
  2246  01B5  3005               	movlw	5
  2247  01B6  0024               	movlb	4	; select bank4
  2248  01B7  0514               	andwf	20,w	;volatile
  2249  01B8  00F6               	movwf	??_I2C1_Transmit
  2250  01B9  0816               	movf	22,w	;volatile
  2251  01BA  391F               	andlw	31
  2252  01BB  0476               	iorwf	??_I2C1_Transmit,w
  2253  01BC  1D03               	btfss	3,2
  2254  01BD  29B5               	goto	l1626
  2255                           
  2256                           ;PIC_I2C1.c: 86: SSPCON2bits.PEN = 1;
  2257  01BE  1516               	bsf	22,2	;volatile
  2258                           
  2259                           ;PIC_I2C1.c: 87: break;
  2260  01BF  29ED               	goto	l1646
  2261  01C0                     l247:	
  2262                           ;PIC_I2C1.c: 89: case I2C_MODE_SLAVE:
  2263                           
  2264                           
  2265                           ;PIC_I2C1.c: 90: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2266  01C0  0024               	movlb	4	; select bank4
  2267  01C1  1D94               	btfss	20,3	;volatile
  2268  01C2  1E14               	btfss	20,4	;volatile
  2269  01C3  29E2               	goto	l1640
  2270                           
  2271                           ;PIC_I2C1.c: 91: {
  2272                           ;PIC_I2C1.c: 92: for(uint8_t i = 0;i<size;i++)
  2273  01C4  0020               	movlb	0	; select bank0
  2274  01C5  01A2               	clrf	I2C1_Transmit@i_442
  2275  01C6                     l1636:	
  2276  01C6  0875               	movf	I2C1_Transmit@size,w
  2277  01C7  0222               	subwf	I2C1_Transmit@i_442,w
  2278  01C8  1803               	btfsc	3,0
  2279  01C9  29DD               	goto	l1638
  2280                           
  2281                           ;PIC_I2C1.c: 93: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2282  01CA  0822               	movf	I2C1_Transmit@i_442,w
  2283  01CB  0774               	addwf	I2C1_Transmit@pData,w
  2284  01CC  00F6               	movwf	??_I2C1_Transmit
  2285  01CD  0876               	movf	??_I2C1_Transmit,w
  2286  01CE  0086               	movwf	6
  2287  01CF  0187               	clrf	7
  2288  01D0  0801               	movf	1,w
  2289  01D1  00F7               	movwf	??_I2C1_Transmit+1
  2290  01D2  0822               	movf	I2C1_Transmit@i_442,w
  2291  01D3  3E5B               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2292  01D4  0086               	movwf	6
  2293  01D5  0187               	clrf	7
  2294  01D6  0877               	movf	??_I2C1_Transmit+1,w
  2295  01D7  0081               	movwf	1
  2296  01D8  3001               	movlw	1
  2297  01D9  00F6               	movwf	??_I2C1_Transmit
  2298  01DA  0876               	movf	??_I2C1_Transmit,w
  2299  01DB  07A2               	addwf	I2C1_Transmit@i_442,f
  2300  01DC  29C6               	goto	l1636
  2301  01DD                     l1638:	
  2302                           
  2303                           ;PIC_I2C1.c: 94: result = size;
  2304  01DD  0875               	movf	I2C1_Transmit@size,w
  2305  01DE  00F6               	movwf	??_I2C1_Transmit
  2306  01DF  0876               	movf	??_I2C1_Transmit,w
  2307  01E0  00A3               	movwf	I2C1_Transmit@result
  2308                           
  2309                           ;PIC_I2C1.c: 95: }
  2310  01E1  29ED               	goto	l1646
  2311  01E2                     l1640:	
  2312                           
  2313                           ;PIC_I2C1.c: 96: else
  2314                           ;PIC_I2C1.c: 97: result = 0;
  2315  01E2  0020               	movlb	0	; select bank0
  2316  01E3  01A3               	clrf	I2C1_Transmit@result
  2317                           
  2318                           ;PIC_I2C1.c: 99: }
  2319                           
  2320                           ;PIC_I2C1.c: 98: break;
  2321  01E4  29ED               	goto	l1646
  2322  01E5                     l1644:	
  2323  01E5  086D               	movf	_I2C1_Config+18,w
  2324                           
  2325                           ; Switch size 1, requested type "space"
  2326                           ; Number of cases is 2, Range of values is 0 to 1
  2327                           ; switch strategies available:
  2328                           ; Name         Instructions Cycles
  2329                           ; simple_byte            7     4 (average)
  2330                           ; direct_byte           10     6 (fixed)
  2331                           ; jumptable            260     6 (fixed)
  2332                           ;	Chosen strategy is simple_byte
  2333  01E6  3A00               	xorlw	0	; case 0
  2334  01E7  1903               	skipnz
  2335  01E8  296A               	goto	l1600
  2336  01E9  3A01               	xorlw	1	; case 1
  2337  01EA  1903               	skipnz
  2338  01EB  29C0               	goto	l247
  2339  01EC  29ED               	goto	l1646
  2340  01ED                     l1646:	
  2341                           
  2342                           ;PIC_I2C1.c: 101: return result;
  2343  01ED  0020               	movlb	0	; select bank0
  2344  01EE  0823               	movf	I2C1_Transmit@result,w
  2345  01EF  0008               	return
  2346  01F0                     __end_of_I2C1_Transmit:	
  2347                           
  2348                           	psect	text10
  2349  0399                     __ptext10:	
  2350 ;; *************** function _I2C_Receive *****************
  2351 ;; Defined at:
  2352 ;;		line 18 in file "PIC_I2C.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;  I2Cx            1    wreg     enum E2417
  2355 ;;  address         1    4[BANK0 ] unsigned char 
  2356 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  2357 ;;		 -> MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2358 ;;  size            1    6[BANK0 ] unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  I2Cx            1   10[BANK0 ] enum E2417
  2361 ;;  result          1   11[BANK0 ] char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      char 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1
  2371 ;;      Params:         0       3       0
  2372 ;;      Locals:         0       2       0
  2373 ;;      Temps:          0       3       0
  2374 ;;      Totals:         0       8       0
  2375 ;;Total ram usage:        8 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    4
  2378 ;; This function calls:
  2379 ;;		_I2C1_Receive
  2380 ;; This function is called by:
  2381 ;;		_MPU6050_Read_Data
  2382 ;;		_MPU6050_Read_MultiData
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _I2C_Receive
  2388  0399                     _I2C_Receive:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2392                           ;I2C_Receive@I2Cx stored from wreg
  2393  0399  0020               	movlb	0	; select bank0
  2394  039A  00AA               	movwf	I2C_Receive@I2Cx
  2395                           
  2396                           ;PIC_I2C.c: 20: int8_t result = -1;
  2397  039B  01AB               	clrf	I2C_Receive@result
  2398  039C  03AB               	decf	I2C_Receive@result,f
  2399                           
  2400                           ;PIC_I2C.c: 22: switch(I2Cx)
  2401  039D  2BAD               	goto	l1718
  2402  039E                     l1714:	
  2403                           ;PIC_I2C.c: 23: {
  2404                           ;PIC_I2C.c: 24: case I2C1_MODULE:
  2405                           
  2406                           
  2407                           ;PIC_I2C.c: 25: result = I2C1_Receive(address,pData,size);
  2408  039E  0825               	movf	I2C_Receive@pData,w
  2409  039F  00A7               	movwf	??_I2C_Receive
  2410  03A0  0827               	movf	??_I2C_Receive,w
  2411  03A1  00F4               	movwf	I2C1_Receive@pData
  2412  03A2  0826               	movf	I2C_Receive@size,w
  2413  03A3  00A8               	movwf	??_I2C_Receive+1
  2414  03A4  0828               	movf	??_I2C_Receive+1,w
  2415  03A5  00F5               	movwf	I2C1_Receive@size
  2416  03A6  0824               	movf	I2C_Receive@address,w
  2417  03A7  20CA               	fcall	_I2C1_Receive
  2418  03A8  0020               	movlb	0	; select bank0
  2419  03A9  00A9               	movwf	??_I2C_Receive+2
  2420  03AA  0829               	movf	??_I2C_Receive+2,w
  2421  03AB  00AB               	movwf	I2C_Receive@result
  2422                           
  2423                           ;PIC_I2C.c: 27: }
  2424                           
  2425                           ;PIC_I2C.c: 26: break;
  2426  03AC  2BB2               	goto	l1720
  2427  03AD                     l1718:	
  2428  03AD  082A               	movf	I2C_Receive@I2Cx,w
  2429                           
  2430                           ; Switch size 1, requested type "space"
  2431                           ; Number of cases is 1, Range of values is 0 to 0
  2432                           ; switch strategies available:
  2433                           ; Name         Instructions Cycles
  2434                           ; simple_byte            4     3 (average)
  2435                           ; direct_byte            8     6 (fixed)
  2436                           ; jumptable            260     6 (fixed)
  2437                           ;	Chosen strategy is simple_byte
  2438  03AE  3A00               	xorlw	0	; case 0
  2439  03AF  1903               	skipnz
  2440  03B0  2B9E               	goto	l1714
  2441  03B1  2BB2               	goto	l1720
  2442  03B2                     l1720:	
  2443                           
  2444                           ;PIC_I2C.c: 28: return result;
  2445  03B2  082B               	movf	I2C_Receive@result,w
  2446  03B3  0008               	return
  2447  03B4                     __end_of_I2C_Receive:	
  2448                           
  2449                           	psect	text11
  2450  00CA                     __ptext11:	
  2451 ;; *************** function _I2C1_Receive *****************
  2452 ;; Defined at:
  2453 ;;		line 104 in file "PIC_I2C1.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  address         1    wreg     unsigned char 
  2456 ;;  pData           1    4[COMMON] PTR unsigned char 
  2457 ;;		 -> MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2458 ;;  size            1    5[COMMON] unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  address         1    0[BANK0 ] unsigned char 
  2461 ;;  i               1    3[BANK0 ] unsigned char 
  2462 ;;  i               1    2[BANK0 ] unsigned char 
  2463 ;;  result          1    1[BANK0 ] char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      char 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1
  2473 ;;      Params:         2       0       0
  2474 ;;      Locals:         0       4       0
  2475 ;;      Temps:          2       0       0
  2476 ;;      Totals:         4       4       0
  2477 ;;Total ram usage:        8 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    3
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_I2C_Receive
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _I2C1_Receive
  2489  00CA                     _I2C1_Receive:	
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in _I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  2493                           ;I2C1_Receive@address stored from wreg
  2494  00CA  0020               	movlb	0	; select bank0
  2495  00CB  00A0               	movwf	I2C1_Receive@address
  2496                           
  2497                           ;PIC_I2C1.c: 106: int8_t result;
  2498                           ;PIC_I2C1.c: 108: switch(I2C1_Config.Mode)
  2499  00CC  295C               	goto	l1694
  2500  00CD                     l1652:	
  2501                           ;PIC_I2C1.c: 111: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2502                           
  2503                           ;PIC_I2C1.c: 109: {
  2504                           ;PIC_I2C1.c: 110: case I2C_MODE_MASTER:
  2505                           
  2506  00CD  3005               	movlw	5
  2507  00CE  0024               	movlb	4	; select bank4
  2508  00CF  0514               	andwf	20,w	;volatile
  2509  00D0  00F6               	movwf	??_I2C1_Receive
  2510  00D1  0816               	movf	22,w	;volatile
  2511  00D2  391F               	andlw	31
  2512  00D3  0476               	iorwf	??_I2C1_Receive,w
  2513  00D4  1D03               	btfss	3,2
  2514  00D5  28CD               	goto	l1652
  2515                           
  2516                           ;PIC_I2C1.c: 112: SSPCON2bits.SEN = 1;
  2517  00D6  1416               	bsf	22,0	;volatile
  2518  00D7                     l1654:	
  2519                           ;PIC_I2C1.c: 114: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2520                           
  2521  00D7  3005               	movlw	5
  2522  00D8  0514               	andwf	20,w	;volatile
  2523  00D9  00F6               	movwf	??_I2C1_Receive
  2524  00DA  0816               	movf	22,w	;volatile
  2525  00DB  391F               	andlw	31
  2526  00DC  0476               	iorwf	??_I2C1_Receive,w
  2527  00DD  1D03               	btfss	3,2
  2528  00DE  28D7               	goto	l1654
  2529                           
  2530                           ;PIC_I2C1.c: 115: SSPBUF = ((address << 1)|0x01);
  2531  00DF  1403               	setc
  2532  00E0  0020               	movlb	0	; select bank0
  2533  00E1  0D20               	rlf	I2C1_Receive@address,w
  2534  00E2  0024               	movlb	4	; select bank4
  2535  00E3  0091               	movwf	17	;volatile
  2536  00E4                     l264:	
  2537                           ;PIC_I2C1.c: 116: while(SSPSTATbits.R_nW);
  2538                           
  2539  00E4  1914               	btfsc	20,2	;volatile
  2540  00E5  28E4               	goto	l264
  2541                           
  2542                           ;PIC_I2C1.c: 118: result = SSPCON2bits.ACKSTAT;
  2543  00E6  3000               	movlw	0
  2544  00E7  1B16               	btfsc	22,6	;volatile
  2545  00E8  3001               	movlw	1
  2546  00E9  0020               	movlb	0	; select bank0
  2547  00EA  00A1               	movwf	I2C1_Receive@result
  2548                           
  2549                           ;PIC_I2C1.c: 119: if (!result)
  2550  00EB  0821               	movf	I2C1_Receive@result,w
  2551  00EC  1D03               	btfss	3,2
  2552  00ED  292C               	goto	l1678
  2553                           
  2554                           ;PIC_I2C1.c: 120: {
  2555                           ;PIC_I2C1.c: 121: for (uint8_t i=0;i<size;i++)
  2556  00EE  01A2               	clrf	I2C1_Receive@i
  2557  00EF                     l1676:	
  2558  00EF  0875               	movf	I2C1_Receive@size,w
  2559  00F0  0222               	subwf	I2C1_Receive@i,w
  2560  00F1  1803               	btfsc	3,0
  2561  00F2  292C               	goto	l1678
  2562  00F3                     l1664:	
  2563                           ;PIC_I2C1.c: 122: {
  2564                           ;PIC_I2C1.c: 123: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2565                           
  2566  00F3  3005               	movlw	5
  2567  00F4  0024               	movlb	4	; select bank4
  2568  00F5  0514               	andwf	20,w	;volatile
  2569  00F6  00F6               	movwf	??_I2C1_Receive
  2570  00F7  0816               	movf	22,w	;volatile
  2571  00F8  391F               	andlw	31
  2572  00F9  0476               	iorwf	??_I2C1_Receive,w
  2573  00FA  1D03               	btfss	3,2
  2574  00FB  28F3               	goto	l1664
  2575                           
  2576                           ;PIC_I2C1.c: 124: SSPCON2bits.RCEN = 1;
  2577  00FC  1596               	bsf	22,3	;volatile
  2578  00FD                     l273:	
  2579                           ;PIC_I2C1.c: 125: while(SSPCON2bits.RCEN);
  2580                           
  2581  00FD  1996               	btfsc	22,3	;volatile
  2582  00FE  28FD               	goto	l273
  2583                           
  2584                           ;PIC_I2C1.c: 126: *(pData+i) = SSPBUF;
  2585  00FF  0811               	movf	17,w	;volatile
  2586  0100  00F6               	movwf	??_I2C1_Receive
  2587  0101  0020               	movlb	0	; select bank0
  2588  0102  0822               	movf	I2C1_Receive@i,w
  2589  0103  0774               	addwf	I2C1_Receive@pData,w
  2590  0104  00F7               	movwf	??_I2C1_Receive+1
  2591  0105  0877               	movf	??_I2C1_Receive+1,w
  2592  0106  0086               	movwf	6
  2593  0107  0187               	clrf	7
  2594  0108  0876               	movf	??_I2C1_Receive,w
  2595  0109  0081               	movwf	1
  2596  010A                     l1668:	
  2597                           ;PIC_I2C1.c: 127: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2598                           
  2599  010A  3005               	movlw	5
  2600  010B  0024               	movlb	4	; select bank4
  2601  010C  0514               	andwf	20,w	;volatile
  2602  010D  00F6               	movwf	??_I2C1_Receive
  2603  010E  0816               	movf	22,w	;volatile
  2604  010F  391F               	andlw	31
  2605  0110  0476               	iorwf	??_I2C1_Receive,w
  2606  0111  1D03               	btfss	3,2
  2607  0112  290A               	goto	l1668
  2608                           
  2609                           ;PIC_I2C1.c: 128: if (i == size-1)
  2610  0113  0875               	movf	I2C1_Receive@size,w
  2611  0114  3EFF               	addlw	255
  2612  0115  00F6               	movwf	??_I2C1_Receive
  2613  0116  30FF               	movlw	255
  2614  0117  1803               	skipnc
  2615  0118  3000               	movlw	0
  2616  0119  00F7               	movwf	??_I2C1_Receive+1
  2617  011A  0020               	movlb	0	; select bank0
  2618  011B  0822               	movf	I2C1_Receive@i,w
  2619  011C  0676               	xorwf	??_I2C1_Receive,w
  2620  011D  0477               	iorwf	??_I2C1_Receive+1,w
  2621  011E  1D03               	skipz
  2622  011F  2923               	goto	l279
  2623                           
  2624                           ;PIC_I2C1.c: 129: SSPCON2bits.ACKDT = 1;
  2625  0120  0024               	movlb	4	; select bank4
  2626  0121  1696               	bsf	22,5	;volatile
  2627  0122  2925               	goto	l280
  2628  0123                     l279:	
  2629                           
  2630                           ;PIC_I2C1.c: 130: else
  2631                           ;PIC_I2C1.c: 131: SSPCON2bits.ACKDT = 0;
  2632  0123  0024               	movlb	4	; select bank4
  2633  0124  1296               	bcf	22,5	;volatile
  2634  0125                     l280:	
  2635                           
  2636                           ;PIC_I2C1.c: 132: SSPCON2bits.ACKEN = 1;
  2637  0125  1616               	bsf	22,4	;volatile
  2638  0126  3001               	movlw	1
  2639  0127  00F6               	movwf	??_I2C1_Receive
  2640  0128  0876               	movf	??_I2C1_Receive,w
  2641  0129  0020               	movlb	0	; select bank0
  2642  012A  07A2               	addwf	I2C1_Receive@i,f
  2643  012B  28EF               	goto	l1676
  2644  012C                     l1678:	
  2645                           ;PIC_I2C1.c: 133: }
  2646                           ;PIC_I2C1.c: 134: }
  2647                           ;PIC_I2C1.c: 136: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2648                           
  2649  012C  3005               	movlw	5
  2650  012D  0024               	movlb	4	; select bank4
  2651  012E  0514               	andwf	20,w	;volatile
  2652  012F  00F6               	movwf	??_I2C1_Receive
  2653  0130  0816               	movf	22,w	;volatile
  2654  0131  391F               	andlw	31
  2655  0132  0476               	iorwf	??_I2C1_Receive,w
  2656  0133  1D03               	btfss	3,2
  2657  0134  292C               	goto	l1678
  2658                           
  2659                           ;PIC_I2C1.c: 137: SSPCON2bits.PEN = 1;
  2660  0135  1516               	bsf	22,2	;volatile
  2661                           
  2662                           ;PIC_I2C1.c: 138: break;
  2663  0136  2964               	goto	l1696
  2664  0137                     l286:	
  2665                           ;PIC_I2C1.c: 140: case I2C_MODE_SLAVE:
  2666                           
  2667                           
  2668                           ;PIC_I2C1.c: 141: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2669  0137  0024               	movlb	4	; select bank4
  2670  0138  1D94               	btfss	20,3	;volatile
  2671  0139  1E14               	btfss	20,4	;volatile
  2672  013A  2964               	goto	l1696
  2673                           
  2674                           ;PIC_I2C1.c: 142: {
  2675                           ;PIC_I2C1.c: 143: for(uint8_t i = 0;i<size;i++)
  2676  013B  0020               	movlb	0	; select bank0
  2677  013C  01A3               	clrf	I2C1_Receive@i_449
  2678  013D                     l1688:	
  2679  013D  0875               	movf	I2C1_Receive@size,w
  2680  013E  0223               	subwf	I2C1_Receive@i_449,w
  2681  013F  1803               	btfsc	3,0
  2682  0140  2954               	goto	l1690
  2683                           
  2684                           ;PIC_I2C1.c: 144: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  2685  0141  0823               	movf	I2C1_Receive@i_449,w
  2686  0142  3E63               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  2687  0143  0086               	movwf	6
  2688  0144  0187               	clrf	7
  2689  0145  0801               	movf	1,w
  2690  0146  00F6               	movwf	??_I2C1_Receive
  2691  0147  0823               	movf	I2C1_Receive@i_449,w
  2692  0148  0774               	addwf	I2C1_Receive@pData,w
  2693  0149  00F7               	movwf	??_I2C1_Receive+1
  2694  014A  0877               	movf	??_I2C1_Receive+1,w
  2695  014B  0086               	movwf	6
  2696  014C  0187               	clrf	7
  2697  014D  0876               	movf	??_I2C1_Receive,w
  2698  014E  0081               	movwf	1
  2699  014F  3001               	movlw	1
  2700  0150  00F6               	movwf	??_I2C1_Receive
  2701  0151  0876               	movf	??_I2C1_Receive,w
  2702  0152  07A3               	addwf	I2C1_Receive@i_449,f
  2703  0153  293D               	goto	l1688
  2704  0154                     l1690:	
  2705                           
  2706                           ;PIC_I2C1.c: 145: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  2707  0154  3063               	movlw	(low (_I2C1_Config+8))& (0+255)
  2708  0155  3AFF               	xorlw	255
  2709  0156  3E01               	addlw	1
  2710  0157  076C               	addwf	_I2C1_Config+17,w
  2711  0158  00F6               	movwf	??_I2C1_Receive
  2712  0159  0876               	movf	??_I2C1_Receive,w
  2713  015A  00A1               	movwf	I2C1_Receive@result
  2714                           
  2715                           ;PIC_I2C1.c: 148: }
  2716                           
  2717                           ;PIC_I2C1.c: 146: }
  2718                           ;PIC_I2C1.c: 147: break;
  2719  015B  2964               	goto	l1696
  2720  015C                     l1694:	
  2721  015C  086D               	movf	_I2C1_Config+18,w
  2722                           
  2723                           ; Switch size 1, requested type "space"
  2724                           ; Number of cases is 2, Range of values is 0 to 1
  2725                           ; switch strategies available:
  2726                           ; Name         Instructions Cycles
  2727                           ; simple_byte            7     4 (average)
  2728                           ; direct_byte           10     6 (fixed)
  2729                           ; jumptable            260     6 (fixed)
  2730                           ;	Chosen strategy is simple_byte
  2731  015D  3A00               	xorlw	0	; case 0
  2732  015E  1903               	skipnz
  2733  015F  28CD               	goto	l1652
  2734  0160  3A01               	xorlw	1	; case 1
  2735  0161  1903               	skipnz
  2736  0162  2937               	goto	l286
  2737  0163  2964               	goto	l1696
  2738  0164                     l1696:	
  2739                           
  2740                           ;PIC_I2C1.c: 150: return result;
  2741  0164  0020               	movlb	0	; select bank0
  2742  0165  0821               	movf	I2C1_Receive@result,w
  2743  0166  0008               	return
  2744  0167                     __end_of_I2C1_Receive:	
  2745                           
  2746                           	psect	text12
  2747  01F0                     __ptext12:	
  2748 ;; *************** function _I2C1_Init *****************
  2749 ;; Defined at:
  2750 ;;		line 8 in file "PIC_I2C1.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  I2C1_Init_PO    2    0[BANK0 ] PTR FTN()void 
  2753 ;;		 -> I2C_InitPort(1), 
  2754 ;;  address         1    2[BANK0 ] unsigned char 
  2755 ;;  mode            1    3[BANK0 ] enum E2409
  2756 ;;  Speed           1    4[BANK0 ] enum E2413
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1
  2768 ;;      Params:         0       5       0
  2769 ;;      Locals:         0       0       0
  2770 ;;      Temps:          1       0       0
  2771 ;;      Totals:         1       5       0
  2772 ;;Total ram usage:        6 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    4
  2775 ;; This function calls:
  2776 ;;		_I2C_InitPort
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _I2C1_Init
  2784  01F0                     _I2C1_Init:	
  2785                           
  2786                           ;PIC_I2C1.c: 10: I2C1_Init_PORT();
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _I2C1_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2790  01F0  0020               	movlb	0	; select bank0
  2791  01F1  0821               	movf	I2C1_Init@I2C1_Init_PORT+1,w
  2792  01F2  008A               	movwf	10
  2793  01F3  0820               	movf	I2C1_Init@I2C1_Init_PORT,w
  2794  01F4  000A               	callw
  2795  01F5  3181               	pagesel	$
  2796                           
  2797                           ;PIC_I2C1.c: 11: I2C1_Config.Mode = mode;
  2798  01F6  0020               	movlb	0	; select bank0
  2799  01F7  0823               	movf	I2C1_Init@mode,w
  2800  01F8  00F5               	movwf	??_I2C1_Init
  2801  01F9  0875               	movf	??_I2C1_Init,w
  2802  01FA  00ED               	movwf	_I2C1_Config+18
  2803                           
  2804                           ;PIC_I2C1.c: 13: switch(mode)
  2805  01FB  2A33               	goto	l1782
  2806  01FC                     l209:	
  2807                           ;PIC_I2C1.c: 14: {
  2808                           ;PIC_I2C1.c: 15: case I2C_MODE_MASTER:
  2809                           
  2810                           
  2811                           ;PIC_I2C1.c: 16: SSPCON1 |= (0x08<<0);
  2812  01FC  0024               	movlb	4	; select bank4
  2813  01FD  1595               	bsf	21,3	;volatile
  2814                           
  2815                           ;PIC_I2C1.c: 17: if(Speed==I2C_SPEED_STANDARD)
  2816  01FE  0020               	movlb	0	; select bank0
  2817  01FF  0824               	movf	I2C1_Init@Speed,w
  2818  0200  1D03               	btfss	3,2
  2819  0201  2A06               	goto	l1756
  2820                           
  2821                           ;PIC_I2C1.c: 18: {
  2822                           ;PIC_I2C1.c: 19: SSPSTAT |= (1<<7);
  2823  0202  0024               	movlb	4	; select bank4
  2824  0203  1794               	bsf	20,7	;volatile
  2825                           
  2826                           ;PIC_I2C1.c: 20: SSPADD = 0x4F;
  2827  0204  304F               	movlw	79
  2828  0205  2A10               	goto	L1
  2829  0206                     l1756:	
  2830                           ;PIC_I2C1.c: 21: }
  2831                           
  2832                           
  2833                           ;PIC_I2C1.c: 22: else if(Speed==I2C_SPEED_HIGH)
  2834  0206  0020               	movlb	0	; select bank0
  2835  0207  0324               	decf	I2C1_Init@Speed,w
  2836  0208  1D03               	btfss	3,2
  2837  0209  2A11               	goto	l1762
  2838                           
  2839                           ;PIC_I2C1.c: 23: {
  2840                           ;PIC_I2C1.c: 24: SSPSTAT &= ~(1<<7);
  2841  020A  307F               	movlw	127
  2842  020B  00F5               	movwf	??_I2C1_Init
  2843  020C  0875               	movf	??_I2C1_Init,w
  2844  020D  0024               	movlb	4	; select bank4
  2845  020E  0594               	andwf	20,f	;volatile
  2846                           
  2847                           ;PIC_I2C1.c: 25: SSPADD = 0x13;
  2848  020F  3013               	movlw	19
  2849  0210                     L1:	
  2850  0210  0092               	movwf	18	;volatile
  2851  0211                     l1762:	
  2852                           
  2853                           ;PIC_I2C1.c: 26: }
  2854                           ;PIC_I2C1.c: 27: SSPCON1bits.SSPEN = 1;
  2855  0211  0024               	movlb	4	; select bank4
  2856  0212  2A31               	goto	l1778
  2857  0213                     l1764:	
  2858                           ;PIC_I2C1.c: 30: case I2C_MODE_SLAVE:
  2859                           
  2860                           ;PIC_I2C1.c: 28: break;
  2861                           
  2862                           
  2863                           ;PIC_I2C1.c: 31: SSPSTAT = 0x00;
  2864  0213  0024               	movlb	4	; select bank4
  2865  0214  0194               	clrf	20	;volatile
  2866                           
  2867                           ;PIC_I2C1.c: 32: if(Speed==I2C_SPEED_STANDARD)
  2868  0215  0020               	movlb	0	; select bank0
  2869  0216  0824               	movf	I2C1_Init@Speed,w
  2870  0217  1D03               	btfss	3,2
  2871  0218  2A1C               	goto	l1770
  2872                           
  2873                           ;PIC_I2C1.c: 33: SSPSTAT |= (1<<7);
  2874  0219  0024               	movlb	4	; select bank4
  2875  021A  1794               	bsf	20,7	;volatile
  2876  021B  2A25               	goto	l216
  2877  021C                     l1770:	
  2878                           
  2879                           ;PIC_I2C1.c: 34: else if(Speed==I2C_SPEED_HIGH)
  2880  021C  0020               	movlb	0	; select bank0
  2881  021D  0324               	decf	I2C1_Init@Speed,w
  2882  021E  1D03               	btfss	3,2
  2883  021F  2A25               	goto	l216
  2884                           
  2885                           ;PIC_I2C1.c: 35: SSPSTAT &= ~(1<<7);
  2886  0220  307F               	movlw	127
  2887  0221  00F5               	movwf	??_I2C1_Init
  2888  0222  0875               	movf	??_I2C1_Init,w
  2889  0223  0024               	movlb	4	; select bank4
  2890  0224  0594               	andwf	20,f	;volatile
  2891  0225                     l216:	
  2892                           
  2893                           ;PIC_I2C1.c: 37: SSPCON1 |= (0x06<<0);
  2894  0225  3006               	movlw	6
  2895  0226  00F5               	movwf	??_I2C1_Init
  2896  0227  0875               	movf	??_I2C1_Init,w
  2897  0228  0024               	movlb	4	; select bank4
  2898  0229  0495               	iorwf	21,f	;volatile
  2899                           
  2900                           ;PIC_I2C1.c: 38: SSPCON2bits.SEN= 1;
  2901  022A  1416               	bsf	22,0	;volatile
  2902                           
  2903                           ;PIC_I2C1.c: 39: SSPADD = address << 1;
  2904  022B  0020               	movlb	0	; select bank0
  2905  022C  3522               	lslf	I2C1_Init@address,w
  2906  022D  0024               	movlb	4	; select bank4
  2907  022E  0092               	movwf	18	;volatile
  2908                           
  2909                           ;PIC_I2C1.c: 40: SSPMSK = 0xFE;
  2910  022F  30FE               	movlw	254
  2911  0230  0093               	movwf	19	;volatile
  2912  0231                     l1778:	
  2913                           
  2914                           ;PIC_I2C1.c: 41: SSPCON1bits.SSPEN = 1;
  2915  0231  1695               	bsf	21,5	;volatile
  2916                           
  2917                           ;PIC_I2C1.c: 43: }
  2918                           
  2919                           ;PIC_I2C1.c: 42: break;
  2920  0232  2A3C               	goto	l213
  2921  0233                     l1782:	
  2922  0233  0020               	movlb	0	; select bank0
  2923  0234  0823               	movf	I2C1_Init@mode,w
  2924                           
  2925                           ; Switch size 1, requested type "space"
  2926                           ; Number of cases is 2, Range of values is 0 to 1
  2927                           ; switch strategies available:
  2928                           ; Name         Instructions Cycles
  2929                           ; simple_byte            7     4 (average)
  2930                           ; direct_byte           10     6 (fixed)
  2931                           ; jumptable            260     6 (fixed)
  2932                           ;	Chosen strategy is simple_byte
  2933  0235  3A00               	xorlw	0	; case 0
  2934  0236  1903               	skipnz
  2935  0237  29FC               	goto	l209
  2936  0238  3A01               	xorlw	1	; case 1
  2937  0239  1903               	skipnz
  2938  023A  2A13               	goto	l1764
  2939  023B  2A3C               	goto	l213
  2940  023C                     l213:	
  2941                           
  2942                           ;PIC_I2C1.c: 44: SSP1IE = 1;
  2943  023C  0021               	movlb	1	; select bank1
  2944  023D  1591               	bsf	17,3	;volatile
  2945                           
  2946                           ;PIC_I2C1.c: 45: BCL1IE = 1;
  2947  023E  1592               	bsf	18,3	;volatile
  2948                           
  2949                           ;PIC_I2C1.c: 46: SSP1IF = 0;
  2950  023F  0020               	movlb	0	; select bank0
  2951  0240  1191               	bcf	17,3	;volatile
  2952                           
  2953                           ;PIC_I2C1.c: 47: BCL1IF = 0;
  2954  0241  1192               	bcf	18,3	;volatile
  2955                           
  2956                           ;PIC_I2C1.c: 49: PEIE = 1;
  2957  0242  170B               	bsf	11,6	;volatile
  2958                           
  2959                           ;PIC_I2C1.c: 50: GIE = 1;
  2960  0243  178B               	bsf	11,7	;volatile
  2961  0244  0008               	return
  2962  0245                     __end_of_I2C1_Init:	
  2963                           
  2964                           	psect	text13
  2965  03D2                     __ptext13:	
  2966 ;; *************** function _I2C_InitPort *****************
  2967 ;; Defined at:
  2968 ;;		line 89 in file "main.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1
  2982 ;;      Params:         0       0       0
  2983 ;;      Locals:         0       0       0
  2984 ;;      Temps:          1       0       0
  2985 ;;      Totals:         1       0       0
  2986 ;;Total ram usage:        1 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    3
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_main
  2993 ;;		_I2C1_Init
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _I2C_InitPort
  2999  03D2                     _I2C_InitPort:	
  3000                           
  3001                           ;main.c: 91: TRISA |= (1<<1);
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _I2C_InitPort: [wreg+status,2+status,0]
  3005  03D2  0021               	movlb	1	; select bank1
  3006  03D3  148C               	bsf	12,1	;volatile
  3007                           
  3008                           ;main.c: 92: TRISA |= (1<<2);
  3009  03D4  150C               	bsf	12,2	;volatile
  3010                           
  3011                           ;main.c: 94: ANSELA &= ~(1<<1);
  3012  03D5  30FD               	movlw	253
  3013  03D6  00F4               	movwf	??_I2C_InitPort
  3014  03D7  0874               	movf	??_I2C_InitPort,w
  3015  03D8  0023               	movlb	3	; select bank3
  3016  03D9  058C               	andwf	12,f	;volatile
  3017                           
  3018                           ;main.c: 95: ANSELA &= ~(1<<2);
  3019  03DA  30FB               	movlw	251
  3020  03DB  00F4               	movwf	??_I2C_InitPort
  3021  03DC  0874               	movf	??_I2C_InitPort,w
  3022  03DD  058C               	andwf	12,f	;volatile
  3023  03DE  0008               	return
  3024  03DF                     __end_of_I2C_InitPort:	
  3025                           
  3026                           	psect	text14
  3027  03DF                     __ptext14:	
  3028 ;; *************** function _Basic_Init *****************
  3029 ;; Defined at:
  3030 ;;		line 66 in file "main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1
  3044 ;;      Params:         0       0       0
  3045 ;;      Locals:         0       0       0
  3046 ;;      Temps:          0       0       0
  3047 ;;      Totals:         0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    3
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _Basic_Init
  3060  03DF                     _Basic_Init:	
  3061                           
  3062                           ;main.c: 68: OSCCON = 0xF0;
  3063                           
  3064                           ;incstack = 0
  3065                           ; Regs used in _Basic_Init: [wreg+status,2]
  3066  03DF  30F0               	movlw	240
  3067  03E0  0021               	movlb	1	; select bank1
  3068  03E1  0099               	movwf	25	;volatile
  3069                           
  3070                           ;main.c: 72: TRISA = 0x00;
  3071  03E2  018C               	clrf	12	;volatile
  3072                           
  3073                           ;main.c: 73: ANSELA = 0x00;
  3074  03E3  0023               	movlb	3	; select bank3
  3075  03E4  018C               	clrf	12	;volatile
  3076                           
  3077                           ;main.c: 74: WPUA = 0x00;
  3078  03E5  0024               	movlb	4	; select bank4
  3079  03E6  018C               	clrf	12	;volatile
  3080                           
  3081                           ;main.c: 77: APFCON = 0x00;
  3082  03E7  0022               	movlb	2	; select bank2
  3083  03E8  019D               	clrf	29	;volatile
  3084                           
  3085                           ;main.c: 79: PORTA = 0x00;
  3086  03E9  0020               	movlb	0	; select bank0
  3087  03EA  018C               	clrf	12	;volatile
  3088  03EB  0008               	return
  3089  03EC                     __end_of_Basic_Init:	
  3090                           
  3091                           	psect	intentry
  3092  0004                     __pintentry:	
  3093 ;; *************** function _Handle *****************
  3094 ;; Defined at:
  3095 ;;		line 60 in file "main.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1
  3109 ;;      Params:         0       0       0
  3110 ;;      Locals:         0       0       0
  3111 ;;      Temps:          1       0       0
  3112 ;;      Totals:         1       0       0
  3113 ;;Total ram usage:        1 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    2
  3116 ;; This function calls:
  3117 ;;		_I2C_Interrupt
  3118 ;;		_UART_Interrupt
  3119 ;; This function is called by:
  3120 ;;		Interrupt level 1
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124  0004                     _Handle:	
  3125                           
  3126                           ;incstack = 0
  3127  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3128                           
  3129                           ; Regs used in _Handle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3130  0005  3180               	pagesel	$
  3131  0006  0020               	movlb	0	; select bank0
  3132  0007  087F               	movf	127,w
  3133  0008  00F3               	movwf	??_Handle
  3134                           
  3135                           ;main.c: 62: UART_Interrupt();
  3136  0009  22F8               	fcall	_UART_Interrupt
  3137                           
  3138                           ;main.c: 63: I2C_Interrupt();
  3139  000A  23FA               	fcall	_I2C_Interrupt
  3140  000B  0873               	movf	??_Handle,w
  3141  000C  0020               	movlb	0	; select bank0
  3142  000D  00FF               	movwf	127
  3143  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3144  000F  0009               	retfie
  3145  0010                     __end_of_Handle:	
  3146                           
  3147                           	psect	text16
  3148  02F8                     __ptext16:	
  3149 ;; *************** function _UART_Interrupt *****************
  3150 ;; Defined at:
  3151 ;;		line 107 in file "PIC_UART.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  x               1    2[COMMON] unsigned char 
  3156 ;;  dt              1    1[COMMON] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1
  3166 ;;      Params:         0       0       0
  3167 ;;      Locals:         2       0       0
  3168 ;;      Temps:          1       0       0
  3169 ;;      Totals:         3       0       0
  3170 ;;Total ram usage:        3 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_Handle
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _UART_Interrupt
  3181  02F8                     _UART_Interrupt:	
  3182                           
  3183                           ;PIC_UART.c: 109: uint8_t x;
  3184                           ;PIC_UART.c: 110: uint8_t dt;
  3185                           ;PIC_UART.c: 112: if (RCIF == 1)
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3189  02F8  0020               	movlb	0	; select bank0
  3190  02F9  1E91               	btfss	17,5	;volatile
  3191  02FA  0008               	return
  3192                           
  3193                           ;PIC_UART.c: 113: {
  3194                           ;PIC_UART.c: 114: dt = RCREG;
  3195  02FB  0023               	movlb	3	; select bank3
  3196  02FC  0819               	movf	25,w	;volatile
  3197  02FD  00F0               	movwf	??_UART_Interrupt
  3198  02FE  0870               	movf	??_UART_Interrupt,w
  3199  02FF  00F1               	movwf	UART_Interrupt@dt
  3200                           
  3201                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 8;
  3202  0300  0878               	movf	_UART_Buffer_outptr,w
  3203  0301  3E01               	addlw	1
  3204  0302  3907               	andlw	7
  3205  0303  00F0               	movwf	??_UART_Interrupt
  3206  0304  0870               	movf	??_UART_Interrupt,w
  3207  0305  00F2               	movwf	UART_Interrupt@x
  3208                           
  3209                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  3210  0306  0872               	movf	UART_Interrupt@x,w
  3211  0307  0679               	xorwf	_UART_Buffer_inptr,w
  3212  0308  1903               	skipnz
  3213  0309  2B16               	goto	i1l1490
  3214                           
  3215                           ;PIC_UART.c: 117: {
  3216                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  3217  030A  0871               	movf	UART_Interrupt@dt,w
  3218  030B  00F0               	movwf	??_UART_Interrupt
  3219  030C  0878               	movf	_UART_Buffer_outptr,w
  3220  030D  3E53               	addlw	(low (_UART_Buffer| 0))& (0+255)
  3221  030E  0086               	movwf	6
  3222  030F  0187               	clrf	7
  3223  0310  0870               	movf	??_UART_Interrupt,w
  3224  0311  0081               	movwf	1
  3225                           
  3226                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  3227  0312  0872               	movf	UART_Interrupt@x,w
  3228  0313  00F0               	movwf	??_UART_Interrupt
  3229  0314  0870               	movf	??_UART_Interrupt,w
  3230  0315  00F8               	movwf	_UART_Buffer_outptr
  3231  0316                     i1l1490:	
  3232                           
  3233                           ;PIC_UART.c: 120: }
  3234                           ;PIC_UART.c: 122: if (OERR == 1)
  3235  0316  1C9D               	btfss	29,1	;volatile
  3236  0317  2B1C               	goto	i1l129
  3237                           
  3238                           ;PIC_UART.c: 123: {
  3239                           ;PIC_UART.c: 124: CREN = 0;
  3240  0318  121D               	bcf	29,4	;volatile
  3241  0319                     i1l130:	
  3242                           ;PIC_UART.c: 125: while (OERR);
  3243                           
  3244  0319  189D               	btfsc	29,1	;volatile
  3245  031A  2B19               	goto	i1l130
  3246                           
  3247                           ;PIC_UART.c: 126: CREN = 1;
  3248  031B  161D               	bsf	29,4	;volatile
  3249  031C                     i1l129:	
  3250                           
  3251                           ;PIC_UART.c: 127: }
  3252                           ;PIC_UART.c: 128: RCIF = 0;
  3253  031C  0020               	movlb	0	; select bank0
  3254  031D  1291               	bcf	17,5	;volatile
  3255  031E  0008               	return
  3256  031F                     __end_of_UART_Interrupt:	
  3257                           
  3258                           	psect	text17
  3259  03FA                     __ptext17:	
  3260 ;; *************** function _I2C_Interrupt *****************
  3261 ;; Defined at:
  3262 ;;		line 31 in file "PIC_I2C.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1
  3276 ;;      Params:         0       0       0
  3277 ;;      Locals:         0       0       0
  3278 ;;      Temps:          0       0       0
  3279 ;;      Totals:         0       0       0
  3280 ;;Total ram usage:        0 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    1
  3283 ;; This function calls:
  3284 ;;		_I2C1_Interrupt
  3285 ;; This function is called by:
  3286 ;;		_Handle
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _I2C_Interrupt
  3292  03FA                     _I2C_Interrupt:	
  3293                           
  3294                           ;PIC_I2C.c: 33: I2C1_Interrupt();
  3295                           
  3296                           ;incstack = 0
  3297                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3298  03FA  2245               	fcall	_I2C1_Interrupt
  3299  03FB  0008               	return
  3300  03FC                     __end_of_I2C_Interrupt:	
  3301                           
  3302                           	psect	text18
  3303  0245                     __ptext18:	
  3304 ;; *************** function _I2C1_Interrupt *****************
  3305 ;; Defined at:
  3306 ;;		line 153 in file "PIC_I2C1.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1
  3320 ;;      Params:         0       0       0
  3321 ;;      Locals:         0       0       0
  3322 ;;      Temps:          1       0       0
  3323 ;;      Totals:         1       0       0
  3324 ;;Total ram usage:        1 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_I2C_Interrupt
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _I2C1_Interrupt
  3335  0245                     _I2C1_Interrupt:	
  3336                           
  3337                           ;PIC_I2C1.c: 155: if(SSP1IF&&SSP1IE)
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3341  0245  0020               	movlb	0	; select bank0
  3342  0246  1D91               	btfss	17,3	;volatile
  3343  0247  2A91               	goto	i1l976
  3344  0248  0021               	movlb	1	; select bank1
  3345  0249  1D91               	btfss	17,3	;volatile
  3346  024A  2A91               	goto	i1l976
  3347                           
  3348                           ;PIC_I2C1.c: 156: {
  3349                           ;PIC_I2C1.c: 157: if(SSPSTATbits.D_nA)
  3350  024B  0024               	movlb	4	; select bank4
  3351  024C  1E94               	btfss	20,5	;volatile
  3352  024D  2A68               	goto	i1l295
  3353                           
  3354                           ;PIC_I2C1.c: 158: {
  3355                           ;PIC_I2C1.c: 159: if(SSPSTATbits.R_nW)
  3356  024E  1D14               	btfss	20,2	;volatile
  3357  024F  2A5B               	goto	i1l952
  3358                           
  3359                           ;PIC_I2C1.c: 160: {
  3360                           ;PIC_I2C1.c: 161: if(!SSPCON2bits.ACKSTAT)
  3361  0250  1B16               	btfsc	22,6	;volatile
  3362  0251  2A8F               	goto	i1l974
  3363  0252                     i1l944:	
  3364                           ;PIC_I2C1.c: 162: {
  3365                           ;PIC_I2C1.c: 163: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3366                           
  3367  0252  0814               	movf	20,w	;volatile
  3368  0253  3901               	andlw	1
  3369  0254  00F0               	movwf	??_I2C1_Interrupt
  3370  0255  0E15               	swapf	21,w	;volatile
  3371  0256  3901               	andlw	1
  3372  0257  0470               	iorwf	??_I2C1_Interrupt,w
  3373  0258  1D03               	btfss	3,2
  3374  0259  2A52               	goto	i1l944
  3375  025A  2A7B               	goto	L2
  3376  025B                     i1l952:	
  3377                           ;PIC_I2C1.c: 167: }
  3378                           ;PIC_I2C1.c: 168: }
  3379                           
  3380                           ;PIC_I2C1.c: 166: SSPCON1bits.CKP = 1;
  3381                           
  3382                           ;PIC_I2C1.c: 165: I2C1_Config.TransmitPoint++;
  3383                           
  3384                           ;PIC_I2C1.c: 164: SSPBUF = *I2C1_Config.TransmitPoint;
  3385                           
  3386                           
  3387                           ;PIC_I2C1.c: 169: else
  3388                           ;PIC_I2C1.c: 170: {
  3389                           ;PIC_I2C1.c: 171: *I2C1_Config.ReceivePoint = SSPBUF;
  3390  025B  0811               	movf	17,w	;volatile
  3391  025C  00F0               	movwf	??_I2C1_Interrupt
  3392  025D  0020               	movlb	0	; select bank0
  3393  025E  086C               	movf	low ((_I2C1_Config| 0+17)),w
  3394  025F  0086               	movwf	6
  3395  0260  0187               	clrf	7
  3396  0261  0870               	movf	??_I2C1_Interrupt,w
  3397  0262  0081               	movwf	1
  3398                           
  3399                           ;PIC_I2C1.c: 172: I2C1_Config.ReceivePoint++;
  3400  0263  3001               	movlw	1
  3401  0264  00F0               	movwf	??_I2C1_Interrupt
  3402  0265  0870               	movf	??_I2C1_Interrupt,w
  3403  0266  07EC               	addwf	low ((_I2C1_Config| 0+17)),f
  3404  0267  2A8D               	goto	i1l972
  3405  0268                     i1l295:	
  3406                           ;PIC_I2C1.c: 174: }
  3407                           ;PIC_I2C1.c: 175: }
  3408                           
  3409                           ;PIC_I2C1.c: 173: SSPCON1bits.CKP = 1;
  3410                           
  3411                           
  3412                           ;PIC_I2C1.c: 176: else if(!SSPSTATbits.D_nA)
  3413  0268  1A94               	btfsc	20,5	;volatile
  3414  0269  2A8F               	goto	i1l974
  3415                           
  3416                           ;PIC_I2C1.c: 177: {
  3417                           ;PIC_I2C1.c: 178: SSPBUF;
  3418  026A  0811               	movf	17,w	;volatile
  3419                           
  3420                           ;PIC_I2C1.c: 180: if(SSPSTATbits.R_nW)
  3421  026B  1D14               	btfss	20,2	;volatile
  3422  026C  2A88               	goto	i1l970
  3423                           
  3424                           ;PIC_I2C1.c: 181: {
  3425                           ;PIC_I2C1.c: 182: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3426  026D  305B               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3427  026E  00F0               	movwf	??_I2C1_Interrupt
  3428  026F  0870               	movf	??_I2C1_Interrupt,w
  3429  0270  0020               	movlb	0	; select bank0
  3430  0271  00EB               	movwf	low ((_I2C1_Config| 0+16))
  3431  0272                     i1l964:	
  3432                           ;PIC_I2C1.c: 184: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3433                           
  3434  0272  0024               	movlb	4	; select bank4
  3435  0273  0814               	movf	20,w	;volatile
  3436  0274  3901               	andlw	1
  3437  0275  00F0               	movwf	??_I2C1_Interrupt
  3438  0276  0E15               	swapf	21,w	;volatile
  3439  0277  3901               	andlw	1
  3440  0278  0470               	iorwf	??_I2C1_Interrupt,w
  3441  0279  1D03               	btfss	3,2
  3442  027A  2A72               	goto	i1l964
  3443  027B                     L2:	
  3444                           
  3445                           ;PIC_I2C1.c: 185: SSPBUF = *I2C1_Config.TransmitPoint;
  3446  027B  0020               	movlb	0	; select bank0
  3447  027C  086B               	movf	low ((_I2C1_Config| 0+16)),w
  3448  027D  0086               	movwf	6
  3449  027E  0187               	clrf	7
  3450  027F  0801               	movf	1,w
  3451  0280  0024               	movlb	4	; select bank4
  3452  0281  0091               	movwf	17	;volatile
  3453                           
  3454                           ;PIC_I2C1.c: 186: I2C1_Config.TransmitPoint++;
  3455  0282  3001               	movlw	1
  3456  0283  00F0               	movwf	??_I2C1_Interrupt
  3457  0284  0870               	movf	??_I2C1_Interrupt,w
  3458  0285  0020               	movlb	0	; select bank0
  3459  0286  07EB               	addwf	low ((_I2C1_Config| 0+16)),f
  3460                           
  3461                           ;PIC_I2C1.c: 187: }
  3462  0287  2A8D               	goto	i1l972
  3463  0288                     i1l970:	
  3464                           
  3465                           ;PIC_I2C1.c: 188: else
  3466                           ;PIC_I2C1.c: 189: {
  3467                           ;PIC_I2C1.c: 190: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3468  0288  3063               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3469  0289  00F0               	movwf	??_I2C1_Interrupt
  3470  028A  0870               	movf	??_I2C1_Interrupt,w
  3471  028B  0020               	movlb	0	; select bank0
  3472  028C  00EC               	movwf	low ((_I2C1_Config| 0+17))
  3473  028D                     i1l972:	
  3474                           
  3475                           ;PIC_I2C1.c: 191: }
  3476                           ;PIC_I2C1.c: 192: SSPCON1bits.CKP = 1;
  3477  028D  0024               	movlb	4	; select bank4
  3478  028E  1615               	bsf	21,4	;volatile
  3479  028F                     i1l974:	
  3480                           
  3481                           ;PIC_I2C1.c: 193: }
  3482                           ;PIC_I2C1.c: 194: SSP1IF = 0;
  3483  028F  0020               	movlb	0	; select bank0
  3484  0290  1191               	bcf	17,3	;volatile
  3485  0291                     i1l976:	
  3486                           
  3487                           ;PIC_I2C1.c: 195: }
  3488                           ;PIC_I2C1.c: 197: if(BCL1IE&&BCL1IF)
  3489  0291  0021               	movlb	1	; select bank1
  3490  0292  1D92               	btfss	18,3	;volatile
  3491  0293  0008               	return
  3492  0294  0020               	movlb	0	; select bank0
  3493  0295  1D92               	btfss	18,3	;volatile
  3494  0296  0008               	return
  3495                           
  3496                           ;PIC_I2C1.c: 198: BCL1IF = 0;
  3497  0297  1192               	bcf	18,3	;volatile
  3498  0298  0008               	return
  3499  0299                     __end_of_I2C1_Interrupt:	
  3500  007E                     btemp	set	126	;btemp
  3501  007E                     int$flags	set	126
  3502  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     51      78
    BANK1            32      0       0

Pointer List with Targets:

    I2C1_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@senddata(BANK0[2]), 

    I2C1_Init@I2C1_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_InitPort(), 

    I2C_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@senddata(BANK0[2]), 

    S266$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S266$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    MPU6050_Read_MultiData@pData	PTR unsigned char  size(1) Largest target is 14
		 -> main@accel_t_gyro(BANK0[14]), 

    MPU6050_Read_Data@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Init@addr(BANK0[1]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->_UART_InitPort
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive
    _I2C1_Init->_I2C_InitPort

Critical Paths under _Handle in COMMON

    _Handle->_UART_Interrupt
    _I2C_Interrupt->_I2C1_Interrupt

Critical Paths under _main in BANK0

    _main->_MPU6050_Init
    _MPU6050_Read_MultiData->_I2C_Receive
    _MPU6050_Read_MultiData->_I2C_Transmit
    _MPU6050_Init->_MPU6050_Write_Data
    _MPU6050_Write_Data->_I2C_Transmit
    _MPU6050_Read_Data->_I2C_Receive
    _MPU6050_Read_Data->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive

Critical Paths under _Handle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   10203
                                             26 BANK0     25    25      0
                         _Basic_Init
                          _I2C1_Init
                       _MPU6050_Init
             _MPU6050_Read_MultiData
                          _UART_Init
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     194
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_MultiData                               8     6      2    2991
                                             12 BANK0      8     6      2
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         5     5      0    4726
                                             21 BANK0      5     5      0
                  _MPU6050_Read_Data
                 _MPU6050_Write_Data
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write_Data                                   9     8      1    1722
                                             12 BANK0      9     8      1
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read_Data                                    6     5      1    2883
                                             12 BANK0      6     5      1
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1469
                                              4 BANK0      8     5      3
                      _I2C1_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          8     5      3    1229
                                              4 BANK0      8     5      3
                       _I2C1_Receive
 ---------------------------------------------------------------------------------
 (3) _I2C1_Receive                                         8     6      2     606
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Init                                            6     1      5     556
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _I2C_InitPort *
 ---------------------------------------------------------------------------------
 (2) _I2C_InitPort                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handle                                               1     1      0      68
                                              3 COMMON     1     1      0
                      _I2C_Interrupt
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (6) _UART_Interrupt                                       3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C_Interrupt                                        0     0      0       0
                     _I2C1_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C1_Init
     _I2C_InitPort *
   _MPU6050_Init
     _MPU6050_Read_Data
       _I2C_Receive
         _I2C1_Receive
       _I2C_Transmit
         _I2C1_Transmit
     _MPU6050_Write_Data
       _I2C_Transmit
         _I2C1_Transmit
   _MPU6050_Read_MultiData
     _I2C_Receive
       _I2C1_Receive
     _I2C_Transmit
       _I2C1_Transmit
   _UART_Init
     _UART_InitPort *
   _UART_Transmit

 _Handle (ROOT)
   _I2C_Interrupt
     _I2C1_Interrupt
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      58       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      58       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Jan 13 14:00:02 2018

                    __CFG_CP$OFF 0000                      _SSPSTATbits 0214                              l108 03ED  
                            l213 023C                              l216 0225                              l209 01FC  
                            l229 0180                              l238 01A7                              l247 01C0  
                            l280 0125                              l264 00E4                              l273 00FD  
                            l286 0137                              l279 0123                              _GIE 005F  
                   __CFG_CPD$OFF 0000             __size_of_I2C_Receive 001B                     __CFG_BORV$LO 0000  
                            wreg 0009                       _Basic_Init 03DF               MPU6050_Init@result 0037  
                   __CFG_LVP$OFF 0000                             l1600 016A                             l1602 0174  
                           l1612 0194                             l1622 018C                             l1702 0383  
                           l1720 03B2                             l1640 01E2                             l1624 0190  
                           l1714 039E                             l1626 01B5                             l1706 0392  
                           l1652 00CD                             l1636 01C6                             l1644 01E5  
                           l1708 0397                             l1654 00D7                             l1718 03AD  
                           l1638 01DD                             l1646 01ED                             l1814 0032  
                           l1664 00F3                             l1770 021C                             l1762 0211  
                           l1690 0154                             l1764 0213                             l1756 0206  
                           l1668 010A                             l1676 00EF                             l1782 0233  
                           l1678 012C                             l1694 015C                             l1688 013D  
                           l1696 0164                             l1778 0231                             _CREN 0CEC  
                           _PEIE 005E                             _RCIE 048D                             _RCIF 008D  
                           _OERR 0CE9                             _SPEN 0CEF                             _TXIF 008C  
                           _WPUA 020C                  ??_I2C1_Transmit 0076                     __CFG_WRT$OFF 0000  
          __size_of_I2C_InitPort 000D                             _main 001C                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
               ??_I2C1_Interrupt 0070                             start 0010                    __CFG_IESO$OFF 0000  
          __size_of_I2C_Transmit 001B                    __CFG_PLLEN$ON 0000                __end_of_I2C1_Init 0245  
                          ?_main 0070                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                          i1l130 0319                            i1l129 031C                            i1l295 0268  
                          i1l944 0252                            i1l952 025B                            i1l970 0288  
                          i1l972 028D                            i1l964 0272                            i1l974 028F  
                          i1l976 0291                            _RCREG 0199                            _RCSTA 019D  
                          _PORTA 000C                            _TRISA 008C                            _TXREG 019A  
                          _TXSTA 019E                   __CFG_FCMEN$OFF 0000               __size_of_UART_Init 0038  
                   _I2C_InitPort 03D2                _UART_Buffer_inptr 0079                    ?_MPU6050_Init 0070  
                 __CFG_BOREN$OFF 0000                            pclath 000A                     main@swap_163 003F  
                   main@swap_164 0040                     main@swap_165 0041                     main@swap_166 0042  
                   main@swap_167 0043                     main@swap_168 0044         ??_MPU6050_Read_MultiData 002E  
         __size_of_I2C_Interrupt 0002                            status 0003                            wtemp0 007E  
                   _I2C_Transmit 037E                   __CFG_MCLRE$OFF 0000                  __initialization 0011  
                   __end_of_main 00CA                           ??_main 003A                I2C_Receive@result 002B  
              I2C1_Receive@i_449 0023                I2C1_Receive@pData 0074                      ?_Basic_Init 0070  
                 ??_MPU6050_Init 0035                           _BCL1IE 0493                           _BCL1IF 0093  
                         _APFCON 011D                           _ANSELA 018C                           i1l1490 0316  
                         _OSCCON 0099                           _SPBRGH 019C                           _SPBRGL 019B  
                         _SSP1IE 048B                           _SSP1IF 008B                           _SSPADD 0212  
                         _SSPBUF 0211                           _SSPMSK 0213                           _Handle 0004  
                 __CFG_PWRTE$OFF 0000             MPU6050_Read_Data@reg 0030                __end_of_UART_Init 02D1  
             _UART_Buffer_outptr 0078                    _I2C_Interrupt 03FA      __size_of_MPU6050_Write_Data 001F  
        __size_of_UART_Interrupt 0027                 I2C_Transmit@I2Cx 002A            __end_of_UART_InitPort 03D2  
               I2C_Transmit@size 0026          UART_Init@UART_Init_PORT 0075          __end_of__initialization 0019  
__size_of_MPU6050_Read_MultiData 0027            __end_of_UART_Transmit 03F4                   __pcstackCOMMON 0070  
            __size_of_Basic_Init 000D                   ?_I2C_Interrupt 0070               I2C_Receive@address 0024  
            I2C1_Transmit@result 0023                       __pbssBANK0 0053       MPU6050_Write_Data@senddata 0032  
                        ?_Handle 0070               I2C1_Receive@result 0021                       __pmaintext 001C  
           __end_of_MPU6050_Init 037E                       __pintentry 0004           _MPU6050_Read_MultiData 02D1  
                  ??_I2C_Receive 0027                _MPU6050_Read_Data 031F               ?_MPU6050_Read_Data 002C  
                      _I2C1_Init 01F0                          _SSPCON1 0215                          _SSPCON2 0216  
                        _SSPSTAT 0214              ??_MPU6050_Read_Data 002D                __end_of_baudtable 03C4  
        MPU6050_Write_Data@pData 002C            __end_of_I2C1_Transmit 01F0                  __size_of_Handle 000C  
                ??_I2C_Interrupt 0071        __end_of_MPU6050_Read_Data 0344        MPU6050_Read_MultiData@reg 0032  
                __CFG_STVREN$OFF 0000                          __ptext1 03EC                          __ptext2 0299  
                        __ptext3 03C4                          __ptext4 02D1                          __ptext5 0363  
                        __ptext6 0344                          __ptext7 031F                          __ptext8 037E  
                        __ptext9 0167                   _UART_Interrupt 02F8                       ?_I2C1_Init 0020  
                   ??_Basic_Init 0074              __end_of_I2C_Receive 03B4                          clrloop0 03F5  
           end_of_initialization 0019                 I2C1_Init@address 0022                    ?_I2C1_Receive 0074  
                    _I2C1_Config 005B                I2C_Transmit@pData 0025               __end_of_Basic_Init 03EC  
         __end_of_UART_Interrupt 031F                        _UART_Init 0299          __size_of_I2C1_Interrupt 0054  
               __CFG_FOSC$INTOSC 0000                 MPU6050_Init@addr 0039                 MPU6050_Init@data 0038  
                 ??_I2C1_Receive 0076            __size_of_MPU6050_Init 001B                       main@result 003D  
                 __end_of_Handle 0010                 UART_Interrupt@dt 0071       __size_of_MPU6050_Read_Data 0025  
                ?_UART_Interrupt 0070                       ?_UART_Init 0075       __end_of_MPU6050_Write_Data 0363  
                    _I2C_Receive 0399              start_initialization 0011                      ??_I2C1_Init 0075  
               I2C_Receive@pData 0025             I2C1_Transmit@address 0020                     _MPU6050_Init 0363  
               I2C1_Receive@size 0075                         ??_Handle 0073            MPU6050_Write_Data@reg 0031  
        ?_MPU6050_Read_MultiData 002C           __size_of_UART_InitPort 000E          MPU6050_Read_Data@result 0031  
                    __pbssCOMMON 0078                        ___latbits 0000           __size_of_UART_Transmit 0008  
                  __pcstackBANK0 0020              I2C1_Receive@address 0020                    ?_I2C_InitPort 0070  
             I2C1_Transmit@i_442 0022      MPU6050_Read_MultiData@pData 002C               I2C1_Transmit@pData 0074  
                      _baudtable 03B4                    ?_I2C_Transmit 0024   __end_of_MPU6050_Read_MultiData 02F8  
                    ??_UART_Init 0020                   _I2C1_Interrupt 0245             __end_of_I2C1_Receive 0167  
                 ??_I2C_InitPort 0074                    _UART_InitPort 03C4          I2C1_Init@I2C1_Init_PORT 0020  
                 ??_I2C_Transmit 0027                        clear_ram0 03F4                    _UART_Transmit 03EC  
         __end_of_I2C1_Interrupt 0299            __end_of_I2C_Interrupt 03FC           __size_of_I2C1_Transmit 0089  
                 ?_UART_InitPort 0070                  UART_Interrupt@x 0072                  I2C_Receive@I2Cx 002A  
       MPU6050_Write_Data@result 0034                  I2C_Receive@size 0026                   ?_UART_Transmit 0070  
         MPU6050_Read_Data@pData 002C                 ??_UART_Interrupt 0070                  ?_I2C1_Interrupt 0070  
                   ?_I2C_Receive 0024       MPU6050_Read_MultiData@size 002D                I2C1_Transmit@size 0075  
                   UART_Init@brg 0077                         __ptext10 0399                         __ptext11 00CA  
                       __ptext12 01F0                         __ptext13 03D2                         __ptext14 03DF  
                       __ptext16 02F8                         __ptext17 03FA                         __ptext18 0245  
             _MPU6050_Write_Data 0344                    __size_of_main 00AE              ?_MPU6050_Write_Data 002C  
                 I2C1_Init@Speed 0024                    _I2C1_Transmit 0167             __end_of_I2C_InitPort 03DF  
          __size_of_I2C1_Receive 009D                         int$flags 007E              I2C_Transmit@address 0024  
                       main@swap 003E     MPU6050_Read_MultiData@result 0033             ??_MPU6050_Write_Data 002D  
           __end_of_I2C_Transmit 0399                  ??_UART_InitPort 0074                         intlevel1 0000  
                ??_UART_Transmit 0074                     _I2C1_Receive 00CA                  UART_Transmit@dt 0074  
                 ?_I2C1_Transmit 0074                __CFG_CLKOUTEN$OFF 0000                      _UART_Buffer 0053  
                  I2C1_Init@mode 0023                    I2C1_Receive@i 0022               I2C_Transmit@result 002B  
                  __pstringtext1 03B4                 main@accel_t_gyro 0045                      _SSPCON1bits 0215  
                    _SSPCON2bits 0216                   I2C1_Transmit@i 0021               __size_of_I2C1_Init 0055  
