

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Dec 21 05:27:21 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.43
    24                           ; Generated 25/07/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F1822 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011D                     	;# 
   109  018C                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0294                     	;# 
   151  0295                     	;# 
   152  0295                     	;# 
   153  0296                     	;# 
   154  0391                     	;# 
   155  0392                     	;# 
   156  0393                     	;# 
   157  039A                     	;# 
   158  039C                     	;# 
   159  039D                     	;# 
   160  039E                     	;# 
   161  039F                     	;# 
   162  0FE4                     	;# 
   163  0FE5                     	;# 
   164  0FE6                     	;# 
   165  0FE7                     	;# 
   166  0FE8                     	;# 
   167  0FE9                     	;# 
   168  0FEA                     	;# 
   169  0FEB                     	;# 
   170  0FED                     	;# 
   171  0FEE                     	;# 
   172  0FEF                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  008C                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  010C                     	;# 
   214  0111                     	;# 
   215  0112                     	;# 
   216  0115                     	;# 
   217  0116                     	;# 
   218  0117                     	;# 
   219  0118                     	;# 
   220  0119                     	;# 
   221  011A                     	;# 
   222  011B                     	;# 
   223  011D                     	;# 
   224  011D                     	;# 
   225  018C                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0193                     	;# 
   232  0194                     	;# 
   233  0195                     	;# 
   234  0196                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019D                     	;# 
   244  019E                     	;# 
   245  019F                     	;# 
   246  020C                     	;# 
   247  0211                     	;# 
   248  0211                     	;# 
   249  0212                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0213                     	;# 
   253  0214                     	;# 
   254  0214                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0216                     	;# 
   259  0216                     	;# 
   260  0217                     	;# 
   261  0217                     	;# 
   262  0291                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0295                     	;# 
   269  0296                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  0393                     	;# 
   273  039A                     	;# 
   274  039C                     	;# 
   275  039D                     	;# 
   276  039E                     	;# 
   277  039F                     	;# 
   278  0FE4                     	;# 
   279  0FE5                     	;# 
   280  0FE6                     	;# 
   281  0FE7                     	;# 
   282  0FE8                     	;# 
   283  0FE9                     	;# 
   284  0FEA                     	;# 
   285  0FEB                     	;# 
   286  0FED                     	;# 
   287  0FEE                     	;# 
   288  0FEF                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  008C                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  010C                     	;# 
   330  0111                     	;# 
   331  0112                     	;# 
   332  0115                     	;# 
   333  0116                     	;# 
   334  0117                     	;# 
   335  0118                     	;# 
   336  0119                     	;# 
   337  011A                     	;# 
   338  011B                     	;# 
   339  011D                     	;# 
   340  011D                     	;# 
   341  018C                     	;# 
   342  0191                     	;# 
   343  0191                     	;# 
   344  0192                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0193                     	;# 
   348  0194                     	;# 
   349  0195                     	;# 
   350  0196                     	;# 
   351  0199                     	;# 
   352  019A                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019C                     	;# 
   358  019C                     	;# 
   359  019D                     	;# 
   360  019E                     	;# 
   361  019F                     	;# 
   362  020C                     	;# 
   363  0211                     	;# 
   364  0211                     	;# 
   365  0212                     	;# 
   366  0212                     	;# 
   367  0213                     	;# 
   368  0213                     	;# 
   369  0214                     	;# 
   370  0214                     	;# 
   371  0215                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0216                     	;# 
   375  0216                     	;# 
   376  0217                     	;# 
   377  0217                     	;# 
   378  0291                     	;# 
   379  0291                     	;# 
   380  0292                     	;# 
   381  0293                     	;# 
   382  0294                     	;# 
   383  0295                     	;# 
   384  0295                     	;# 
   385  0296                     	;# 
   386  0391                     	;# 
   387  0392                     	;# 
   388  0393                     	;# 
   389  039A                     	;# 
   390  039C                     	;# 
   391  039D                     	;# 
   392  039E                     	;# 
   393  039F                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  008C                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011D                     	;# 
   457  018C                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0199                     	;# 
   468  019A                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020C                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0294                     	;# 
   499  0295                     	;# 
   500  0295                     	;# 
   501  0296                     	;# 
   502  0391                     	;# 
   503  0392                     	;# 
   504  0393                     	;# 
   505  039A                     	;# 
   506  039C                     	;# 
   507  039D                     	;# 
   508  039E                     	;# 
   509  039F                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521                           
   522                           	psect	stringtext1
   523  018F                     __pstringtext1:	
   524  018F                     _baudtable:	
   525  018F  340A               	retlw	10
   526  0190  341A               	retlw	26
   527  0191  3404               	retlw	4
   528  0192  340D               	retlw	13
   529  0193  3440               	retlw	64
   530  0194  3403               	retlw	3
   531  0195  34CF               	retlw	207
   532  0196  3400               	retlw	0
   533  0197  34BF               	retlw	191
   534  0198  3400               	retlw	0
   535  0199  3467               	retlw	103
   536  019A  3400               	retlw	0
   537  019B  3422               	retlw	34
   538  019C  3400               	retlw	0
   539  019D  3410               	retlw	16
   540  019E  3400               	retlw	0
   541  019F                     __end_of_baudtable:	
   542  000C                     _PORTA	set	12
   543  0093                     _BCL1IF	set	147
   544  008B                     _SSP1IF	set	139
   545  008C                     _TXIF	set	140
   546  005F                     _GIE	set	95
   547  005E                     _PEIE	set	94
   548  008D                     _RCIF	set	141
   549  008C                     _TRISA	set	140
   550  0099                     _OSCCON	set	153
   551  0493                     _BCL1IE	set	1171
   552  048B                     _SSP1IE	set	1163
   553  048D                     _RCIE	set	1165
   554  011D                     _APFCON	set	285
   555  0199                     _RCREG	set	409
   556  019A                     _TXREG	set	410
   557  019C                     _SPBRGH	set	412
   558  019B                     _SPBRGL	set	411
   559  019D                     _RCSTA	set	413
   560  019E                     _TXSTA	set	414
   561  018C                     _ANSELA	set	396
   562  0CEC                     _CREN	set	3308
   563  0CE9                     _OERR	set	3305
   564  0CEF                     _SPEN	set	3311
   565  0CFB                     _BRG16	set	3323
   566  0214                     _SSPSTATbits	set	532
   567  0211                     _SSPBUF	set	529
   568  0216                     _SSPCON2	set	534
   569  0213                     _SSPMSK	set	531
   570  0216                     _SSPCON2bits	set	534
   571  0215                     _SSPCON1bits	set	533
   572  0212                     _SSPADD	set	530
   573  0214                     _SSPSTAT	set	532
   574  0215                     _SSPCON1	set	533
   575  020C                     _WPUA	set	524
   576                           
   577                           ; #config settings
   578  0000                     
   579                           	psect	cinit
   580  0011                     start_initialization:	
   581  0011                     __initialization:	
   582                           
   583                           ; Clear objects allocated to COMMON
   584  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   585  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   586                           
   587                           ; Clear objects allocated to BANK0
   588  0013  3020               	movlw	low __pbssBANK0
   589  0014  0084               	movwf	4
   590  0015  3000               	movlw	high __pbssBANK0
   591  0016  0085               	movwf	5
   592  0017  3033               	movlw	51
   593  0018  21C6               	fcall	clear_ram0
   594  0019                     end_of_initialization:	
   595                           ;End of C runtime variable initialization code
   596                           
   597  0019                     __end_of__initialization:	
   598  0019  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   599  001A  0020               	movlb	0
   600  001B  281C               	ljmp	_main	;jump to C main() function
   601                           
   602                           	psect	bssCOMMON
   603  0078                     __pbssCOMMON:	
   604  0078                     _UART_Buffer_outptr:	
   605  0078                     	ds	1
   606  0079                     _UART_Buffer_inptr:	
   607  0079                     	ds	1
   608                           
   609                           	psect	bssBANK0
   610  0020                     __pbssBANK0:	
   611  0020                     _UART_Buffer:	
   612  0020                     	ds	32
   613  0040                     _I2C1_Config:	
   614  0040                     	ds	19
   615                           
   616                           	psect	clrtext
   617  01C6                     clear_ram0:	
   618                           ;	Called with FSR0 containing the base address, and
   619                           ;	WREG with the size to clear
   620                           
   621  01C6  0064               	clrwdt	;clear the watchdog before getting into this loop
   622  01C7                     clrloop0:	
   623  01C7  0180               	clrf	0	;clear RAM location pointed to by FSR
   624  01C8  3101               	addfsr 0,1
   625  01C9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   626  01CA  29C7               	goto	clrloop0	;have we reached the end yet?
   627  01CB  3400               	retlw	0	;all done for this memory range, return
   628                           
   629                           	psect	cstackCOMMON
   630  0070                     __pcstackCOMMON:	
   631  0070                     ?_Basic_Init:	
   632  0070                     ?_UART_InitPort:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_I2C_InitPort:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_UART_Interrupt:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ??_UART_Interrupt:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_I2C_Interrupt:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_I2C1_Interrupt:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ??_I2C1_Interrupt:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_main:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_Handle:	
   657                           ; 1 bytes @ 0x0
   658                           
   659                           
   660                           ; 1 bytes @ 0x0
   661  0070                     	ds	1
   662  0071                     ??_I2C_Interrupt:	
   663  0071                     UART_Interrupt@dt:	
   664                           ; 1 bytes @ 0x1
   665                           
   666                           
   667                           ; 1 bytes @ 0x1
   668  0071                     	ds	1
   669  0072                     UART_Interrupt@x:	
   670                           
   671                           ; 1 bytes @ 0x2
   672  0072                     	ds	1
   673  0073                     ??_Handle:	
   674                           
   675                           ; 1 bytes @ 0x3
   676  0073                     	ds	1
   677  0074                     ??_Basic_Init:	
   678  0074                     ??_UART_InitPort:	
   679                           ; 1 bytes @ 0x4
   680                           
   681  0074                     ??_I2C_InitPort:	
   682                           ; 1 bytes @ 0x4
   683                           
   684                           
   685                           ; 1 bytes @ 0x4
   686  0074                     	ds	1
   687  0075                     ?_UART_Init:	
   688  0075                     ??_I2C1_Init:	
   689                           ; 1 bytes @ 0x5
   690                           
   691  0075                     UART_Init@UART_Init_PORT:	
   692                           ; 1 bytes @ 0x5
   693                           
   694                           
   695                           ; 2 bytes @ 0x5
   696  0075                     	ds	2
   697  0077                     UART_Init@brg:	
   698                           
   699                           ; 1 bytes @ 0x7
   700  0077                     	ds	1
   701                           
   702                           	psect	cstackBANK0
   703  0053                     __pcstackBANK0:	
   704  0053                     ??_UART_Init:	
   705  0053                     ?_I2C1_Init:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0053                     I2C1_Init@I2C1_Init_PORT:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 2 bytes @ 0x0
   713  0053                     	ds	2
   714  0055                     I2C1_Init@address:	
   715                           
   716                           ; 1 bytes @ 0x2
   717  0055                     	ds	1
   718  0056                     I2C1_Init@mode:	
   719                           
   720                           ; 1 bytes @ 0x3
   721  0056                     	ds	1
   722  0057                     I2C1_Init@Speed:	
   723                           
   724                           ; 1 bytes @ 0x4
   725  0057                     	ds	1
   726  0058                     ??_main:	
   727                           
   728                           ; 1 bytes @ 0x5
   729  0058                     	ds	1
   730  0059                     main@swap:	
   731                           
   732                           ; 1 bytes @ 0x6
   733  0059                     	ds	1
   734  005A                     main@accel_t_gyro:	
   735                           
   736                           ; 14 bytes @ 0x7
   737  005A                     	ds	14
   738                           
   739                           	psect	maintext
   740  001C                     __pmaintext:	
   741 ;;
   742 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   743 ;;
   744 ;; *************** function _main *****************
   745 ;; Defined at:
   746 ;;		line 9 in file "main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  accel_t_gyro   14    7[BANK0 ] struct .
   751 ;;  error           2    0        int 
   752 ;;  swap            1    6[BANK0 ] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : B1F/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1
   762 ;;      Params:         0       0       0
   763 ;;      Locals:         0      15       0
   764 ;;      Temps:          0       1       0
   765 ;;      Totals:         0      16       0
   766 ;;Total ram usage:       16 bytes
   767 ;; Hardware stack levels required when called:    5
   768 ;; This function calls:
   769 ;;		_Basic_Init
   770 ;;		_I2C1_Init
   771 ;;		_UART_Init
   772 ;; This function is called by:
   773 ;;		Startup code after reset
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _main
   779  001C                     _main:	
   780                           
   781                           ;main.c: 11: Basic_Init();
   782                           
   783                           ;incstack = 0
   784                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   785  001C  21B9               	fcall	_Basic_Init
   786                           
   787                           ;main.c: 12: UART_Init(UART_InitPort,BAUD_9600);
   788  001D  309F               	movlw	low _UART_InitPort
   789  001E  00F5               	movwf	UART_Init@UART_Init_PORT
   790  001F  3001               	movlw	high _UART_InitPort
   791  0020  00F6               	movwf	UART_Init@UART_Init_PORT+1
   792  0021  3003               	movlw	3
   793  0022  0020               	movlb	0	; select bank0
   794  0023  00D8               	movwf	??_main
   795  0024  0858               	movf	??_main,w
   796  0025  00F7               	movwf	UART_Init@brg
   797  0026  2130               	fcall	_UART_Init
   798                           
   799                           ;main.c: 14: I2C1_Init(I2C_InitPort,0x00,I2C_MODE_MASTER,I2C_SPEED_HIGH);
   800  0027  30AC               	movlw	low _I2C_InitPort
   801  0028  0020               	movlb	0	; select bank0
   802  0029  00D3               	movwf	I2C1_Init@I2C1_Init_PORT
   803  002A  3001               	movlw	high _I2C_InitPort
   804  002B  00D4               	movwf	I2C1_Init@I2C1_Init_PORT+1
   805  002C  01D5               	clrf	I2C1_Init@address
   806  002D  01D6               	clrf	I2C1_Init@mode
   807  002E  01D7               	clrf	I2C1_Init@Speed
   808  002F  0AD7               	incf	I2C1_Init@Speed,f
   809  0030  2087               	fcall	_I2C1_Init
   810  0031                     l1273:	
   811                           ;main.c: 16: while(1)
   812                           
   813                           
   814                           ;main.c: 17: {
   815                           ;main.c: 19: int error;
   816                           ;main.c: 20: accel_t_gyro_union accel_t_gyro;
   817                           ;main.c: 27: uint8_t swap;
   818                           ;main.c: 29: swap = accel_t_gyro.reg.x_accel_h; accel_t_gyro.reg.x_accel_h = accel_t_gyr
      +                          o.reg.x_accel_l; accel_t_gyro.reg.x_accel_l = swap;
   819  0031  0020               	movlb	0	; select bank0
   820  0032  085A               	movf	main@accel_t_gyro,w
   821  0033  00D8               	movwf	??_main
   822  0034  0858               	movf	??_main,w
   823  0035  00D9               	movwf	main@swap
   824  0036  085B               	movf	main@accel_t_gyro+1,w
   825  0037  00D8               	movwf	??_main
   826  0038  0858               	movf	??_main,w
   827  0039  00DA               	movwf	main@accel_t_gyro
   828  003A  0859               	movf	main@swap,w
   829  003B  00D8               	movwf	??_main
   830  003C  0858               	movf	??_main,w
   831  003D  00DB               	movwf	main@accel_t_gyro+1
   832                           
   833                           ;main.c: 30: swap = accel_t_gyro.reg.y_accel_h; accel_t_gyro.reg.y_accel_h = accel_t_gyr
      +                          o.reg.y_accel_l; accel_t_gyro.reg.y_accel_l = swap;
   834  003E  085C               	movf	main@accel_t_gyro+2,w
   835  003F  00D8               	movwf	??_main
   836  0040  0858               	movf	??_main,w
   837  0041  00D9               	movwf	main@swap
   838  0042  085D               	movf	main@accel_t_gyro+3,w
   839  0043  00D8               	movwf	??_main
   840  0044  0858               	movf	??_main,w
   841  0045  00DC               	movwf	main@accel_t_gyro+2
   842  0046  0859               	movf	main@swap,w
   843  0047  00D8               	movwf	??_main
   844  0048  0858               	movf	??_main,w
   845  0049  00DD               	movwf	main@accel_t_gyro+3
   846                           
   847                           ;main.c: 31: swap = accel_t_gyro.reg.z_accel_h; accel_t_gyro.reg.z_accel_h = accel_t_gyr
      +                          o.reg.z_accel_l; accel_t_gyro.reg.z_accel_l = swap;
   848  004A  085E               	movf	main@accel_t_gyro+4,w
   849  004B  00D8               	movwf	??_main
   850  004C  0858               	movf	??_main,w
   851  004D  00D9               	movwf	main@swap
   852  004E  085F               	movf	main@accel_t_gyro+5,w
   853  004F  00D8               	movwf	??_main
   854  0050  0858               	movf	??_main,w
   855  0051  00DE               	movwf	main@accel_t_gyro+4
   856  0052  0859               	movf	main@swap,w
   857  0053  00D8               	movwf	??_main
   858  0054  0858               	movf	??_main,w
   859  0055  00DF               	movwf	main@accel_t_gyro+5
   860                           
   861                           ;main.c: 32: swap = accel_t_gyro.reg.t_h; accel_t_gyro.reg.t_h = accel_t_gyro.reg.t_l; a
      +                          ccel_t_gyro.reg.t_l = swap;
   862  0056  0860               	movf	main@accel_t_gyro+6,w
   863  0057  00D8               	movwf	??_main
   864  0058  0858               	movf	??_main,w
   865  0059  00D9               	movwf	main@swap
   866  005A  0861               	movf	main@accel_t_gyro+7,w
   867  005B  00D8               	movwf	??_main
   868  005C  0858               	movf	??_main,w
   869  005D  00E0               	movwf	main@accel_t_gyro+6
   870  005E  0859               	movf	main@swap,w
   871  005F  00D8               	movwf	??_main
   872  0060  0858               	movf	??_main,w
   873  0061  00E1               	movwf	main@accel_t_gyro+7
   874                           
   875                           ;main.c: 33: swap = accel_t_gyro.reg.x_gyro_h; accel_t_gyro.reg.x_gyro_h = accel_t_gyro.
      +                          reg.x_gyro_l; accel_t_gyro.reg.x_gyro_l = swap;
   876  0062  0862               	movf	main@accel_t_gyro+8,w
   877  0063  00D8               	movwf	??_main
   878  0064  0858               	movf	??_main,w
   879  0065  00D9               	movwf	main@swap
   880  0066  0863               	movf	main@accel_t_gyro+9,w
   881  0067  00D8               	movwf	??_main
   882  0068  0858               	movf	??_main,w
   883  0069  00E2               	movwf	main@accel_t_gyro+8
   884  006A  0859               	movf	main@swap,w
   885  006B  00D8               	movwf	??_main
   886  006C  0858               	movf	??_main,w
   887  006D  00E3               	movwf	main@accel_t_gyro+9
   888                           
   889                           ;main.c: 34: swap = accel_t_gyro.reg.y_gyro_h; accel_t_gyro.reg.y_gyro_h = accel_t_gyro.
      +                          reg.y_gyro_l; accel_t_gyro.reg.y_gyro_l = swap;
   890  006E  0864               	movf	main@accel_t_gyro+10,w
   891  006F  00D8               	movwf	??_main
   892  0070  0858               	movf	??_main,w
   893  0071  00D9               	movwf	main@swap
   894  0072  0865               	movf	main@accel_t_gyro+11,w
   895  0073  00D8               	movwf	??_main
   896  0074  0858               	movf	??_main,w
   897  0075  00E4               	movwf	main@accel_t_gyro+10
   898  0076  0859               	movf	main@swap,w
   899  0077  00D8               	movwf	??_main
   900  0078  0858               	movf	??_main,w
   901  0079  00E5               	movwf	main@accel_t_gyro+11
   902                           
   903                           ;main.c: 35: swap = accel_t_gyro.reg.z_gyro_h; accel_t_gyro.reg.z_gyro_h = accel_t_gyro.
      +                          reg.z_gyro_l; accel_t_gyro.reg.z_gyro_l = swap;
   904  007A  0866               	movf	main@accel_t_gyro+12,w
   905  007B  00D8               	movwf	??_main
   906  007C  0858               	movf	??_main,w
   907  007D  00D9               	movwf	main@swap
   908  007E  0867               	movf	main@accel_t_gyro+13,w
   909  007F  00D8               	movwf	??_main
   910  0080  0858               	movf	??_main,w
   911  0081  00E6               	movwf	main@accel_t_gyro+12
   912  0082  0859               	movf	main@swap,w
   913  0083  00D8               	movwf	??_main
   914  0084  0858               	movf	??_main,w
   915  0085  00E7               	movwf	main@accel_t_gyro+13
   916  0086  2831               	goto	l1273
   917  0087                     __end_of_main:	
   918                           
   919                           	psect	text1
   920  0130                     __ptext1:	
   921 ;; *************** function _UART_Init *****************
   922 ;; Defined at:
   923 ;;		line 37 in file "PIC_UART.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  UART_Init_PO    2    5[COMMON] PTR FTN()void 
   926 ;;		 -> UART_InitPort(1), 
   927 ;;  brg             1    7[COMMON] enum E2421
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1
   939 ;;      Params:         3       0       0
   940 ;;      Locals:         0       0       0
   941 ;;      Temps:          0       4       0
   942 ;;      Totals:         3       4       0
   943 ;;Total ram usage:        7 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; Hardware stack levels required when called:    4
   946 ;; This function calls:
   947 ;;		_UART_InitPort
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _UART_Init
   955  0130                     _UART_Init:	
   956                           
   957                           ;PIC_UART.c: 39: UART_Init_PORT();
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   961  0130  0876               	movf	UART_Init@UART_Init_PORT+1,w
   962  0131  008A               	movwf	10
   963  0132  0875               	movf	UART_Init@UART_Init_PORT,w
   964  0133  000A               	callw
   965  0134  3181               	pagesel	$
   966                           
   967                           ;PIC_UART.c: 41: TXSTA = 0x20;
   968  0135  3020               	movlw	32
   969  0136  0023               	movlb	3	; select bank3
   970  0137  009E               	movwf	30	;volatile
   971                           
   972                           ;PIC_UART.c: 42: RCSTA = 0x10;
   973  0138  3010               	movlw	16
   974  0139  009D               	movwf	29	;volatile
   975                           
   976                           ;PIC_UART.c: 44: BRG16 = 1;
   977  013A  159F               	bsf	31,3	;volatile
   978                           
   979                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
   980  013B  0877               	movf	UART_Init@brg,w
   981  013C  0020               	movlb	0	; select bank0
   982  013D  00D3               	movwf	??_UART_Init
   983  013E  01D4               	clrf	??_UART_Init+1
   984  013F  35D3               	lslf	??_UART_Init,f
   985  0140  0DD4               	rlf	??_UART_Init+1,f
   986  0141  308F               	movlw	low (_baudtable| (0+32768))
   987  0142  0753               	addwf	??_UART_Init,w
   988  0143  0084               	movwf	4
   989  0144  3081               	movlw	high (_baudtable| (0+32768))
   990  0145  3D54               	addwfc	??_UART_Init+1,w
   991  0146  0085               	movwf	5
   992  0147  0800               	movf	0,w	;code access
   993  0148  0023               	movlb	3	; select bank3
   994  0149  009B               	movwf	27	;volatile
   995                           
   996                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
   997  014A  0877               	movf	UART_Init@brg,w
   998  014B  0020               	movlb	0	; select bank0
   999  014C  00D3               	movwf	??_UART_Init
  1000  014D  01D4               	clrf	??_UART_Init+1
  1001  014E  35D3               	lslf	??_UART_Init,f
  1002  014F  0DD4               	rlf	??_UART_Init+1,f
  1003  0150  308F               	movlw	low (_baudtable| (0+32768))
  1004  0151  0753               	addwf	??_UART_Init,w
  1005  0152  0084               	movwf	4
  1006  0153  3081               	movlw	high (_baudtable| (0+32768))
  1007  0154  3D54               	addwfc	??_UART_Init+1,w
  1008  0155  0085               	movwf	5
  1009  0156  3F00               	moviw [0]fsr0
  1010  0157  00D5               	movwf	??_UART_Init+2
  1011  0158  3F01               	moviw [1]fsr0
  1012  0159  00D6               	movwf	??_UART_Init+3
  1013  015A  0856               	movf	??_UART_Init+3,w
  1014  015B  0023               	movlb	3	; select bank3
  1015  015C  009C               	movwf	28	;volatile
  1016                           
  1017                           ;PIC_UART.c: 48: RCIF = 0;
  1018  015D  0020               	movlb	0	; select bank0
  1019  015E  1291               	bcf	17,5	;volatile
  1020                           
  1021                           ;PIC_UART.c: 49: RCIE = 1;
  1022  015F  0021               	movlb	1	; select bank1
  1023  0160  1691               	bsf	17,5	;volatile
  1024                           
  1025                           ;PIC_UART.c: 50: PEIE = 1;
  1026  0161  170B               	bsf	11,6	;volatile
  1027                           
  1028                           ;PIC_UART.c: 51: GIE = 1;
  1029  0162  178B               	bsf	11,7	;volatile
  1030                           
  1031                           ;PIC_UART.c: 53: SPEN = 1;
  1032  0163  0023               	movlb	3	; select bank3
  1033  0164  179D               	bsf	29,7	;volatile
  1034                           
  1035                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1036  0165  01F9               	clrf	_UART_Buffer_inptr
  1037                           
  1038                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1039  0166  01F8               	clrf	_UART_Buffer_outptr
  1040  0167  0008               	return
  1041  0168                     __end_of_UART_Init:	
  1042                           
  1043                           	psect	text2
  1044  019F                     __ptext2:	
  1045 ;; *************** function _UART_InitPort *****************
  1046 ;; Defined at:
  1047 ;;		line 63 in file "main.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1
  1061 ;;      Params:         0       0       0
  1062 ;;      Locals:         0       0       0
  1063 ;;      Temps:          1       0       0
  1064 ;;      Totals:         1       0       0
  1065 ;;Total ram usage:        1 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    3
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;;		_UART_Init
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _UART_InitPort
  1078  019F                     _UART_InitPort:	
  1079                           
  1080                           ;main.c: 65: TRISA &= ~(1<<4);
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  1084  019F  30EF               	movlw	239
  1085  01A0  00F4               	movwf	??_UART_InitPort
  1086  01A1  0874               	movf	??_UART_InitPort,w
  1087  01A2  0021               	movlb	1	; select bank1
  1088  01A3  058C               	andwf	12,f	;volatile
  1089                           
  1090                           ;main.c: 66: ANSELA &= ~(1<<4);
  1091  01A4  30EF               	movlw	239
  1092  01A5  00F4               	movwf	??_UART_InitPort
  1093  01A6  0874               	movf	??_UART_InitPort,w
  1094  01A7  0023               	movlb	3	; select bank3
  1095  01A8  058C               	andwf	12,f	;volatile
  1096                           
  1097                           ;main.c: 67: APFCON |= (1<<2);
  1098  01A9  0022               	movlb	2	; select bank2
  1099  01AA  151D               	bsf	29,2	;volatile
  1100  01AB  0008               	return
  1101  01AC                     __end_of_UART_InitPort:	
  1102                           
  1103                           	psect	text3
  1104  0087                     __ptext3:	
  1105 ;; *************** function _I2C1_Init *****************
  1106 ;; Defined at:
  1107 ;;		line 8 in file "PIC_I2C1.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  I2C1_Init_PO    2    0[BANK0 ] PTR FTN()void 
  1110 ;;		 -> I2C_InitPort(1), 
  1111 ;;  address         1    2[BANK0 ] unsigned char 
  1112 ;;  mode            1    3[BANK0 ] enum E2397
  1113 ;;  Speed           1    4[BANK0 ] enum E2401
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1
  1125 ;;      Params:         0       5       0
  1126 ;;      Locals:         0       0       0
  1127 ;;      Temps:          1       0       0
  1128 ;;      Totals:         1       5       0
  1129 ;;Total ram usage:        6 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    4
  1132 ;; This function calls:
  1133 ;;		_I2C_InitPort
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function _I2C1_Init
  1141  0087                     _I2C1_Init:	
  1142                           
  1143                           ;PIC_I2C1.c: 10: I2C1_Init_PORT();
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _I2C1_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1147  0087  0020               	movlb	0	; select bank0
  1148  0088  0854               	movf	I2C1_Init@I2C1_Init_PORT+1,w
  1149  0089  008A               	movwf	10
  1150  008A  0853               	movf	I2C1_Init@I2C1_Init_PORT,w
  1151  008B  000A               	callw
  1152  008C  3180               	pagesel	$
  1153                           
  1154                           ;PIC_I2C1.c: 11: I2C1_Config.Mode = mode;
  1155  008D  0020               	movlb	0	; select bank0
  1156  008E  0856               	movf	I2C1_Init@mode,w
  1157  008F  00F5               	movwf	??_I2C1_Init
  1158  0090  0875               	movf	??_I2C1_Init,w
  1159  0091  00D2               	movwf	_I2C1_Config+18
  1160                           
  1161                           ;PIC_I2C1.c: 13: switch(mode)
  1162  0092  28CA               	goto	l1265
  1163  0093                     l186:	
  1164                           ;PIC_I2C1.c: 14: {
  1165                           ;PIC_I2C1.c: 15: case I2C_MODE_MASTER:
  1166                           
  1167                           
  1168                           ;PIC_I2C1.c: 16: SSPCON1 |= (0x08<<0);
  1169  0093  0024               	movlb	4	; select bank4
  1170  0094  1595               	bsf	21,3	;volatile
  1171                           
  1172                           ;PIC_I2C1.c: 17: if(Speed==I2C_SPEED_STANDARD)
  1173  0095  0020               	movlb	0	; select bank0
  1174  0096  0857               	movf	I2C1_Init@Speed,w
  1175  0097  1D03               	btfss	3,2
  1176  0098  289D               	goto	l1239
  1177                           
  1178                           ;PIC_I2C1.c: 18: {
  1179                           ;PIC_I2C1.c: 19: SSPSTAT |= (1<<7);
  1180  0099  0024               	movlb	4	; select bank4
  1181  009A  1794               	bsf	20,7	;volatile
  1182                           
  1183                           ;PIC_I2C1.c: 20: SSPADD = 0x4F;
  1184  009B  304F               	movlw	79
  1185  009C  28A7               	goto	L1
  1186  009D                     l1239:	
  1187                           ;PIC_I2C1.c: 21: }
  1188                           
  1189                           
  1190                           ;PIC_I2C1.c: 22: else if(Speed==I2C_SPEED_HIGH)
  1191  009D  0020               	movlb	0	; select bank0
  1192  009E  0357               	decf	I2C1_Init@Speed,w
  1193  009F  1D03               	btfss	3,2
  1194  00A0  28A8               	goto	l1245
  1195                           
  1196                           ;PIC_I2C1.c: 23: {
  1197                           ;PIC_I2C1.c: 24: SSPSTAT &= ~(1<<7);
  1198  00A1  307F               	movlw	127
  1199  00A2  00F5               	movwf	??_I2C1_Init
  1200  00A3  0875               	movf	??_I2C1_Init,w
  1201  00A4  0024               	movlb	4	; select bank4
  1202  00A5  0594               	andwf	20,f	;volatile
  1203                           
  1204                           ;PIC_I2C1.c: 25: SSPADD = 0x13;
  1205  00A6  3013               	movlw	19
  1206  00A7                     L1:	
  1207  00A7  0092               	movwf	18	;volatile
  1208  00A8                     l1245:	
  1209                           
  1210                           ;PIC_I2C1.c: 26: }
  1211                           ;PIC_I2C1.c: 27: SSPCON1bits.SSPEN = 1;
  1212  00A8  0024               	movlb	4	; select bank4
  1213  00A9  28C8               	goto	l1261
  1214  00AA                     l1247:	
  1215                           ;PIC_I2C1.c: 30: case I2C_MODE_SLAVE:
  1216                           
  1217                           ;PIC_I2C1.c: 28: break;
  1218                           
  1219                           
  1220                           ;PIC_I2C1.c: 31: SSPSTAT = 0x00;
  1221  00AA  0024               	movlb	4	; select bank4
  1222  00AB  0194               	clrf	20	;volatile
  1223                           
  1224                           ;PIC_I2C1.c: 32: if(Speed==I2C_SPEED_STANDARD)
  1225  00AC  0020               	movlb	0	; select bank0
  1226  00AD  0857               	movf	I2C1_Init@Speed,w
  1227  00AE  1D03               	btfss	3,2
  1228  00AF  28B3               	goto	l1253
  1229                           
  1230                           ;PIC_I2C1.c: 33: SSPSTAT |= (1<<7);
  1231  00B0  0024               	movlb	4	; select bank4
  1232  00B1  1794               	bsf	20,7	;volatile
  1233  00B2  28BC               	goto	l193
  1234  00B3                     l1253:	
  1235                           
  1236                           ;PIC_I2C1.c: 34: else if(Speed==I2C_SPEED_HIGH)
  1237  00B3  0020               	movlb	0	; select bank0
  1238  00B4  0357               	decf	I2C1_Init@Speed,w
  1239  00B5  1D03               	btfss	3,2
  1240  00B6  28BC               	goto	l193
  1241                           
  1242                           ;PIC_I2C1.c: 35: SSPSTAT &= ~(1<<7);
  1243  00B7  307F               	movlw	127
  1244  00B8  00F5               	movwf	??_I2C1_Init
  1245  00B9  0875               	movf	??_I2C1_Init,w
  1246  00BA  0024               	movlb	4	; select bank4
  1247  00BB  0594               	andwf	20,f	;volatile
  1248  00BC                     l193:	
  1249                           
  1250                           ;PIC_I2C1.c: 37: SSPCON1 |= (0x06<<0);
  1251  00BC  3006               	movlw	6
  1252  00BD  00F5               	movwf	??_I2C1_Init
  1253  00BE  0875               	movf	??_I2C1_Init,w
  1254  00BF  0024               	movlb	4	; select bank4
  1255  00C0  0495               	iorwf	21,f	;volatile
  1256                           
  1257                           ;PIC_I2C1.c: 38: SSPCON2bits.SEN= 1;
  1258  00C1  1416               	bsf	22,0	;volatile
  1259                           
  1260                           ;PIC_I2C1.c: 39: SSPADD = address << 1;
  1261  00C2  0020               	movlb	0	; select bank0
  1262  00C3  3555               	lslf	I2C1_Init@address,w
  1263  00C4  0024               	movlb	4	; select bank4
  1264  00C5  0092               	movwf	18	;volatile
  1265                           
  1266                           ;PIC_I2C1.c: 40: SSPMSK = 0xFE;
  1267  00C6  30FE               	movlw	254
  1268  00C7  0093               	movwf	19	;volatile
  1269  00C8                     l1261:	
  1270                           
  1271                           ;PIC_I2C1.c: 41: SSPCON1bits.SSPEN = 1;
  1272  00C8  1695               	bsf	21,5	;volatile
  1273                           
  1274                           ;PIC_I2C1.c: 43: }
  1275                           
  1276                           ;PIC_I2C1.c: 42: break;
  1277  00C9  28D3               	goto	l190
  1278  00CA                     l1265:	
  1279  00CA  0020               	movlb	0	; select bank0
  1280  00CB  0856               	movf	I2C1_Init@mode,w
  1281                           
  1282                           ; Switch size 1, requested type "space"
  1283                           ; Number of cases is 2, Range of values is 0 to 1
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte            7     4 (average)
  1287                           ; direct_byte           10     6 (fixed)
  1288                           ; jumptable            260     6 (fixed)
  1289                           ;	Chosen strategy is simple_byte
  1290  00CC  3A00               	xorlw	0	; case 0
  1291  00CD  1903               	skipnz
  1292  00CE  2893               	goto	l186
  1293  00CF  3A01               	xorlw	1	; case 1
  1294  00D0  1903               	skipnz
  1295  00D1  28AA               	goto	l1247
  1296  00D2  28D3               	goto	l190
  1297  00D3                     l190:	
  1298                           
  1299                           ;PIC_I2C1.c: 44: SSP1IE = 1;
  1300  00D3  0021               	movlb	1	; select bank1
  1301  00D4  1591               	bsf	17,3	;volatile
  1302                           
  1303                           ;PIC_I2C1.c: 45: BCL1IE = 1;
  1304  00D5  1592               	bsf	18,3	;volatile
  1305                           
  1306                           ;PIC_I2C1.c: 46: SSP1IF = 0;
  1307  00D6  0020               	movlb	0	; select bank0
  1308  00D7  1191               	bcf	17,3	;volatile
  1309                           
  1310                           ;PIC_I2C1.c: 47: BCL1IF = 0;
  1311  00D8  1192               	bcf	18,3	;volatile
  1312                           
  1313                           ;PIC_I2C1.c: 49: PEIE = 1;
  1314  00D9  170B               	bsf	11,6	;volatile
  1315                           
  1316                           ;PIC_I2C1.c: 50: GIE = 1;
  1317  00DA  178B               	bsf	11,7	;volatile
  1318  00DB  0008               	return
  1319  00DC                     __end_of_I2C1_Init:	
  1320                           
  1321                           	psect	text4
  1322  01AC                     __ptext4:	
  1323 ;; *************** function _I2C_InitPort *****************
  1324 ;; Defined at:
  1325 ;;		line 69 in file "main.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1
  1339 ;;      Params:         0       0       0
  1340 ;;      Locals:         0       0       0
  1341 ;;      Temps:          1       0       0
  1342 ;;      Totals:         1       0       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    3
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;;		_I2C1_Init
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function _I2C_InitPort
  1356  01AC                     _I2C_InitPort:	
  1357                           
  1358                           ;main.c: 71: TRISA |= (1<<1);
  1359                           
  1360                           ;incstack = 0
  1361                           ; Regs used in _I2C_InitPort: [wreg+status,2+status,0]
  1362  01AC  0021               	movlb	1	; select bank1
  1363  01AD  148C               	bsf	12,1	;volatile
  1364                           
  1365                           ;main.c: 72: TRISA |= (1<<2);
  1366  01AE  150C               	bsf	12,2	;volatile
  1367                           
  1368                           ;main.c: 74: ANSELA &= ~(1<<1);
  1369  01AF  30FD               	movlw	253
  1370  01B0  00F4               	movwf	??_I2C_InitPort
  1371  01B1  0874               	movf	??_I2C_InitPort,w
  1372  01B2  0023               	movlb	3	; select bank3
  1373  01B3  058C               	andwf	12,f	;volatile
  1374                           
  1375                           ;main.c: 75: ANSELA &= ~(1<<2);
  1376  01B4  30FB               	movlw	251
  1377  01B5  00F4               	movwf	??_I2C_InitPort
  1378  01B6  0874               	movf	??_I2C_InitPort,w
  1379  01B7  058C               	andwf	12,f	;volatile
  1380  01B8  0008               	return
  1381  01B9                     __end_of_I2C_InitPort:	
  1382                           
  1383                           	psect	text5
  1384  01B9                     __ptext5:	
  1385 ;; *************** function _Basic_Init *****************
  1386 ;; Defined at:
  1387 ;;		line 47 in file "main.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1
  1401 ;;      Params:         0       0       0
  1402 ;;      Locals:         0       0       0
  1403 ;;      Temps:          0       0       0
  1404 ;;      Totals:         0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    3
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _Basic_Init
  1417  01B9                     _Basic_Init:	
  1418                           
  1419                           ;main.c: 49: OSCCON = 0xF0;
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _Basic_Init: [wreg+status,2]
  1423  01B9  30F0               	movlw	240
  1424  01BA  0021               	movlb	1	; select bank1
  1425  01BB  0099               	movwf	25	;volatile
  1426                           
  1427                           ;main.c: 53: TRISA = 0x00;
  1428  01BC  018C               	clrf	12	;volatile
  1429                           
  1430                           ;main.c: 54: ANSELA = 0x00;
  1431  01BD  0023               	movlb	3	; select bank3
  1432  01BE  018C               	clrf	12	;volatile
  1433                           
  1434                           ;main.c: 55: WPUA = 0x00;
  1435  01BF  0024               	movlb	4	; select bank4
  1436  01C0  018C               	clrf	12	;volatile
  1437                           
  1438                           ;main.c: 58: APFCON = 0x00;
  1439  01C1  0022               	movlb	2	; select bank2
  1440  01C2  019D               	clrf	29	;volatile
  1441                           
  1442                           ;main.c: 60: PORTA = 0x00;
  1443  01C3  0020               	movlb	0	; select bank0
  1444  01C4  018C               	clrf	12	;volatile
  1445  01C5  0008               	return
  1446  01C6                     __end_of_Basic_Init:	
  1447                           
  1448                           	psect	intentry
  1449  0004                     __pintentry:	
  1450 ;; *************** function _Handle *****************
  1451 ;; Defined at:
  1452 ;;		line 41 in file "main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1
  1466 ;;      Params:         0       0       0
  1467 ;;      Locals:         0       0       0
  1468 ;;      Temps:          1       0       0
  1469 ;;      Totals:         1       0       0
  1470 ;;Total ram usage:        1 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    2
  1473 ;; This function calls:
  1474 ;;		_I2C_Interrupt
  1475 ;;		_UART_Interrupt
  1476 ;; This function is called by:
  1477 ;;		Interrupt level 1
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481  0004                     _Handle:	
  1482                           
  1483                           ;incstack = 0
  1484  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1485                           
  1486                           ; Regs used in _Handle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1487  0005  3180               	pagesel	$
  1488  0006  0020               	movlb	0	; select bank0
  1489  0007  087F               	movf	127,w
  1490  0008  00F3               	movwf	??_Handle
  1491                           
  1492                           ;main.c: 43: UART_Interrupt();
  1493  0009  2168               	fcall	_UART_Interrupt
  1494                           
  1495                           ;main.c: 44: I2C_Interrupt();
  1496  000A  21CC               	fcall	_I2C_Interrupt
  1497  000B  0873               	movf	??_Handle,w
  1498  000C  0020               	movlb	0	; select bank0
  1499  000D  00FF               	movwf	127
  1500  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1501  000F  0009               	retfie
  1502  0010                     __end_of_Handle:	
  1503                           
  1504                           	psect	text7
  1505  0168                     __ptext7:	
  1506 ;; *************** function _UART_Interrupt *****************
  1507 ;; Defined at:
  1508 ;;		line 107 in file "PIC_UART.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  x               1    2[COMMON] unsigned char 
  1513 ;;  dt              1    1[COMMON] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1
  1523 ;;      Params:         0       0       0
  1524 ;;      Locals:         2       0       0
  1525 ;;      Temps:          1       0       0
  1526 ;;      Totals:         3       0       0
  1527 ;;Total ram usage:        3 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_Handle
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _UART_Interrupt
  1538  0168                     _UART_Interrupt:	
  1539                           
  1540                           ;PIC_UART.c: 109: uint8_t x;
  1541                           ;PIC_UART.c: 110: uint8_t dt;
  1542                           ;PIC_UART.c: 112: if (RCIF == 1)
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1546  0168  0020               	movlb	0	; select bank0
  1547  0169  1E91               	btfss	17,5	;volatile
  1548  016A  0008               	return
  1549                           
  1550                           ;PIC_UART.c: 113: {
  1551                           ;PIC_UART.c: 114: dt = RCREG;
  1552  016B  0023               	movlb	3	; select bank3
  1553  016C  0819               	movf	25,w	;volatile
  1554  016D  00F0               	movwf	??_UART_Interrupt
  1555  016E  0870               	movf	??_UART_Interrupt,w
  1556  016F  00F1               	movwf	UART_Interrupt@dt
  1557                           
  1558                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 32;
  1559  0170  0878               	movf	_UART_Buffer_outptr,w
  1560  0171  3E01               	addlw	1
  1561  0172  391F               	andlw	31
  1562  0173  00F0               	movwf	??_UART_Interrupt
  1563  0174  0870               	movf	??_UART_Interrupt,w
  1564  0175  00F2               	movwf	UART_Interrupt@x
  1565                           
  1566                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  1567  0176  0872               	movf	UART_Interrupt@x,w
  1568  0177  0679               	xorwf	_UART_Buffer_inptr,w
  1569  0178  1903               	skipnz
  1570  0179  2986               	goto	i1l897
  1571                           
  1572                           ;PIC_UART.c: 117: {
  1573                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  1574  017A  0871               	movf	UART_Interrupt@dt,w
  1575  017B  00F0               	movwf	??_UART_Interrupt
  1576  017C  0878               	movf	_UART_Buffer_outptr,w
  1577  017D  3E20               	addlw	(low (_UART_Buffer| 0))& (0+255)
  1578  017E  0086               	movwf	6
  1579  017F  0187               	clrf	7
  1580  0180  0870               	movf	??_UART_Interrupt,w
  1581  0181  0081               	movwf	1
  1582                           
  1583                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  1584  0182  0872               	movf	UART_Interrupt@x,w
  1585  0183  00F0               	movwf	??_UART_Interrupt
  1586  0184  0870               	movf	??_UART_Interrupt,w
  1587  0185  00F8               	movwf	_UART_Buffer_outptr
  1588  0186                     i1l897:	
  1589                           
  1590                           ;PIC_UART.c: 120: }
  1591                           ;PIC_UART.c: 122: if (OERR == 1)
  1592  0186  1C9D               	btfss	29,1	;volatile
  1593  0187  298C               	goto	i1l123
  1594                           
  1595                           ;PIC_UART.c: 123: {
  1596                           ;PIC_UART.c: 124: CREN = 0;
  1597  0188  121D               	bcf	29,4	;volatile
  1598  0189                     i1l124:	
  1599                           ;PIC_UART.c: 125: while (OERR);
  1600                           
  1601  0189  189D               	btfsc	29,1	;volatile
  1602  018A  2989               	goto	i1l124
  1603                           
  1604                           ;PIC_UART.c: 126: CREN = 1;
  1605  018B  161D               	bsf	29,4	;volatile
  1606  018C                     i1l123:	
  1607                           
  1608                           ;PIC_UART.c: 127: }
  1609                           ;PIC_UART.c: 128: RCIF = 0;
  1610  018C  0020               	movlb	0	; select bank0
  1611  018D  1291               	bcf	17,5	;volatile
  1612  018E  0008               	return
  1613  018F                     __end_of_UART_Interrupt:	
  1614                           
  1615                           	psect	text8
  1616  01CC                     __ptext8:	
  1617 ;; *************** function _I2C_Interrupt *****************
  1618 ;; Defined at:
  1619 ;;		line 31 in file "PIC_I2C.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1
  1633 ;;      Params:         0       0       0
  1634 ;;      Locals:         0       0       0
  1635 ;;      Temps:          0       0       0
  1636 ;;      Totals:         0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    1
  1640 ;; This function calls:
  1641 ;;		_I2C1_Interrupt
  1642 ;; This function is called by:
  1643 ;;		_Handle
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _I2C_Interrupt
  1649  01CC                     _I2C_Interrupt:	
  1650                           
  1651                           ;PIC_I2C.c: 33: I2C1_Interrupt();
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1655  01CC  20DC               	fcall	_I2C1_Interrupt
  1656  01CD  0008               	return
  1657  01CE                     __end_of_I2C_Interrupt:	
  1658                           
  1659                           	psect	text9
  1660  00DC                     __ptext9:	
  1661 ;; *************** function _I2C1_Interrupt *****************
  1662 ;; Defined at:
  1663 ;;		line 153 in file "PIC_I2C1.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1
  1677 ;;      Params:         0       0       0
  1678 ;;      Locals:         0       0       0
  1679 ;;      Temps:          1       0       0
  1680 ;;      Totals:         1       0       0
  1681 ;;Total ram usage:        1 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_I2C_Interrupt
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           
  1691                           ;psect for function _I2C1_Interrupt
  1692  00DC                     _I2C1_Interrupt:	
  1693                           
  1694                           ;PIC_I2C1.c: 155: if(SSP1IF&&SSP1IE)
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1698  00DC  0020               	movlb	0	; select bank0
  1699  00DD  1D91               	btfss	17,3	;volatile
  1700  00DE  2928               	goto	i1l803
  1701  00DF  0021               	movlb	1	; select bank1
  1702  00E0  1D91               	btfss	17,3	;volatile
  1703  00E1  2928               	goto	i1l803
  1704                           
  1705                           ;PIC_I2C1.c: 156: {
  1706                           ;PIC_I2C1.c: 157: if(SSPSTATbits.D_nA)
  1707  00E2  0024               	movlb	4	; select bank4
  1708  00E3  1E94               	btfss	20,5	;volatile
  1709  00E4  28FF               	goto	i1l272
  1710                           
  1711                           ;PIC_I2C1.c: 158: {
  1712                           ;PIC_I2C1.c: 159: if(SSPSTATbits.R_nW)
  1713  00E5  1D14               	btfss	20,2	;volatile
  1714  00E6  28F2               	goto	i1l779
  1715                           
  1716                           ;PIC_I2C1.c: 160: {
  1717                           ;PIC_I2C1.c: 161: if(!SSPCON2bits.ACKSTAT)
  1718  00E7  1B16               	btfsc	22,6	;volatile
  1719  00E8  2926               	goto	i1l801
  1720  00E9                     i1l771:	
  1721                           ;PIC_I2C1.c: 162: {
  1722                           ;PIC_I2C1.c: 163: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  1723                           
  1724  00E9  0814               	movf	20,w	;volatile
  1725  00EA  3901               	andlw	1
  1726  00EB  00F0               	movwf	??_I2C1_Interrupt
  1727  00EC  0E15               	swapf	21,w	;volatile
  1728  00ED  3901               	andlw	1
  1729  00EE  0470               	iorwf	??_I2C1_Interrupt,w
  1730  00EF  1D03               	btfss	3,2
  1731  00F0  28E9               	goto	i1l771
  1732  00F1  2912               	goto	L2
  1733  00F2                     i1l779:	
  1734                           ;PIC_I2C1.c: 167: }
  1735                           ;PIC_I2C1.c: 168: }
  1736                           
  1737                           ;PIC_I2C1.c: 166: SSPCON1bits.CKP = 1;
  1738                           
  1739                           ;PIC_I2C1.c: 165: I2C1_Config.TransmitPoint++;
  1740                           
  1741                           ;PIC_I2C1.c: 164: SSPBUF = *I2C1_Config.TransmitPoint;
  1742                           
  1743                           
  1744                           ;PIC_I2C1.c: 169: else
  1745                           ;PIC_I2C1.c: 170: {
  1746                           ;PIC_I2C1.c: 171: *I2C1_Config.ReceivePoint = SSPBUF;
  1747  00F2  0811               	movf	17,w	;volatile
  1748  00F3  00F0               	movwf	??_I2C1_Interrupt
  1749  00F4  0020               	movlb	0	; select bank0
  1750  00F5  0851               	movf	low ((_I2C1_Config| 0+17)),w
  1751  00F6  0086               	movwf	6
  1752  00F7  0187               	clrf	7
  1753  00F8  0870               	movf	??_I2C1_Interrupt,w
  1754  00F9  0081               	movwf	1
  1755                           
  1756                           ;PIC_I2C1.c: 172: I2C1_Config.ReceivePoint++;
  1757  00FA  3001               	movlw	1
  1758  00FB  00F0               	movwf	??_I2C1_Interrupt
  1759  00FC  0870               	movf	??_I2C1_Interrupt,w
  1760  00FD  07D1               	addwf	low ((_I2C1_Config| 0+17)),f
  1761  00FE  2924               	goto	i1l799
  1762  00FF                     i1l272:	
  1763                           ;PIC_I2C1.c: 174: }
  1764                           ;PIC_I2C1.c: 175: }
  1765                           
  1766                           ;PIC_I2C1.c: 173: SSPCON1bits.CKP = 1;
  1767                           
  1768                           
  1769                           ;PIC_I2C1.c: 176: else if(!SSPSTATbits.D_nA)
  1770  00FF  1A94               	btfsc	20,5	;volatile
  1771  0100  2926               	goto	i1l801
  1772                           
  1773                           ;PIC_I2C1.c: 177: {
  1774                           ;PIC_I2C1.c: 178: SSPBUF;
  1775  0101  0811               	movf	17,w	;volatile
  1776                           
  1777                           ;PIC_I2C1.c: 180: if(SSPSTATbits.R_nW)
  1778  0102  1D14               	btfss	20,2	;volatile
  1779  0103  291F               	goto	i1l797
  1780                           
  1781                           ;PIC_I2C1.c: 181: {
  1782                           ;PIC_I2C1.c: 182: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  1783  0104  3040               	movlw	(low (_I2C1_Config| 0))& (0+255)
  1784  0105  00F0               	movwf	??_I2C1_Interrupt
  1785  0106  0870               	movf	??_I2C1_Interrupt,w
  1786  0107  0020               	movlb	0	; select bank0
  1787  0108  00D0               	movwf	low ((_I2C1_Config| 0+16))
  1788  0109                     i1l791:	
  1789                           ;PIC_I2C1.c: 184: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  1790                           
  1791  0109  0024               	movlb	4	; select bank4
  1792  010A  0814               	movf	20,w	;volatile
  1793  010B  3901               	andlw	1
  1794  010C  00F0               	movwf	??_I2C1_Interrupt
  1795  010D  0E15               	swapf	21,w	;volatile
  1796  010E  3901               	andlw	1
  1797  010F  0470               	iorwf	??_I2C1_Interrupt,w
  1798  0110  1D03               	btfss	3,2
  1799  0111  2909               	goto	i1l791
  1800  0112                     L2:	
  1801                           
  1802                           ;PIC_I2C1.c: 185: SSPBUF = *I2C1_Config.TransmitPoint;
  1803  0112  0020               	movlb	0	; select bank0
  1804  0113  0850               	movf	low ((_I2C1_Config| 0+16)),w
  1805  0114  0086               	movwf	6
  1806  0115  0187               	clrf	7
  1807  0116  0801               	movf	1,w
  1808  0117  0024               	movlb	4	; select bank4
  1809  0118  0091               	movwf	17	;volatile
  1810                           
  1811                           ;PIC_I2C1.c: 186: I2C1_Config.TransmitPoint++;
  1812  0119  3001               	movlw	1
  1813  011A  00F0               	movwf	??_I2C1_Interrupt
  1814  011B  0870               	movf	??_I2C1_Interrupt,w
  1815  011C  0020               	movlb	0	; select bank0
  1816  011D  07D0               	addwf	low ((_I2C1_Config| 0+16)),f
  1817                           
  1818                           ;PIC_I2C1.c: 187: }
  1819  011E  2924               	goto	i1l799
  1820  011F                     i1l797:	
  1821                           
  1822                           ;PIC_I2C1.c: 188: else
  1823                           ;PIC_I2C1.c: 189: {
  1824                           ;PIC_I2C1.c: 190: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  1825  011F  3048               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  1826  0120  00F0               	movwf	??_I2C1_Interrupt
  1827  0121  0870               	movf	??_I2C1_Interrupt,w
  1828  0122  0020               	movlb	0	; select bank0
  1829  0123  00D1               	movwf	low ((_I2C1_Config| 0+17))
  1830  0124                     i1l799:	
  1831                           
  1832                           ;PIC_I2C1.c: 191: }
  1833                           ;PIC_I2C1.c: 192: SSPCON1bits.CKP = 1;
  1834  0124  0024               	movlb	4	; select bank4
  1835  0125  1615               	bsf	21,4	;volatile
  1836  0126                     i1l801:	
  1837                           
  1838                           ;PIC_I2C1.c: 193: }
  1839                           ;PIC_I2C1.c: 194: SSP1IF = 0;
  1840  0126  0020               	movlb	0	; select bank0
  1841  0127  1191               	bcf	17,3	;volatile
  1842  0128                     i1l803:	
  1843                           
  1844                           ;PIC_I2C1.c: 195: }
  1845                           ;PIC_I2C1.c: 197: if(BCL1IE&&BCL1IF)
  1846  0128  0021               	movlb	1	; select bank1
  1847  0129  1D92               	btfss	18,3	;volatile
  1848  012A  0008               	return
  1849  012B  0020               	movlb	0	; select bank0
  1850  012C  1D92               	btfss	18,3	;volatile
  1851  012D  0008               	return
  1852                           
  1853                           ;PIC_I2C1.c: 198: BCL1IF = 0;
  1854  012E  1192               	bcf	18,3	;volatile
  1855  012F  0008               	return
  1856  0130                     __end_of_I2C1_Interrupt:	
  1857  007E                     btemp	set	126	;btemp
  1858  007E                     int$flags	set	126
  1859  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     21      72
    BANK1            32      0       0

Pointer List with Targets:

    I2C1_Init@I2C1_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_InitPort(), 

    S206$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S206$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->_UART_InitPort
    _I2C1_Init->_I2C_InitPort

Critical Paths under _Handle in COMMON

    _Handle->_UART_Interrupt
    _I2C_Interrupt->_I2C1_Interrupt

Critical Paths under _main in BANK0

    _main->_I2C1_Init

Critical Paths under _Handle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    1945
                                              5 BANK0     16    16      0
                         _Basic_Init
                          _I2C1_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     194
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Init                                            6     1      5     556
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _I2C_InitPort *
 ---------------------------------------------------------------------------------
 (2) _I2C_InitPort                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Handle                                               1     1      0      45
                                              3 COMMON     1     1      0
                      _I2C_Interrupt
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (4) _UART_Interrupt                                       3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _I2C_Interrupt                                        0     0      0       0
                     _I2C1_Interrupt
 ---------------------------------------------------------------------------------
 (5) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C1_Init
     _I2C_InitPort *
   _UART_Init
     _UART_InitPort *

 _Handle (ROOT)
   _I2C_Interrupt
     _I2C1_Interrupt
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      52       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      48       6       90.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      52       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Dec 21 05:27:21 2017

            __CFG_CP$OFF 0000              _SSPSTATbits 0214                      l190 00D3  
                    l193 00BC                      l186 0093                      _GIE 005F  
           __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000                      wreg 0009  
             _Basic_Init 01B9             __CFG_LVP$OFF 0000                     l1261 00C8  
                   l1253 00B3                     l1245 00A8                     l1247 00AA  
                   l1239 009D                     l1265 00CA                     l1273 0031  
                   _CREN 0CEC                     _PEIE 005E                     _RCIE 048D  
                   _RCIF 008D                     _OERR 0CE9                     _SPEN 0CEF  
                   _TXIF 008C                     _WPUA 020C             __CFG_WRT$OFF 0000  
  __size_of_I2C_InitPort 000D                     _main 001C                     fsr0h 0005  
                   fsr1h 0007                     indf0 0000                     fsr0l 0004  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
       ??_I2C1_Interrupt 0070                     start 0010            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000            __CFG_PLLEN$ON 0000        __end_of_I2C1_Init 00DC  
                  ?_main 0070                    _BRG16 0CFB            __CFG_WDTE$OFF 0000  
                  i1l123 018C                    i1l124 0189                    i1l272 00FF  
                  i1l801 0126                    i1l803 0128                    i1l771 00E9  
                  i1l791 0109                    i1l779 00F2                    i1l797 011F  
                  i1l799 0124                    i1l897 0186                    _RCREG 0199  
                  _RCSTA 019D                    _PORTA 000C                    _TRISA 008C  
                  _TXREG 019A                    _TXSTA 019E           __CFG_FCMEN$OFF 0000  
     __size_of_UART_Init 0038             _I2C_InitPort 01AC        _UART_Buffer_inptr 0079  
         __CFG_BOREN$OFF 0000                    pclath 000A   __size_of_I2C_Interrupt 0002  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0087                   ??_main 0058              ?_Basic_Init 0070  
                 _BCL1IE 0493                   _BCL1IF 0093                   _APFCON 011D  
                 _ANSELA 018C                   _OSCCON 0099                   _SPBRGH 019C  
                 _SPBRGL 019B                   _SSP1IE 048B                   _SSP1IF 008B  
                 _SSPADD 0212                   _SSPBUF 0211                   _SSPMSK 0213  
                 _Handle 0004           __CFG_PWRTE$OFF 0000        __end_of_UART_Init 0168  
     _UART_Buffer_outptr 0078            _I2C_Interrupt 01CC  __size_of_UART_Interrupt 0027  
  __end_of_UART_InitPort 01AC  UART_Init@UART_Init_PORT 0075  __end_of__initialization 0019  
         __pcstackCOMMON 0070      __size_of_Basic_Init 000D           ?_I2C_Interrupt 0070  
             __pbssBANK0 0020                  ?_Handle 0070               __pmaintext 001C  
             __pintentry 0004                _I2C1_Init 0087                  _SSPCON1 0215  
                _SSPCON2 0216                  _SSPSTAT 0214        __end_of_baudtable 019F  
        __size_of_Handle 000C          ??_I2C_Interrupt 0071          __CFG_STVREN$OFF 0000  
                __ptext1 0130                  __ptext2 019F                  __ptext3 0087  
                __ptext4 01AC                  __ptext5 01B9                  __ptext7 0168  
                __ptext8 01CC                  __ptext9 00DC           _UART_Interrupt 0168  
             ?_I2C1_Init 0053             ??_Basic_Init 0074                  clrloop0 01C7  
   end_of_initialization 0019         I2C1_Init@address 0055              _I2C1_Config 0040  
     __end_of_Basic_Init 01C6   __end_of_UART_Interrupt 018F                _UART_Init 0130  
__size_of_I2C1_Interrupt 0054         __CFG_FOSC$INTOSC 0000           __end_of_Handle 0010  
       UART_Interrupt@dt 0071          ?_UART_Interrupt 0070               ?_UART_Init 0075  
    start_initialization 0011              ??_I2C1_Init 0075                 ??_Handle 0073  
 __size_of_UART_InitPort 000D              __pbssCOMMON 0078                ___latbits 0000  
          __pcstackBANK0 0053            ?_I2C_InitPort 0070                _baudtable 018F  
            ??_UART_Init 0053           _I2C1_Interrupt 00DC           ??_I2C_InitPort 0074  
          _UART_InitPort 019F  I2C1_Init@I2C1_Init_PORT 0053                clear_ram0 01C6  
 __end_of_I2C1_Interrupt 0130    __end_of_I2C_Interrupt 01CE           ?_UART_InitPort 0070  
        UART_Interrupt@x 0072         ??_UART_Interrupt 0070          ?_I2C1_Interrupt 0070  
           UART_Init@brg 0077            __size_of_main 006B           I2C1_Init@Speed 0057  
   __end_of_I2C_InitPort 01B9                 int$flags 007E                 main@swap 0059  
        ??_UART_InitPort 0074                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
            _UART_Buffer 0020            I2C1_Init@mode 0056            __pstringtext1 018F  
       main@accel_t_gyro 005A              _SSPCON1bits 0215              _SSPCON2bits 0216  
     __size_of_I2C1_Init 0055  
