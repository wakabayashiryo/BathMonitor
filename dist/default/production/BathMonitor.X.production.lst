

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Dec 20 07:00:09 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.43
    24                           ; Generated 25/07/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC12F1822 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  010C                     	;# 
    98  0111                     	;# 
    99  0112                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011D                     	;# 
   109  018C                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0294                     	;# 
   151  0295                     	;# 
   152  0295                     	;# 
   153  0296                     	;# 
   154  0391                     	;# 
   155  0392                     	;# 
   156  0393                     	;# 
   157  039A                     	;# 
   158  039C                     	;# 
   159  039D                     	;# 
   160  039E                     	;# 
   161  039F                     	;# 
   162  0FE4                     	;# 
   163  0FE5                     	;# 
   164  0FE6                     	;# 
   165  0FE7                     	;# 
   166  0FE8                     	;# 
   167  0FE9                     	;# 
   168  0FEA                     	;# 
   169  0FEB                     	;# 
   170  0FED                     	;# 
   171  0FEE                     	;# 
   172  0FEF                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  008C                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  010C                     	;# 
   214  0111                     	;# 
   215  0112                     	;# 
   216  0115                     	;# 
   217  0116                     	;# 
   218  0117                     	;# 
   219  0118                     	;# 
   220  0119                     	;# 
   221  011A                     	;# 
   222  011B                     	;# 
   223  011D                     	;# 
   224  011D                     	;# 
   225  018C                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0193                     	;# 
   232  0194                     	;# 
   233  0195                     	;# 
   234  0196                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019D                     	;# 
   244  019E                     	;# 
   245  019F                     	;# 
   246  020C                     	;# 
   247  0211                     	;# 
   248  0211                     	;# 
   249  0212                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0213                     	;# 
   253  0214                     	;# 
   254  0214                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0216                     	;# 
   259  0216                     	;# 
   260  0217                     	;# 
   261  0217                     	;# 
   262  0291                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0295                     	;# 
   269  0296                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  0393                     	;# 
   273  039A                     	;# 
   274  039C                     	;# 
   275  039D                     	;# 
   276  039E                     	;# 
   277  039F                     	;# 
   278  0FE4                     	;# 
   279  0FE5                     	;# 
   280  0FE6                     	;# 
   281  0FE7                     	;# 
   282  0FE8                     	;# 
   283  0FE9                     	;# 
   284  0FEA                     	;# 
   285  0FEB                     	;# 
   286  0FED                     	;# 
   287  0FEE                     	;# 
   288  0FEF                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  008C                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  010C                     	;# 
   330  0111                     	;# 
   331  0112                     	;# 
   332  0115                     	;# 
   333  0116                     	;# 
   334  0117                     	;# 
   335  0118                     	;# 
   336  0119                     	;# 
   337  011A                     	;# 
   338  011B                     	;# 
   339  011D                     	;# 
   340  011D                     	;# 
   341  018C                     	;# 
   342  0191                     	;# 
   343  0191                     	;# 
   344  0192                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0193                     	;# 
   348  0194                     	;# 
   349  0195                     	;# 
   350  0196                     	;# 
   351  0199                     	;# 
   352  019A                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019C                     	;# 
   358  019C                     	;# 
   359  019D                     	;# 
   360  019E                     	;# 
   361  019F                     	;# 
   362  020C                     	;# 
   363  0211                     	;# 
   364  0211                     	;# 
   365  0212                     	;# 
   366  0212                     	;# 
   367  0213                     	;# 
   368  0213                     	;# 
   369  0214                     	;# 
   370  0214                     	;# 
   371  0215                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0216                     	;# 
   375  0216                     	;# 
   376  0217                     	;# 
   377  0217                     	;# 
   378  0291                     	;# 
   379  0291                     	;# 
   380  0292                     	;# 
   381  0293                     	;# 
   382  0294                     	;# 
   383  0295                     	;# 
   384  0295                     	;# 
   385  0296                     	;# 
   386  0391                     	;# 
   387  0392                     	;# 
   388  0393                     	;# 
   389  039A                     	;# 
   390  039C                     	;# 
   391  039D                     	;# 
   392  039E                     	;# 
   393  039F                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001E                     	;# 
   430  001F                     	;# 
   431  008C                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011D                     	;# 
   457  018C                     	;# 
   458  0191                     	;# 
   459  0191                     	;# 
   460  0192                     	;# 
   461  0193                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0194                     	;# 
   465  0195                     	;# 
   466  0196                     	;# 
   467  0199                     	;# 
   468  019A                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020C                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  0212                     	;# 
   482  0212                     	;# 
   483  0213                     	;# 
   484  0213                     	;# 
   485  0214                     	;# 
   486  0214                     	;# 
   487  0215                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0217                     	;# 
   494  0291                     	;# 
   495  0291                     	;# 
   496  0292                     	;# 
   497  0293                     	;# 
   498  0294                     	;# 
   499  0295                     	;# 
   500  0295                     	;# 
   501  0296                     	;# 
   502  0391                     	;# 
   503  0392                     	;# 
   504  0393                     	;# 
   505  039A                     	;# 
   506  039C                     	;# 
   507  039D                     	;# 
   508  039E                     	;# 
   509  039F                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521                           
   522                           	psect	stringtext1
   523  007A                     __pstringtext1:	
   524  007A                     _baudtable:	
   525  007A  340A               	retlw	10
   526  007B  341A               	retlw	26
   527  007C  3404               	retlw	4
   528  007D  340D               	retlw	13
   529  007E  3440               	retlw	64
   530  007F  3403               	retlw	3
   531  0080  34CF               	retlw	207
   532  0081  3400               	retlw	0
   533  0082  34BF               	retlw	191
   534  0083  3400               	retlw	0
   535  0084  3467               	retlw	103
   536  0085  3400               	retlw	0
   537  0086  3422               	retlw	34
   538  0087  3400               	retlw	0
   539  0088  3410               	retlw	16
   540  0089  3400               	retlw	0
   541  008A                     __end_of_baudtable:	
   542  000C                     _PORTA	set	12
   543  0093                     _BCL1IF	set	147
   544  008B                     _SSP1IF	set	139
   545  008C                     _TXIF	set	140
   546  005F                     _GIE	set	95
   547  005E                     _PEIE	set	94
   548  008D                     _RCIF	set	141
   549  008C                     _TRISA	set	140
   550  0493                     _BCL1IE	set	1171
   551  048B                     _SSP1IE	set	1163
   552  048D                     _RCIE	set	1165
   553  011D                     _APFCON	set	285
   554  0199                     _RCREG	set	409
   555  019A                     _TXREG	set	410
   556  019C                     _SPBRGH	set	412
   557  019B                     _SPBRGL	set	411
   558  019D                     _RCSTA	set	413
   559  019E                     _TXSTA	set	414
   560  018C                     _ANSELA	set	396
   561  0CEC                     _CREN	set	3308
   562  0CE9                     _OERR	set	3305
   563  0CEF                     _SPEN	set	3311
   564  0CFB                     _BRG16	set	3323
   565  0214                     _SSPSTATbits	set	532
   566  0211                     _SSPBUF	set	529
   567  0216                     _SSPCON2	set	534
   568  0213                     _SSPMSK	set	531
   569  0216                     _SSPCON2bits	set	534
   570  0215                     _SSPCON1bits	set	533
   571  0212                     _SSPADD	set	530
   572  0214                     _SSPSTAT	set	532
   573  0215                     _SSPCON1	set	533
   574  008A                     STR_1:	
   575  008A  3448               	retlw	72	;'H'
   576  008B  3465               	retlw	101	;'e'
   577  008C  346C               	retlw	108	;'l'
   578  008D  346C               	retlw	108	;'l'
   579  008E  346F               	retlw	111	;'o'
   580  008F  3420               	retlw	32	;' '
   581  0090  3457               	retlw	87	;'W'
   582  0091  346F               	retlw	111	;'o'
   583  0092  3472               	retlw	114	;'r'
   584  0093  346C               	retlw	108	;'l'
   585  0094  3464               	retlw	100	;'d'
   586  0095  340A               	retlw	10
   587  0096  3400               	retlw	0
   588                           
   589                           	psect	stringtext2
   590  0000                     __pstringtext2:	
   591                           
   592                           ; #config settings
   593  0000                     
   594                           	psect	cinit
   595  0010                     start_initialization:	
   596  0010                     __initialization:	
   597                           
   598                           ; Clear objects allocated to COMMON
   599  0010  01F8               	clrf	__pbssCOMMON& (0+127)
   600  0011  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   601                           
   602                           ; Clear objects allocated to BANK0
   603  0012  3020               	movlw	low __pbssBANK0
   604  0013  0084               	movwf	4
   605  0014  3000               	movlw	high __pbssBANK0
   606  0015  0085               	movwf	5
   607  0016  3033               	movlw	51
   608  0017  20E1               	fcall	clear_ram0
   609  0018                     end_of_initialization:	
   610                           ;End of C runtime variable initialization code
   611                           
   612  0018                     __end_of__initialization:	
   613  0018  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   614  0019  0020               	movlb	0
   615  001A  28B2               	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	bssCOMMON
   618  0078                     __pbssCOMMON:	
   619  0078                     _UART_Buffer_outptr:	
   620  0078                     	ds	1
   621  0079                     _UART_Buffer_inptr:	
   622  0079                     	ds	1
   623                           
   624                           	psect	bssBANK0
   625  0020                     __pbssBANK0:	
   626  0020                     _UART_Buffer:	
   627  0020                     	ds	32
   628  0040                     _I2C1_Config:	
   629  0040                     	ds	19
   630                           
   631                           	psect	clrtext
   632  00E1                     clear_ram0:	
   633                           ;	Called with FSR0 containing the base address, and
   634                           ;	WREG with the size to clear
   635                           
   636  00E1  0064               	clrwdt	;clear the watchdog before getting into this loop
   637  00E2                     clrloop0:	
   638  00E2  0180               	clrf	0	;clear RAM location pointed to by FSR
   639  00E3  3101               	addfsr 0,1
   640  00E4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   641  00E5  28E2               	goto	clrloop0	;have we reached the end yet?
   642  00E6  3400               	retlw	0	;all done for this memory range, return
   643                           
   644                           	psect	cstackCOMMON
   645  0070                     __pcstackCOMMON:	
   646  0070                     ?_Basic_Init:	
   647  0070                     ?_UART_InitPort:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_UART_Interrupt:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_UART_Interrupt:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_Handle:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_UART_Transmit:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_putch:	
   666                           ; 1 bytes @ 0x0
   667                           
   668                           
   669                           ; 1 bytes @ 0x0
   670  0070                     	ds	1
   671  0071                     UART_Interrupt@dt:	
   672                           
   673                           ; 1 bytes @ 0x1
   674  0071                     	ds	1
   675  0072                     UART_Interrupt@x:	
   676                           
   677                           ; 1 bytes @ 0x2
   678  0072                     	ds	1
   679  0073                     ??_Handle:	
   680                           
   681                           ; 1 bytes @ 0x3
   682  0073                     	ds	1
   683  0074                     ??_Basic_Init:	
   684  0074                     ??_UART_InitPort:	
   685                           ; 1 bytes @ 0x4
   686                           
   687  0074                     ??_UART_Transmit:	
   688                           ; 1 bytes @ 0x4
   689                           
   690  0074                     UART_Transmit@dt:	
   691                           ; 1 bytes @ 0x4
   692                           
   693                           
   694                           ; 1 bytes @ 0x4
   695  0074                     	ds	1
   696  0075                     ?_UART_Init:	
   697  0075                     ??_putch:	
   698                           ; 1 bytes @ 0x5
   699                           
   700  0075                     putch@c:	
   701                           ; 1 bytes @ 0x5
   702                           
   703  0075                     UART_Init@UART_Init_PORT:	
   704                           ; 1 bytes @ 0x5
   705                           
   706                           
   707                           ; 2 bytes @ 0x5
   708  0075                     	ds	1
   709  0076                     ?_printf:	
   710  0076                     printf@f:	
   711                           ; 2 bytes @ 0x6
   712                           
   713                           
   714                           ; 2 bytes @ 0x6
   715  0076                     	ds	1
   716  0077                     UART_Init@brg:	
   717                           
   718                           ; 1 bytes @ 0x7
   719  0077                     	ds	1
   720                           
   721                           	psect	cstackBANK0
   722  0053                     __pcstackBANK0:	
   723  0053                     ??_UART_Init:	
   724  0053                     ??_printf:	
   725                           ; 1 bytes @ 0x0
   726                           
   727                           
   728                           ; 1 bytes @ 0x0
   729  0053                     	ds	3
   730  0056                     printf@ap:	
   731                           
   732                           ; 1 bytes @ 0x3
   733  0056                     	ds	1
   734  0057                     printf@c:	
   735                           
   736                           ; 1 bytes @ 0x4
   737  0057                     	ds	1
   738  0058                     ??_main:	
   739                           
   740                           ; 1 bytes @ 0x5
   741  0058                     	ds	1
   742                           
   743                           	psect	maintext
   744  00B2                     __pmaintext:	
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 9 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : B1F/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1
   764 ;;      Params:         0       0       0
   765 ;;      Locals:         0       0       0
   766 ;;      Temps:          0       1       0
   767 ;;      Totals:         0       1       0
   768 ;;Total ram usage:        1 bytes
   769 ;; Hardware stack levels required when called:    5
   770 ;; This function calls:
   771 ;;		_Basic_Init
   772 ;;		_UART_Init
   773 ;;		_printf
   774 ;; This function is called by:
   775 ;;		Startup code after reset
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _main
   781  00B2                     _main:	
   782                           
   783                           ;main.c: 11: Basic_Init();
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   787  00B2  20D0               	fcall	_Basic_Init
   788                           
   789                           ;main.c: 12: UART_Init(UART_InitPort,BAUD_9600);
   790  00B3  30C3               	movlw	low _UART_InitPort
   791  00B4  00F5               	movwf	UART_Init@UART_Init_PORT
   792  00B5  3000               	movlw	high _UART_InitPort
   793  00B6  00F6               	movwf	UART_Init@UART_Init_PORT+1
   794  00B7  3003               	movlw	3
   795  00B8  0020               	movlb	0	; select bank0
   796  00B9  00D8               	movwf	??_main
   797  00BA  0858               	movf	??_main,w
   798  00BB  00F7               	movwf	UART_Init@brg
   799  00BC  201B               	fcall	_UART_Init
   800  00BD                     l1094:	
   801                           ;main.c: 15: while(1)
   802                           
   803                           
   804                           ;main.c: 16: {
   805                           ;main.c: 17: printf("Hello World\n");
   806  00BD  308A               	movlw	low (STR_1| (0+32768))
   807  00BE  00F6               	movwf	printf@f
   808  00BF  3080               	movlw	high (STR_1| (0+32768))
   809  00C0  00F7               	movwf	printf@f+1
   810  00C1  2097               	fcall	_printf
   811  00C2  28BD               	goto	l1094
   812  00C3                     __end_of_main:	
   813                           
   814                           	psect	text1
   815  0097                     __ptext1:	
   816 ;; *************** function _printf *****************
   817 ;; Defined at:
   818 ;;		line 464 in file "/opt/microchip/xc8/v1.43/sources/common/doprnt.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  f               2    6[COMMON] PTR const unsigned char 
   821 ;;		 -> STR_1(13), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  tmpval          4    0        struct .
   824 ;;  cp              2    0        PTR const unsigned char 
   825 ;;  len             2    0        unsigned int 
   826 ;;  val             2    0        unsigned int 
   827 ;;  c               1    4[BANK0 ] char 
   828 ;;  ap              1    3[BANK0 ] PTR void [1]
   829 ;;		 -> ?_printf(2), 
   830 ;;  flag            1    0        unsigned char 
   831 ;;  prec            1    0        char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2    6[COMMON] int 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1
   841 ;;      Params:         2       0       0
   842 ;;      Locals:         0       2       0
   843 ;;      Temps:          0       3       0
   844 ;;      Totals:         2       5       0
   845 ;;Total ram usage:        7 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    4
   848 ;; This function calls:
   849 ;;		_putch
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _printf
   857  0097                     _printf:	
   858                           
   859                           ;doprnt.c: 466: va_list ap;
   860                           ;doprnt.c: 499: signed char c;
   861                           ;doprnt.c: 506: signed char prec;
   862                           ;doprnt.c: 508: unsigned char flag;
   863                           ;doprnt.c: 523: union {
   864                           ;doprnt.c: 524: unsigned long vd;
   865                           ;doprnt.c: 525: double integ;
   866                           ;doprnt.c: 526: } tmpval;
   867                           ;doprnt.c: 528: unsigned int val;
   868                           ;doprnt.c: 529: unsigned len;
   869                           ;doprnt.c: 530: const char * cp;
   870                           ;doprnt.c: 533: *ap = __va_start();
   871                           
   872                           ;incstack = 0
   873                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   874  0097  3078               	movlw	(low ((?_printf| 0+2)))& (0+255)
   875  0098  0020               	movlb	0	; select bank0
   876  0099  00D3               	movwf	??_printf
   877  009A  0853               	movf	??_printf,w
   878  009B  00D6               	movwf	printf@ap
   879  009C                     l1088:	
   880                           ;doprnt.c: 543: }
   881                           ;doprnt.c: 1422: {
   882                           
   883                           ;doprnt.c: 542: continue;
   884                           
   885                           ;doprnt.c: 536: while(c = *f++) {
   886                           
   887  009C  0877               	movf	printf@f+1,w
   888  009D  0020               	movlb	0	; select bank0
   889  009E  00D4               	movwf	??_printf+1
   890  009F  0876               	movf	printf@f,w
   891  00A0  00D3               	movwf	??_printf
   892  00A1  0AF6               	incf	printf@f,f
   893  00A2  1903               	skipnz
   894  00A3  0AF7               	incf	printf@f+1,f
   895  00A4  0853               	movf	??_printf,w
   896  00A5  0084               	movwf	4
   897  00A6  0854               	movf	??_printf+1,w
   898  00A7  0085               	movwf	5
   899  00A8  0800               	movf	0,w	;code access
   900  00A9  00D5               	movwf	??_printf+2
   901  00AA  0855               	movf	??_printf+2,w
   902  00AB  00D7               	movwf	printf@c
   903  00AC  0857               	movf	printf@c,w
   904  00AD  1903               	btfsc	3,2
   905  00AE  0008               	return
   906                           
   907                           ;doprnt.c: 540: {
   908                           ;doprnt.c: 541: (putch(c) );
   909  00AF  0857               	movf	printf@c,w
   910  00B0  20E7               	fcall	_putch
   911  00B1  289C               	goto	l1088
   912  00B2                     __end_of_printf:	
   913                           ;doprnt.c: 1469: }
   914                           ;doprnt.c: 1533: }
   915                           ;doprnt.c: 1540: return 0;
   916                           ;	Return value of _printf is never used
   917                           
   918                           
   919                           	psect	text2
   920  00E7                     __ptext2:	
   921 ;; *************** function _putch *****************
   922 ;; Defined at:
   923 ;;		line 76 in file "PIC_UART.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  c               1    wreg     unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  c               1    5[COMMON] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1
   937 ;;      Params:         0       0       0
   938 ;;      Locals:         1       0       0
   939 ;;      Temps:          0       0       0
   940 ;;      Totals:         1       0       0
   941 ;;Total ram usage:        1 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    3
   944 ;; This function calls:
   945 ;;		_UART_Transmit
   946 ;; This function is called by:
   947 ;;		_printf
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _putch
   953  00E7                     _putch:	
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
   957                           ;putch@c stored from wreg
   958  00E7  00F5               	movwf	putch@c
   959                           
   960                           ;PIC_UART.c: 78: UART_Transmit(c);
   961  00E8  0875               	movf	putch@c,w
   962  00E9  20D9               	fcall	_UART_Transmit
   963  00EA  0008               	return
   964  00EB                     __end_of_putch:	
   965                           
   966                           	psect	text3
   967  00D9                     __ptext3:	
   968 ;; *************** function _UART_Transmit *****************
   969 ;; Defined at:
   970 ;;		line 70 in file "PIC_UART.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  dt              1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  dt              1    4[COMMON] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1
   984 ;;      Params:         0       0       0
   985 ;;      Locals:         1       0       0
   986 ;;      Temps:          0       0       0
   987 ;;      Totals:         1       0       0
   988 ;;Total ram usage:        1 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    2
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_putch
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _UART_Transmit
  1000  00D9                     _UART_Transmit:	
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _UART_Transmit: [wreg]
  1004                           ;UART_Transmit@dt stored from wreg
  1005  00D9  00F4               	movwf	UART_Transmit@dt
  1006  00DA                     l91:	
  1007                           ;PIC_UART.c: 72: while (TXIF == 0);
  1008                           
  1009  00DA  0020               	movlb	0	; select bank0
  1010  00DB  1E11               	btfss	17,4	;volatile
  1011  00DC  28DA               	goto	l91
  1012                           
  1013                           ;PIC_UART.c: 73: TXREG = dt;
  1014  00DD  0874               	movf	UART_Transmit@dt,w
  1015  00DE  0023               	movlb	3	; select bank3
  1016  00DF  009A               	movwf	26	;volatile
  1017  00E0  0008               	return
  1018  00E1                     __end_of_UART_Transmit:	
  1019                           
  1020                           	psect	text4
  1021  001B                     __ptext4:	
  1022 ;; *************** function _UART_Init *****************
  1023 ;; Defined at:
  1024 ;;		line 37 in file "PIC_UART.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  UART_Init_PO    2    5[COMMON] PTR FTN()void 
  1027 ;;		 -> UART_InitPort(1), 
  1028 ;;  brg             1    7[COMMON] enum E2280
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1
  1040 ;;      Params:         3       0       0
  1041 ;;      Locals:         0       0       0
  1042 ;;      Temps:          0       4       0
  1043 ;;      Totals:         3       4       0
  1044 ;;Total ram usage:        7 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    3
  1047 ;; This function calls:
  1048 ;;		_UART_InitPort
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _UART_Init
  1056  001B                     _UART_Init:	
  1057                           
  1058                           ;PIC_UART.c: 39: UART_Init_PORT();
  1059                           
  1060                           ;incstack = 0
  1061                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1062  001B  0876               	movf	UART_Init@UART_Init_PORT+1,w
  1063  001C  008A               	movwf	10
  1064  001D  0875               	movf	UART_Init@UART_Init_PORT,w
  1065  001E  000A               	callw
  1066  001F  3180               	pagesel	$
  1067                           
  1068                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1069  0020  3020               	movlw	32
  1070  0021  0023               	movlb	3	; select bank3
  1071  0022  009E               	movwf	30	;volatile
  1072                           
  1073                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1074  0023  3010               	movlw	16
  1075  0024  009D               	movwf	29	;volatile
  1076                           
  1077                           ;PIC_UART.c: 44: BRG16 = 1;
  1078  0025  159F               	bsf	31,3	;volatile
  1079                           
  1080                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1081  0026  0877               	movf	UART_Init@brg,w
  1082  0027  0020               	movlb	0	; select bank0
  1083  0028  00D3               	movwf	??_UART_Init
  1084  0029  01D4               	clrf	??_UART_Init+1
  1085  002A  35D3               	lslf	??_UART_Init,f
  1086  002B  0DD4               	rlf	??_UART_Init+1,f
  1087  002C  307A               	movlw	low (_baudtable| (0+32768))
  1088  002D  0753               	addwf	??_UART_Init,w
  1089  002E  0084               	movwf	4
  1090  002F  3080               	movlw	high (_baudtable| (0+32768))
  1091  0030  3D54               	addwfc	??_UART_Init+1,w
  1092  0031  0085               	movwf	5
  1093  0032  0800               	movf	0,w	;code access
  1094  0033  0023               	movlb	3	; select bank3
  1095  0034  009B               	movwf	27	;volatile
  1096                           
  1097                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1098  0035  0877               	movf	UART_Init@brg,w
  1099  0036  0020               	movlb	0	; select bank0
  1100  0037  00D3               	movwf	??_UART_Init
  1101  0038  01D4               	clrf	??_UART_Init+1
  1102  0039  35D3               	lslf	??_UART_Init,f
  1103  003A  0DD4               	rlf	??_UART_Init+1,f
  1104  003B  307A               	movlw	low (_baudtable| (0+32768))
  1105  003C  0753               	addwf	??_UART_Init,w
  1106  003D  0084               	movwf	4
  1107  003E  3080               	movlw	high (_baudtable| (0+32768))
  1108  003F  3D54               	addwfc	??_UART_Init+1,w
  1109  0040  0085               	movwf	5
  1110  0041  3F00               	moviw [0]fsr0
  1111  0042  00D5               	movwf	??_UART_Init+2
  1112  0043  3F01               	moviw [1]fsr0
  1113  0044  00D6               	movwf	??_UART_Init+3
  1114  0045  0856               	movf	??_UART_Init+3,w
  1115  0046  0023               	movlb	3	; select bank3
  1116  0047  009C               	movwf	28	;volatile
  1117                           
  1118                           ;PIC_UART.c: 48: RCIF = 0;
  1119  0048  0020               	movlb	0	; select bank0
  1120  0049  1291               	bcf	17,5	;volatile
  1121                           
  1122                           ;PIC_UART.c: 49: RCIE = 1;
  1123  004A  0021               	movlb	1	; select bank1
  1124  004B  1691               	bsf	17,5	;volatile
  1125                           
  1126                           ;PIC_UART.c: 50: PEIE = 1;
  1127  004C  170B               	bsf	11,6	;volatile
  1128                           
  1129                           ;PIC_UART.c: 51: GIE = 1;
  1130  004D  178B               	bsf	11,7	;volatile
  1131                           
  1132                           ;PIC_UART.c: 53: SPEN = 1;
  1133  004E  0023               	movlb	3	; select bank3
  1134  004F  179D               	bsf	29,7	;volatile
  1135                           
  1136                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1137  0050  01F9               	clrf	_UART_Buffer_inptr
  1138                           
  1139                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1140  0051  01F8               	clrf	_UART_Buffer_outptr
  1141  0052  0008               	return
  1142  0053                     __end_of_UART_Init:	
  1143                           
  1144                           	psect	text5
  1145  00C3                     __ptext5:	
  1146 ;; *************** function _UART_InitPort *****************
  1147 ;; Defined at:
  1148 ;;		line 38 in file "main.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1
  1162 ;;      Params:         0       0       0
  1163 ;;      Locals:         0       0       0
  1164 ;;      Temps:          1       0       0
  1165 ;;      Totals:         1       0       0
  1166 ;;Total ram usage:        1 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    2
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;;		_UART_Init
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _UART_InitPort
  1179  00C3                     _UART_InitPort:	
  1180                           
  1181                           ;main.c: 40: TRISA &= ~(1<<4);
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  1185  00C3  30EF               	movlw	239
  1186  00C4  00F4               	movwf	??_UART_InitPort
  1187  00C5  0874               	movf	??_UART_InitPort,w
  1188  00C6  0021               	movlb	1	; select bank1
  1189  00C7  058C               	andwf	12,f	;volatile
  1190                           
  1191                           ;main.c: 41: APFCON |= (1<<4);
  1192  00C8  0022               	movlb	2	; select bank2
  1193  00C9  161D               	bsf	29,4	;volatile
  1194                           
  1195                           ;main.c: 42: ANSELA &= ~(1<<4);
  1196  00CA  30EF               	movlw	239
  1197  00CB  00F4               	movwf	??_UART_InitPort
  1198  00CC  0874               	movf	??_UART_InitPort,w
  1199  00CD  0023               	movlb	3	; select bank3
  1200  00CE  058C               	andwf	12,f	;volatile
  1201  00CF  0008               	return
  1202  00D0                     __end_of_UART_InitPort:	
  1203                           
  1204                           	psect	text6
  1205  00D0                     __ptext6:	
  1206 ;; *************** function _Basic_Init *****************
  1207 ;; Defined at:
  1208 ;;		line 27 in file "main.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		status,2
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1
  1222 ;;      Params:         0       0       0
  1223 ;;      Locals:         0       0       0
  1224 ;;      Temps:          0       0       0
  1225 ;;      Totals:         0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    2
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _Basic_Init
  1238  00D0                     _Basic_Init:	
  1239                           
  1240                           ;main.c: 29: TRISA = 0x00;
  1241                           
  1242                           ;incstack = 0
  1243                           ; Regs used in _Basic_Init: [status,2]
  1244  00D0  0021               	movlb	1	; select bank1
  1245  00D1  018C               	clrf	12	;volatile
  1246                           
  1247                           ;main.c: 31: ANSELA = 0x00;
  1248  00D2  0023               	movlb	3	; select bank3
  1249  00D3  018C               	clrf	12	;volatile
  1250                           
  1251                           ;main.c: 33: APFCON = 0x00;
  1252  00D4  0022               	movlb	2	; select bank2
  1253  00D5  019D               	clrf	29	;volatile
  1254                           
  1255                           ;main.c: 35: PORTA = 0x00;
  1256  00D6  0020               	movlb	0	; select bank0
  1257  00D7  018C               	clrf	12	;volatile
  1258  00D8  0008               	return
  1259  00D9                     __end_of_Basic_Init:	
  1260                           
  1261                           	psect	intentry
  1262  0004                     __pintentry:	
  1263 ;; *************** function _Handle *****************
  1264 ;; Defined at:
  1265 ;;		line 21 in file "main.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1
  1279 ;;      Params:         0       0       0
  1280 ;;      Locals:         0       0       0
  1281 ;;      Temps:          1       0       0
  1282 ;;      Totals:         1       0       0
  1283 ;;Total ram usage:        1 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    1
  1286 ;; This function calls:
  1287 ;;		_UART_Interrupt
  1288 ;; This function is called by:
  1289 ;;		Interrupt level 1
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293  0004                     _Handle:	
  1294                           
  1295                           ;incstack = 0
  1296  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1297                           
  1298                           ; Regs used in _Handle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1299  0005  3180               	pagesel	$
  1300  0006  0020               	movlb	0	; select bank0
  1301  0007  087F               	movf	127,w
  1302  0008  00F3               	movwf	??_Handle
  1303                           
  1304                           ;main.c: 23: UART_Interrupt();
  1305  0009  2053               	fcall	_UART_Interrupt
  1306  000A  0873               	movf	??_Handle,w
  1307  000B  0020               	movlb	0	; select bank0
  1308  000C  00FF               	movwf	127
  1309  000D  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1310  000E  0009               	retfie
  1311  000F                     __end_of_Handle:	
  1312                           
  1313                           	psect	text8
  1314  0053                     __ptext8:	
  1315 ;; *************** function _UART_Interrupt *****************
  1316 ;; Defined at:
  1317 ;;		line 107 in file "PIC_UART.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  x               1    2[COMMON] unsigned char 
  1322 ;;  dt              1    1[COMMON] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1
  1332 ;;      Params:         0       0       0
  1333 ;;      Locals:         2       0       0
  1334 ;;      Temps:          1       0       0
  1335 ;;      Totals:         3       0       0
  1336 ;;Total ram usage:        3 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_Handle
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _UART_Interrupt
  1347  0053                     _UART_Interrupt:	
  1348                           
  1349                           ;PIC_UART.c: 109: uint8_t x;
  1350                           ;PIC_UART.c: 110: uint8_t dt;
  1351                           ;PIC_UART.c: 112: if (RCIF == 1)
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  1355  0053  0020               	movlb	0	; select bank0
  1356  0054  1E91               	btfss	17,5	;volatile
  1357  0055  0008               	return
  1358                           
  1359                           ;PIC_UART.c: 113: {
  1360                           ;PIC_UART.c: 114: dt = RCREG;
  1361  0056  0023               	movlb	3	; select bank3
  1362  0057  0819               	movf	25,w	;volatile
  1363  0058  00F0               	movwf	??_UART_Interrupt
  1364  0059  0870               	movf	??_UART_Interrupt,w
  1365  005A  00F1               	movwf	UART_Interrupt@dt
  1366                           
  1367                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 32;
  1368  005B  0878               	movf	_UART_Buffer_outptr,w
  1369  005C  3E01               	addlw	1
  1370  005D  391F               	andlw	31
  1371  005E  00F0               	movwf	??_UART_Interrupt
  1372  005F  0870               	movf	??_UART_Interrupt,w
  1373  0060  00F2               	movwf	UART_Interrupt@x
  1374                           
  1375                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  1376  0061  0872               	movf	UART_Interrupt@x,w
  1377  0062  0679               	xorwf	_UART_Buffer_inptr,w
  1378  0063  1903               	skipnz
  1379  0064  2871               	goto	i1l802
  1380                           
  1381                           ;PIC_UART.c: 117: {
  1382                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  1383  0065  0871               	movf	UART_Interrupt@dt,w
  1384  0066  00F0               	movwf	??_UART_Interrupt
  1385  0067  0878               	movf	_UART_Buffer_outptr,w
  1386  0068  3E20               	addlw	(low (_UART_Buffer| 0))& (0+255)
  1387  0069  0086               	movwf	6
  1388  006A  0187               	clrf	7
  1389  006B  0870               	movf	??_UART_Interrupt,w
  1390  006C  0081               	movwf	1
  1391                           
  1392                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  1393  006D  0872               	movf	UART_Interrupt@x,w
  1394  006E  00F0               	movwf	??_UART_Interrupt
  1395  006F  0870               	movf	??_UART_Interrupt,w
  1396  0070  00F8               	movwf	_UART_Buffer_outptr
  1397  0071                     i1l802:	
  1398                           
  1399                           ;PIC_UART.c: 120: }
  1400                           ;PIC_UART.c: 122: if (OERR == 1)
  1401  0071  1C9D               	btfss	29,1	;volatile
  1402  0072  2877               	goto	i1l112
  1403                           
  1404                           ;PIC_UART.c: 123: {
  1405                           ;PIC_UART.c: 124: CREN = 0;
  1406  0073  121D               	bcf	29,4	;volatile
  1407  0074                     i1l113:	
  1408                           ;PIC_UART.c: 125: while (OERR);
  1409                           
  1410  0074  189D               	btfsc	29,1	;volatile
  1411  0075  2874               	goto	i1l113
  1412                           
  1413                           ;PIC_UART.c: 126: CREN = 1;
  1414  0076  161D               	bsf	29,4	;volatile
  1415  0077                     i1l112:	
  1416                           
  1417                           ;PIC_UART.c: 127: }
  1418                           ;PIC_UART.c: 128: RCIF = 0;
  1419  0077  0020               	movlb	0	; select bank0
  1420  0078  1291               	bcf	17,5	;volatile
  1421  0079  0008               	return
  1422  007A                     __end_of_UART_Interrupt:	
  1423  007E                     btemp	set	126	;btemp
  1424  007E                     int$flags	set	126
  1425  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    16
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      6      57
    BANK1            32      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    S120$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S120$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _main->_printf
    _printf->_putch
    _putch->_UART_Transmit
    _UART_Init->_UART_InitPort

Critical Paths under _Handle in COMMON

    _Handle->_UART_Interrupt

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _Handle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     349
                                              5 BANK0      1     1      0
                         _Basic_Init
                          _UART_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     177
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              5 COMMON     1     1      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (3) _UART_Transmit                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     172
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Handle                                               1     1      0      45
                                              3 COMMON     1     1      0
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (5) _UART_Interrupt                                       3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _UART_Init
     _UART_InitPort *
   _printf
     _putch
       _UART_Transmit

 _Handle (ROOT)
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      43       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      43       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Dec 20 07:00:09 2017

            __CFG_CP$OFF 0000              _SSPSTATbits 0214                       l91 00DA  
                    _GIE 005F             __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000  
                    wreg 0009               _Basic_Init 00D0             __CFG_LVP$OFF 0000  
                   l1094 00BD                     l1088 009C                     STR_1 008A  
                   _CREN 0CEC                     _PEIE 005E                     _RCIE 048D  
                   _RCIF 008D                     _OERR 0CE9                     _SPEN 0CEF  
                   _TXIF 008C             __CFG_WRT$OFF 0000                     _main 00B2  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 000F            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000            __CFG_PLLEN$ON 0000                    ?_main 0070  
                  _BRG16 0CFB            __CFG_WDTE$OFF 0000                    i1l112 0077  
                  i1l113 0074                    i1l802 0071                    _RCREG 0199  
                  _RCSTA 019D                    _PORTA 000C                    _TRISA 008C  
                  _TXREG 019A                    _TXSTA 019E           __CFG_FCMEN$OFF 0000  
     __size_of_UART_Init 0038        _UART_Buffer_inptr 0079                    _putch 00E7  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0010             __end_of_main 00C3  
                 ??_main 0058              ?_Basic_Init 0070                   _BCL1IE 0493  
                 _BCL1IF 0093                   _APFCON 011D                   _ANSELA 018C  
                 ?_putch 0070                   _SPBRGH 019C                   _SPBRGL 019B  
                 _SSP1IE 048B                   _SSP1IF 008B                   _SSPADD 0212  
                 _SSPBUF 0211                   _SSPMSK 0213                   _Handle 0004  
         __CFG_PWRTE$OFF 0000        __end_of_UART_Init 0053       _UART_Buffer_outptr 0078  
                 _printf 0097  __size_of_UART_Interrupt 0027    __end_of_UART_InitPort 00D0  
                 putch@c 0075  UART_Init@UART_Init_PORT 0075  __end_of__initialization 0018  
  __end_of_UART_Transmit 00E1           __pcstackCOMMON 0070      __size_of_Basic_Init 0009  
          __end_of_putch 00EB                  ??_putch 0075               __pbssBANK0 0020  
                ?_Handle 0070               __pmaintext 00B2               __pintentry 0004  
                ?_printf 0076                  _SSPCON1 0215                  _SSPCON2 0216  
                _SSPSTAT 0214        __end_of_baudtable 008A          __size_of_Handle 000B  
        __CFG_STVREN$OFF 0000                  __ptext1 0097                  __ptext2 00E7  
                __ptext3 00D9                  __ptext4 001B                  __ptext5 00C3  
                __ptext6 00D0                  __ptext8 0053          __size_of_printf 001B  
         _UART_Interrupt 0053             ??_Basic_Init 0074                  clrloop0 00E2  
   end_of_initialization 0018              _I2C1_Config 0040                  printf@c 0057  
                printf@f 0076       __end_of_Basic_Init 00D9   __end_of_UART_Interrupt 007A  
              _UART_Init 001B         __CFG_FOSC$INTOSC 0000           __end_of_Handle 000F  
       UART_Interrupt@dt 0071          ?_UART_Interrupt 0070               ?_UART_Init 0075  
         __end_of_printf 00B2      start_initialization 0010                 ??_Handle 0073  
 __size_of_UART_InitPort 000D                 ??_printf 0053              __pbssCOMMON 0078  
              ___latbits 0000   __size_of_UART_Transmit 0008            __pcstackBANK0 0053  
              _baudtable 007A              ??_UART_Init 0053            _UART_InitPort 00C3  
         __size_of_putch 0004                clear_ram0 00E1            _UART_Transmit 00D9  
         ?_UART_InitPort 0070          UART_Interrupt@x 0072           ?_UART_Transmit 0070  
       ??_UART_Interrupt 0070             UART_Init@brg 0077            __size_of_main 0011  
               int$flags 007E          ??_UART_InitPort 0074                 intlevel1 0000  
        ??_UART_Transmit 0074          UART_Transmit@dt 0074        __CFG_CLKOUTEN$OFF 0000  
            _UART_Buffer 0020                 printf@ap 0056            __pstringtext1 007A  
          __pstringtext2 0000              _SSPCON1bits 0215              _SSPCON2bits 0216  
