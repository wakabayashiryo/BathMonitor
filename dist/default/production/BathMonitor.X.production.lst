

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Jan 14 14:05:54 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.43
    33                           ; Generated 25/07/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC12F1822 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009B                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  010C                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011A                     	;# 
   115  011B                     	;# 
   116  011D                     	;# 
   117  011D                     	;# 
   118  018C                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0194                     	;# 
   126  0195                     	;# 
   127  0196                     	;# 
   128  0199                     	;# 
   129  019A                     	;# 
   130  019B                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019C                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  0211                     	;# 
   141  0211                     	;# 
   142  0212                     	;# 
   143  0212                     	;# 
   144  0213                     	;# 
   145  0213                     	;# 
   146  0214                     	;# 
   147  0214                     	;# 
   148  0215                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0216                     	;# 
   152  0216                     	;# 
   153  0217                     	;# 
   154  0217                     	;# 
   155  0291                     	;# 
   156  0291                     	;# 
   157  0292                     	;# 
   158  0293                     	;# 
   159  0294                     	;# 
   160  0295                     	;# 
   161  0295                     	;# 
   162  0296                     	;# 
   163  0391                     	;# 
   164  0392                     	;# 
   165  0393                     	;# 
   166  039A                     	;# 
   167  039C                     	;# 
   168  039D                     	;# 
   169  039E                     	;# 
   170  039F                     	;# 
   171  0FE4                     	;# 
   172  0FE5                     	;# 
   173  0FE6                     	;# 
   174  0FE7                     	;# 
   175  0FE8                     	;# 
   176  0FE9                     	;# 
   177  0FEA                     	;# 
   178  0FEB                     	;# 
   179  0FED                     	;# 
   180  0FEE                     	;# 
   181  0FEF                     	;# 
   182  0000                     	;# 
   183  0001                     	;# 
   184  0002                     	;# 
   185  0003                     	;# 
   186  0004                     	;# 
   187  0005                     	;# 
   188  0006                     	;# 
   189  0007                     	;# 
   190  0008                     	;# 
   191  0009                     	;# 
   192  000A                     	;# 
   193  000B                     	;# 
   194  000C                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  008C                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  010C                     	;# 
   223  0111                     	;# 
   224  0112                     	;# 
   225  0115                     	;# 
   226  0116                     	;# 
   227  0117                     	;# 
   228  0118                     	;# 
   229  0119                     	;# 
   230  011A                     	;# 
   231  011B                     	;# 
   232  011D                     	;# 
   233  011D                     	;# 
   234  018C                     	;# 
   235  0191                     	;# 
   236  0191                     	;# 
   237  0192                     	;# 
   238  0193                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0194                     	;# 
   242  0195                     	;# 
   243  0196                     	;# 
   244  0199                     	;# 
   245  019A                     	;# 
   246  019B                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019C                     	;# 
   251  019C                     	;# 
   252  019D                     	;# 
   253  019E                     	;# 
   254  019F                     	;# 
   255  020C                     	;# 
   256  0211                     	;# 
   257  0211                     	;# 
   258  0212                     	;# 
   259  0212                     	;# 
   260  0213                     	;# 
   261  0213                     	;# 
   262  0214                     	;# 
   263  0214                     	;# 
   264  0215                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0216                     	;# 
   268  0216                     	;# 
   269  0217                     	;# 
   270  0217                     	;# 
   271  0291                     	;# 
   272  0291                     	;# 
   273  0292                     	;# 
   274  0293                     	;# 
   275  0294                     	;# 
   276  0295                     	;# 
   277  0295                     	;# 
   278  0296                     	;# 
   279  0391                     	;# 
   280  0392                     	;# 
   281  0393                     	;# 
   282  039A                     	;# 
   283  039C                     	;# 
   284  039D                     	;# 
   285  039E                     	;# 
   286  039F                     	;# 
   287  0FE4                     	;# 
   288  0FE5                     	;# 
   289  0FE6                     	;# 
   290  0FE7                     	;# 
   291  0FE8                     	;# 
   292  0FE9                     	;# 
   293  0FEA                     	;# 
   294  0FEB                     	;# 
   295  0FED                     	;# 
   296  0FEE                     	;# 
   297  0FEF                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  008C                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0095                     	;# 
   328  0096                     	;# 
   329  0097                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  010C                     	;# 
   339  0111                     	;# 
   340  0112                     	;# 
   341  0115                     	;# 
   342  0116                     	;# 
   343  0117                     	;# 
   344  0118                     	;# 
   345  0119                     	;# 
   346  011A                     	;# 
   347  011B                     	;# 
   348  011D                     	;# 
   349  011D                     	;# 
   350  018C                     	;# 
   351  0191                     	;# 
   352  0191                     	;# 
   353  0192                     	;# 
   354  0193                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0194                     	;# 
   358  0195                     	;# 
   359  0196                     	;# 
   360  0199                     	;# 
   361  019A                     	;# 
   362  019B                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019C                     	;# 
   367  019C                     	;# 
   368  019D                     	;# 
   369  019E                     	;# 
   370  019F                     	;# 
   371  020C                     	;# 
   372  0211                     	;# 
   373  0211                     	;# 
   374  0212                     	;# 
   375  0212                     	;# 
   376  0213                     	;# 
   377  0213                     	;# 
   378  0214                     	;# 
   379  0214                     	;# 
   380  0215                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0216                     	;# 
   384  0216                     	;# 
   385  0217                     	;# 
   386  0217                     	;# 
   387  0291                     	;# 
   388  0291                     	;# 
   389  0292                     	;# 
   390  0293                     	;# 
   391  0294                     	;# 
   392  0295                     	;# 
   393  0295                     	;# 
   394  0296                     	;# 
   395  0391                     	;# 
   396  0392                     	;# 
   397  0393                     	;# 
   398  039A                     	;# 
   399  039C                     	;# 
   400  039D                     	;# 
   401  039E                     	;# 
   402  039F                     	;# 
   403  0FE4                     	;# 
   404  0FE5                     	;# 
   405  0FE6                     	;# 
   406  0FE7                     	;# 
   407  0FE8                     	;# 
   408  0FE9                     	;# 
   409  0FEA                     	;# 
   410  0FEB                     	;# 
   411  0FED                     	;# 
   412  0FEE                     	;# 
   413  0FEF                     	;# 
   414  0000                     	;# 
   415  0001                     	;# 
   416  0002                     	;# 
   417  0003                     	;# 
   418  0004                     	;# 
   419  0005                     	;# 
   420  0006                     	;# 
   421  0007                     	;# 
   422  0008                     	;# 
   423  0009                     	;# 
   424  000A                     	;# 
   425  000B                     	;# 
   426  000C                     	;# 
   427  0011                     	;# 
   428  0012                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  008C                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  010C                     	;# 
   455  0111                     	;# 
   456  0112                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  0191                     	;# 
   468  0191                     	;# 
   469  0192                     	;# 
   470  0193                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0194                     	;# 
   474  0195                     	;# 
   475  0196                     	;# 
   476  0199                     	;# 
   477  019A                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019D                     	;# 
   485  019E                     	;# 
   486  019F                     	;# 
   487  020C                     	;# 
   488  0211                     	;# 
   489  0211                     	;# 
   490  0212                     	;# 
   491  0212                     	;# 
   492  0213                     	;# 
   493  0213                     	;# 
   494  0214                     	;# 
   495  0214                     	;# 
   496  0215                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0216                     	;# 
   501  0217                     	;# 
   502  0217                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0391                     	;# 
   512  0392                     	;# 
   513  0393                     	;# 
   514  039A                     	;# 
   515  039C                     	;# 
   516  039D                     	;# 
   517  039E                     	;# 
   518  039F                     	;# 
   519  0FE4                     	;# 
   520  0FE5                     	;# 
   521  0FE6                     	;# 
   522  0FE7                     	;# 
   523  0FE8                     	;# 
   524  0FE9                     	;# 
   525  0FEA                     	;# 
   526  0FEB                     	;# 
   527  0FED                     	;# 
   528  0FEE                     	;# 
   529  0FEF                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0008                     	;# 
   539  0009                     	;# 
   540  000A                     	;# 
   541  000B                     	;# 
   542  000C                     	;# 
   543  0011                     	;# 
   544  0012                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  001E                     	;# 
   555  001F                     	;# 
   556  008C                     	;# 
   557  0091                     	;# 
   558  0092                     	;# 
   559  0095                     	;# 
   560  0096                     	;# 
   561  0097                     	;# 
   562  0098                     	;# 
   563  0099                     	;# 
   564  009A                     	;# 
   565  009B                     	;# 
   566  009B                     	;# 
   567  009C                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  010C                     	;# 
   571  0111                     	;# 
   572  0112                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  011A                     	;# 
   579  011B                     	;# 
   580  011D                     	;# 
   581  011D                     	;# 
   582  018C                     	;# 
   583  0191                     	;# 
   584  0191                     	;# 
   585  0192                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0194                     	;# 
   590  0195                     	;# 
   591  0196                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019C                     	;# 
   599  019C                     	;# 
   600  019D                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  020C                     	;# 
   604  0211                     	;# 
   605  0211                     	;# 
   606  0212                     	;# 
   607  0212                     	;# 
   608  0213                     	;# 
   609  0213                     	;# 
   610  0214                     	;# 
   611  0214                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0216                     	;# 
   616  0216                     	;# 
   617  0217                     	;# 
   618  0217                     	;# 
   619  0291                     	;# 
   620  0291                     	;# 
   621  0292                     	;# 
   622  0293                     	;# 
   623  0294                     	;# 
   624  0295                     	;# 
   625  0295                     	;# 
   626  0296                     	;# 
   627  0391                     	;# 
   628  0392                     	;# 
   629  0393                     	;# 
   630  039A                     	;# 
   631  039C                     	;# 
   632  039D                     	;# 
   633  039E                     	;# 
   634  039F                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646                           
   647                           	psect	stringtext1
   648  03CC                     __pstringtext1:	
   649  03CC                     _baudtable:	
   650  03CC  340A               	retlw	10
   651  03CD  341A               	retlw	26
   652  03CE  3404               	retlw	4
   653  03CF  340D               	retlw	13
   654  03D0  3440               	retlw	64
   655  03D1  3403               	retlw	3
   656  03D2  34CF               	retlw	207
   657  03D3  3400               	retlw	0
   658  03D4  34BF               	retlw	191
   659  03D5  3400               	retlw	0
   660  03D6  3467               	retlw	103
   661  03D7  3400               	retlw	0
   662  03D8  3422               	retlw	34
   663  03D9  3400               	retlw	0
   664  03DA  3410               	retlw	16
   665  03DB  3400               	retlw	0
   666  03DC                     __end_of_baudtable:	
   667  000C                     _PORTA	set	12
   668  0093                     _BCL1IF	set	147
   669  008B                     _SSP1IF	set	139
   670  008C                     _TXIF	set	140
   671  005F                     _GIE	set	95
   672  005E                     _PEIE	set	94
   673  008D                     _RCIF	set	141
   674  008C                     _TRISA	set	140
   675  0099                     _OSCCON	set	153
   676  0493                     _BCL1IE	set	1171
   677  048B                     _SSP1IE	set	1163
   678  048D                     _RCIE	set	1165
   679  011D                     _APFCON	set	285
   680  0199                     _RCREG	set	409
   681  019A                     _TXREG	set	410
   682  019C                     _SPBRGH	set	412
   683  019B                     _SPBRGL	set	411
   684  019D                     _RCSTA	set	413
   685  019E                     _TXSTA	set	414
   686  018C                     _ANSELA	set	396
   687  0CEC                     _CREN	set	3308
   688  0CE9                     _OERR	set	3305
   689  0CEF                     _SPEN	set	3311
   690  0CFB                     _BRG16	set	3323
   691  0214                     _SSPSTATbits	set	532
   692  0211                     _SSPBUF	set	529
   693  0216                     _SSPCON2	set	534
   694  0213                     _SSPMSK	set	531
   695  0216                     _SSPCON2bits	set	534
   696  0215                     _SSPCON1bits	set	533
   697  0212                     _SSPADD	set	530
   698  0214                     _SSPSTAT	set	532
   699  0215                     _SSPCON1	set	533
   700  020C                     _WPUA	set	524
   701                           
   702                           ; #config settings
   703  0000                     
   704                           	psect	cinit
   705  0011                     start_initialization:	
   706  0011                     __initialization:	
   707                           
   708                           ; Clear objects allocated to COMMON
   709  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   710  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   711                           
   712                           ; Clear objects allocated to BANK0
   713  0013  3053               	movlw	low __pbssBANK0
   714  0014  0084               	movwf	4
   715  0015  3000               	movlw	high __pbssBANK0
   716  0016  0085               	movwf	5
   717  0017  301B               	movlw	27
   718  0018  240C               	fcall	clear_ram0
   719  0019                     end_of_initialization:	
   720                           ;End of C runtime variable initialization code
   721                           
   722  0019                     __end_of__initialization:	
   723  0019  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   724  001A  0020               	movlb	0
   725  001B  281C               	ljmp	_main	;jump to C main() function
   726                           
   727                           	psect	bssCOMMON
   728  0078                     __pbssCOMMON:	
   729  0078                     _UART_Buffer_outptr:	
   730  0078                     	ds	1
   731  0079                     _UART_Buffer_inptr:	
   732  0079                     	ds	1
   733                           
   734                           	psect	bssBANK0
   735  0053                     __pbssBANK0:	
   736  0053                     _UART_Buffer:	
   737  0053                     	ds	8
   738  005B                     _I2C1_Config:	
   739  005B                     	ds	19
   740                           
   741                           	psect	clrtext
   742  040C                     clear_ram0:	
   743                           ;	Called with FSR0 containing the base address, and
   744                           ;	WREG with the size to clear
   745                           
   746  040C  0064               	clrwdt	;clear the watchdog before getting into this loop
   747  040D                     clrloop0:	
   748  040D  0180               	clrf	0	;clear RAM location pointed to by FSR
   749  040E  3101               	addfsr 0,1
   750  040F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   751  0410  2C0D               	goto	clrloop0	;have we reached the end yet?
   752  0411  3400               	retlw	0	;all done for this memory range, return
   753                           
   754                           	psect	cstackCOMMON
   755  0070                     __pcstackCOMMON:	
   756  0070                     ?_Basic_Init:	
   757  0070                     ?_I2C_InitPort:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_UART_InitPort:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_MPU6050_Init:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_UART_Transmit:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_UART_Interrupt:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_UART_Interrupt:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_I2C_Interrupt:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_I2C1_Interrupt:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ??_I2C1_Interrupt:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_main:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_Handle:	
   788                           ; 1 bytes @ 0x0
   789                           
   790                           
   791                           ; 1 bytes @ 0x0
   792  0070                     	ds	1
   793  0071                     ??_I2C_Interrupt:	
   794  0071                     UART_Interrupt@dt:	
   795                           ; 1 bytes @ 0x1
   796                           
   797                           
   798                           ; 1 bytes @ 0x1
   799  0071                     	ds	1
   800  0072                     UART_Interrupt@x:	
   801                           
   802                           ; 1 bytes @ 0x2
   803  0072                     	ds	1
   804  0073                     ??_Handle:	
   805                           
   806                           ; 1 bytes @ 0x3
   807  0073                     	ds	1
   808  0074                     ??_Basic_Init:	
   809  0074                     ??_I2C_InitPort:	
   810                           ; 1 bytes @ 0x4
   811                           
   812  0074                     ??_UART_InitPort:	
   813                           ; 1 bytes @ 0x4
   814                           
   815  0074                     ??_UART_Transmit:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0074                     ?_I2C1_Transmit:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0074                     ?_I2C1_Receive:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0074                     UART_Transmit@dt:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0074                     I2C1_Transmit@pData:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0074                     I2C1_Receive@pData:	
   831                           ; 1 bytes @ 0x4
   832                           
   833                           
   834                           ; 1 bytes @ 0x4
   835  0074                     	ds	1
   836  0075                     ??_I2C1_Init:	
   837  0075                     ?_UART_Init:	
   838                           ; 1 bytes @ 0x5
   839                           
   840  0075                     I2C1_Transmit@size:	
   841                           ; 1 bytes @ 0x5
   842                           
   843  0075                     I2C1_Receive@size:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0075                     UART_Init@UART_Init_PORT:	
   847                           ; 1 bytes @ 0x5
   848                           
   849                           
   850                           ; 2 bytes @ 0x5
   851  0075                     	ds	1
   852  0076                     ??_I2C1_Transmit:	
   853  0076                     ??_I2C1_Receive:	
   854                           ; 1 bytes @ 0x6
   855                           
   856                           
   857                           ; 1 bytes @ 0x6
   858  0076                     	ds	1
   859  0077                     UART_Init@brg:	
   860                           
   861                           ; 1 bytes @ 0x7
   862  0077                     	ds	1
   863                           
   864                           	psect	cstackBANK0
   865  0020                     __pcstackBANK0:	
   866  0020                     ?_I2C1_Init:	
   867  0020                     ??_UART_Init:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     I2C1_Transmit@address:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     I2C1_Receive@address:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     I2C1_Init@I2C1_Init_PORT:	
   877                           ; 1 bytes @ 0x0
   878                           
   879                           
   880                           ; 2 bytes @ 0x0
   881  0020                     	ds	1
   882  0021                     I2C1_Transmit@i:	
   883  0021                     I2C1_Receive@result:	
   884                           ; 1 bytes @ 0x1
   885                           
   886                           
   887                           ; 1 bytes @ 0x1
   888  0021                     	ds	1
   889  0022                     I2C1_Init@address:	
   890  0022                     I2C1_Transmit@i_448:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0022                     I2C1_Receive@i:	
   894                           ; 1 bytes @ 0x2
   895                           
   896                           
   897                           ; 1 bytes @ 0x2
   898  0022                     	ds	1
   899  0023                     I2C1_Init@mode:	
   900  0023                     I2C1_Transmit@result:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0023                     I2C1_Receive@i_455:	
   904                           ; 1 bytes @ 0x3
   905                           
   906                           
   907                           ; 1 bytes @ 0x3
   908  0023                     	ds	1
   909  0024                     ?_I2C_Transmit:	
   910  0024                     ?_I2C_Receive:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0024                     I2C_Transmit@address:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0024                     I2C_Receive@address:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0024                     I2C1_Init@Speed:	
   920                           ; 1 bytes @ 0x4
   921                           
   922                           
   923                           ; 1 bytes @ 0x4
   924  0024                     	ds	1
   925  0025                     I2C_Transmit@pData:	
   926  0025                     I2C_Receive@pData:	
   927                           ; 1 bytes @ 0x5
   928                           
   929                           
   930                           ; 1 bytes @ 0x5
   931  0025                     	ds	1
   932  0026                     I2C_Transmit@size:	
   933  0026                     I2C_Receive@size:	
   934                           ; 1 bytes @ 0x6
   935                           
   936                           
   937                           ; 1 bytes @ 0x6
   938  0026                     	ds	1
   939  0027                     ??_I2C_Transmit:	
   940  0027                     ??_I2C_Receive:	
   941                           ; 1 bytes @ 0x7
   942                           
   943                           
   944                           ; 1 bytes @ 0x7
   945  0027                     	ds	3
   946  002A                     I2C_Transmit@I2Cx:	
   947  002A                     I2C_Receive@I2Cx:	
   948                           ; 1 bytes @ 0xA
   949                           
   950                           
   951                           ; 1 bytes @ 0xA
   952  002A                     	ds	1
   953  002B                     I2C_Transmit@result:	
   954  002B                     I2C_Receive@result:	
   955                           ; 1 bytes @ 0xB
   956                           
   957                           
   958                           ; 1 bytes @ 0xB
   959  002B                     	ds	1
   960  002C                     ?_MPU6050_Read_MultiData:	
   961  002C                     ?_MPU6050_Write_Data:	
   962                           ; 1 bytes @ 0xC
   963                           
   964  002C                     ?_MPU6050_Read_Data:	
   965                           ; 1 bytes @ 0xC
   966                           
   967  002C                     MPU6050_Write_Data@pData:	
   968                           ; 1 bytes @ 0xC
   969                           
   970  002C                     MPU6050_Read_Data@pData:	
   971                           ; 1 bytes @ 0xC
   972                           
   973  002C                     MPU6050_Read_MultiData@pData:	
   974                           ; 1 bytes @ 0xC
   975                           
   976                           
   977                           ; 1 bytes @ 0xC
   978  002C                     	ds	1
   979  002D                     ??_MPU6050_Write_Data:	
   980  002D                     ??_MPU6050_Read_Data:	
   981                           ; 1 bytes @ 0xD
   982                           
   983  002D                     MPU6050_Read_MultiData@size:	
   984                           ; 1 bytes @ 0xD
   985                           
   986                           
   987                           ; 1 bytes @ 0xD
   988  002D                     	ds	1
   989  002E                     ??_MPU6050_Read_MultiData:	
   990                           
   991                           ; 1 bytes @ 0xE
   992  002E                     	ds	2
   993  0030                     MPU6050_Read_Data@reg:	
   994                           
   995                           ; 1 bytes @ 0x10
   996  0030                     	ds	1
   997  0031                     MPU6050_Write_Data@reg:	
   998  0031                     MPU6050_Read_Data@result:	
   999                           ; 1 bytes @ 0x11
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x11
  1003  0031                     	ds	1
  1004  0032                     MPU6050_Read_MultiData@reg:	
  1005  0032                     MPU6050_Write_Data@senddata:	
  1006                           ; 1 bytes @ 0x12
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x12
  1010  0032                     	ds	1
  1011  0033                     MPU6050_Read_MultiData@result:	
  1012                           
  1013                           ; 1 bytes @ 0x13
  1014  0033                     	ds	1
  1015  0034                     MPU6050_Write_Data@result:	
  1016                           
  1017                           ; 1 bytes @ 0x14
  1018  0034                     	ds	1
  1019  0035                     ??_MPU6050_Init:	
  1020                           
  1021                           ; 1 bytes @ 0x15
  1022  0035                     	ds	2
  1023  0037                     MPU6050_Init@result:	
  1024                           
  1025                           ; 1 bytes @ 0x17
  1026  0037                     	ds	1
  1027  0038                     MPU6050_Init@data:	
  1028                           
  1029                           ; 1 bytes @ 0x18
  1030  0038                     	ds	1
  1031  0039                     MPU6050_Init@addr:	
  1032                           
  1033                           ; 1 bytes @ 0x19
  1034  0039                     	ds	1
  1035  003A                     ??_main:	
  1036                           
  1037                           ; 1 bytes @ 0x1A
  1038  003A                     	ds	3
  1039  003D                     main@result:	
  1040                           
  1041                           ; 1 bytes @ 0x1D
  1042  003D                     	ds	1
  1043  003E                     main@swap:	
  1044                           
  1045                           ; 1 bytes @ 0x1E
  1046  003E                     	ds	1
  1047  003F                     main@swap_169:	
  1048                           
  1049                           ; 1 bytes @ 0x1F
  1050  003F                     	ds	1
  1051  0040                     main@swap_170:	
  1052                           
  1053                           ; 1 bytes @ 0x20
  1054  0040                     	ds	1
  1055  0041                     main@swap_171:	
  1056                           
  1057                           ; 1 bytes @ 0x21
  1058  0041                     	ds	1
  1059  0042                     main@swap_172:	
  1060                           
  1061                           ; 1 bytes @ 0x22
  1062  0042                     	ds	1
  1063  0043                     main@swap_173:	
  1064                           
  1065                           ; 1 bytes @ 0x23
  1066  0043                     	ds	1
  1067  0044                     main@swap_174:	
  1068                           
  1069                           ; 1 bytes @ 0x24
  1070  0044                     	ds	1
  1071  0045                     main@accel_t_gyro:	
  1072                           
  1073                           ; 14 bytes @ 0x25
  1074  0045                     	ds	14
  1075                           
  1076                           	psect	maintext
  1077  001C                     __pmaintext:	
  1078 ;;
  1079 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1080 ;;
  1081 ;; *************** function _main *****************
  1082 ;; Defined at:
  1083 ;;		line 11 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  swap            1   36[BANK0 ] unsigned char 
  1088 ;;  swap            1   35[BANK0 ] unsigned char 
  1089 ;;  swap            1   34[BANK0 ] unsigned char 
  1090 ;;  swap            1   33[BANK0 ] unsigned char 
  1091 ;;  swap            1   32[BANK0 ] unsigned char 
  1092 ;;  swap            1   31[BANK0 ] unsigned char 
  1093 ;;  swap            1   30[BANK0 ] unsigned char 
  1094 ;;  accel_t_gyro   14   37[BANK0 ] struct .
  1095 ;;  result          1   29[BANK0 ] char 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : B1F/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1
  1105 ;;      Params:         0       0       0
  1106 ;;      Locals:         0      22       0
  1107 ;;      Temps:          0       3       0
  1108 ;;      Totals:         0      25       0
  1109 ;;Total ram usage:       25 bytes
  1110 ;; Hardware stack levels required when called:    7
  1111 ;; This function calls:
  1112 ;;		_Basic_Init
  1113 ;;		_I2C1_Init
  1114 ;;		_MPU6050_Init
  1115 ;;		_MPU6050_Read_MultiData
  1116 ;;		_UART_Init
  1117 ;;		_UART_Transmit
  1118 ;; This function is called by:
  1119 ;;		Startup code after reset
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _main
  1125  001C                     _main:	
  1126                           
  1127                           ;main.c: 13: accel_t_gyro_union accel_t_gyro;
  1128                           ;main.c: 15: Basic_Init();
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1132  001C  23F7               	fcall	_Basic_Init
  1133                           
  1134                           ;main.c: 17: I2C1_Init(I2C_InitPort,0x00,I2C_MODE_MASTER,I2C_SPEED_HIGH);
  1135  001D  30EA               	movlw	low _I2C_InitPort
  1136  001E  0020               	movlb	0	; select bank0
  1137  001F  00A0               	movwf	I2C1_Init@I2C1_Init_PORT
  1138  0020  3003               	movlw	high _I2C_InitPort
  1139  0021  00A1               	movwf	I2C1_Init@I2C1_Init_PORT+1
  1140  0022  01A2               	clrf	I2C1_Init@address
  1141  0023  01A3               	clrf	I2C1_Init@mode
  1142  0024  01A4               	clrf	I2C1_Init@Speed
  1143  0025  0AA4               	incf	I2C1_Init@Speed,f
  1144  0026  2208               	fcall	_I2C1_Init
  1145                           
  1146                           ;main.c: 19: UART_Init(UART_InitPort,BAUD_9600);
  1147  0027  30DC               	movlw	low _UART_InitPort
  1148  0028  00F5               	movwf	UART_Init@UART_Init_PORT
  1149  0029  3003               	movlw	high _UART_InitPort
  1150  002A  00F6               	movwf	UART_Init@UART_Init_PORT+1
  1151  002B  3003               	movlw	3
  1152  002C  0020               	movlb	0	; select bank0
  1153  002D  00BA               	movwf	??_main
  1154  002E  083A               	movf	??_main,w
  1155  002F  00F7               	movwf	UART_Init@brg
  1156  0030  22B1               	fcall	_UART_Init
  1157                           
  1158                           ;main.c: 21: _delay((unsigned long)((100)*(32000000/4000.0)));
  1159  0031  3005               	movlw	5
  1160  0032  0020               	movlb	0	; select bank0
  1161  0033  00BB               	movwf	??_main+1
  1162  0034  300F               	movlw	15
  1163  0035  00BA               	movwf	??_main
  1164  0036  30F1               	movlw	241
  1165  0037                     u1167:	
  1166  0037  0B89               	decfsz	9,f
  1167  0038  2837               	goto	u1167
  1168  0039  0BBA               	decfsz	??_main,f
  1169  003A  2837               	goto	u1167
  1170  003B  0BBB               	decfsz	??_main+1,f
  1171  003C  2837               	goto	u1167
  1172                           
  1173                           ;main.c: 23: MPU6050_Init();
  1174  003D  237B               	fcall	_MPU6050_Init
  1175                           
  1176                           ;main.c: 25: _delay((unsigned long)((100)*(32000000/4000.0)));
  1177  003E  3005               	movlw	5
  1178  003F  0020               	movlb	0	; select bank0
  1179  0040  00BB               	movwf	??_main+1
  1180  0041  300F               	movlw	15
  1181  0042  00BA               	movwf	??_main
  1182  0043  30F1               	movlw	241
  1183  0044                     u1177:	
  1184  0044  0B89               	decfsz	9,f
  1185  0045  2844               	goto	u1177
  1186  0046  0BBA               	decfsz	??_main,f
  1187  0047  2844               	goto	u1177
  1188  0048  0BBB               	decfsz	??_main+1,f
  1189  0049  2844               	goto	u1177
  1190  004A                     l1828:	
  1191                           ;main.c: 27: int8_t result;
  1192                           ;main.c: 29: while(1)
  1193                           
  1194                           
  1195                           ;main.c: 30: {
  1196                           ;main.c: 31: result = MPU6050_Read_MultiData(0x3B,(uint8_t *)&accel_t_gyro,sizeof(accel_
      +                          t_gyro));
  1197  004A  3045               	movlw	(low (main@accel_t_gyro| 0))& (0+255)
  1198  004B  0020               	movlb	0	; select bank0
  1199  004C  00BA               	movwf	??_main
  1200  004D  083A               	movf	??_main,w
  1201  004E  00AC               	movwf	MPU6050_Read_MultiData@pData
  1202  004F  300E               	movlw	14
  1203  0050  00BB               	movwf	??_main+1
  1204  0051  083B               	movf	??_main+1,w
  1205  0052  00AD               	movwf	MPU6050_Read_MultiData@size
  1206  0053  303B               	movlw	59
  1207  0054  22E9               	fcall	_MPU6050_Read_MultiData
  1208  0055  0020               	movlb	0	; select bank0
  1209  0056  00BC               	movwf	??_main+2
  1210  0057  083C               	movf	??_main+2,w
  1211  0058  00BD               	movwf	main@result
  1212                           
  1213                           ;main.c: 33: {uint8_t swap = accel_t_gyro.reg.x_accel_h; accel_t_gyro.reg.x_accel_h = ac
      +                          cel_t_gyro.reg.x_accel_l; accel_t_gyro.reg.x_accel_l = swap;};
  1214  0059  0845               	movf	main@accel_t_gyro,w
  1215  005A  00BA               	movwf	??_main
  1216  005B  083A               	movf	??_main,w
  1217  005C  00BE               	movwf	main@swap
  1218  005D  0846               	movf	main@accel_t_gyro+1,w
  1219  005E  00BA               	movwf	??_main
  1220  005F  083A               	movf	??_main,w
  1221  0060  00C5               	movwf	main@accel_t_gyro
  1222  0061  083E               	movf	main@swap,w
  1223  0062  00BA               	movwf	??_main
  1224  0063  083A               	movf	??_main,w
  1225  0064  00C6               	movwf	main@accel_t_gyro+1
  1226                           
  1227                           ;main.c: 34: {uint8_t swap = accel_t_gyro.reg.y_accel_h; accel_t_gyro.reg.y_accel_h = ac
      +                          cel_t_gyro.reg.y_accel_l; accel_t_gyro.reg.y_accel_l = swap;};
  1228  0065  0847               	movf	main@accel_t_gyro+2,w
  1229  0066  00BA               	movwf	??_main
  1230  0067  083A               	movf	??_main,w
  1231  0068  00BF               	movwf	main@swap_169
  1232  0069  0848               	movf	main@accel_t_gyro+3,w
  1233  006A  00BA               	movwf	??_main
  1234  006B  083A               	movf	??_main,w
  1235  006C  00C7               	movwf	main@accel_t_gyro+2
  1236  006D  083F               	movf	main@swap_169,w
  1237  006E  00BA               	movwf	??_main
  1238  006F  083A               	movf	??_main,w
  1239  0070  00C8               	movwf	main@accel_t_gyro+3
  1240                           
  1241                           ;main.c: 35: {uint8_t swap = accel_t_gyro.reg.z_accel_h; accel_t_gyro.reg.z_accel_h = ac
      +                          cel_t_gyro.reg.z_accel_l; accel_t_gyro.reg.z_accel_l = swap;};
  1242  0071  0849               	movf	main@accel_t_gyro+4,w
  1243  0072  00BA               	movwf	??_main
  1244  0073  083A               	movf	??_main,w
  1245  0074  00C0               	movwf	main@swap_170
  1246  0075  084A               	movf	main@accel_t_gyro+5,w
  1247  0076  00BA               	movwf	??_main
  1248  0077  083A               	movf	??_main,w
  1249  0078  00C9               	movwf	main@accel_t_gyro+4
  1250  0079  0840               	movf	main@swap_170,w
  1251  007A  00BA               	movwf	??_main
  1252  007B  083A               	movf	??_main,w
  1253  007C  00CA               	movwf	main@accel_t_gyro+5
  1254                           
  1255                           ;main.c: 36: {uint8_t swap = accel_t_gyro.reg.t_h; accel_t_gyro.reg.t_h = accel_t_gyro.r
      +                          eg.t_l; accel_t_gyro.reg.t_l = swap;};
  1256  007D  084B               	movf	main@accel_t_gyro+6,w
  1257  007E  00BA               	movwf	??_main
  1258  007F  083A               	movf	??_main,w
  1259  0080  00C1               	movwf	main@swap_171
  1260  0081  084C               	movf	main@accel_t_gyro+7,w
  1261  0082  00BA               	movwf	??_main
  1262  0083  083A               	movf	??_main,w
  1263  0084  00CB               	movwf	main@accel_t_gyro+6
  1264  0085  0841               	movf	main@swap_171,w
  1265  0086  00BA               	movwf	??_main
  1266  0087  083A               	movf	??_main,w
  1267  0088  00CC               	movwf	main@accel_t_gyro+7
  1268                           
  1269                           ;main.c: 37: {uint8_t swap = accel_t_gyro.reg.x_gyro_h; accel_t_gyro.reg.x_gyro_h = acce
      +                          l_t_gyro.reg.x_gyro_l; accel_t_gyro.reg.x_gyro_l = swap;};
  1270  0089  084D               	movf	main@accel_t_gyro+8,w
  1271  008A  00BA               	movwf	??_main
  1272  008B  083A               	movf	??_main,w
  1273  008C  00C2               	movwf	main@swap_172
  1274  008D  084E               	movf	main@accel_t_gyro+9,w
  1275  008E  00BA               	movwf	??_main
  1276  008F  083A               	movf	??_main,w
  1277  0090  00CD               	movwf	main@accel_t_gyro+8
  1278  0091  0842               	movf	main@swap_172,w
  1279  0092  00BA               	movwf	??_main
  1280  0093  083A               	movf	??_main,w
  1281  0094  00CE               	movwf	main@accel_t_gyro+9
  1282                           
  1283                           ;main.c: 38: {uint8_t swap = accel_t_gyro.reg.y_gyro_h; accel_t_gyro.reg.y_gyro_h = acce
      +                          l_t_gyro.reg.y_gyro_l; accel_t_gyro.reg.y_gyro_l = swap;};
  1284  0095  084F               	movf	main@accel_t_gyro+10,w
  1285  0096  00BA               	movwf	??_main
  1286  0097  083A               	movf	??_main,w
  1287  0098  00C3               	movwf	main@swap_173
  1288  0099  0850               	movf	main@accel_t_gyro+11,w
  1289  009A  00BA               	movwf	??_main
  1290  009B  083A               	movf	??_main,w
  1291  009C  00CF               	movwf	main@accel_t_gyro+10
  1292  009D  0843               	movf	main@swap_173,w
  1293  009E  00BA               	movwf	??_main
  1294  009F  083A               	movf	??_main,w
  1295  00A0  00D0               	movwf	main@accel_t_gyro+11
  1296                           
  1297                           ;main.c: 39: {uint8_t swap = accel_t_gyro.reg.z_gyro_h; accel_t_gyro.reg.z_gyro_h = acce
      +                          l_t_gyro.reg.z_gyro_l; accel_t_gyro.reg.z_gyro_l = swap;};
  1298  00A1  0851               	movf	main@accel_t_gyro+12,w
  1299  00A2  00BA               	movwf	??_main
  1300  00A3  083A               	movf	??_main,w
  1301  00A4  00C4               	movwf	main@swap_174
  1302  00A5  0852               	movf	main@accel_t_gyro+13,w
  1303  00A6  00BA               	movwf	??_main
  1304  00A7  083A               	movf	??_main,w
  1305  00A8  00D1               	movwf	main@accel_t_gyro+12
  1306  00A9  0844               	movf	main@swap_174,w
  1307  00AA  00BA               	movwf	??_main
  1308  00AB  083A               	movf	??_main,w
  1309  00AC  00D2               	movwf	main@accel_t_gyro+13
  1310                           
  1311                           ;main.c: 41: UART_Transmit(0xFF);
  1312  00AD  30FF               	movlw	255
  1313  00AE  2404               	fcall	_UART_Transmit
  1314                           
  1315                           ;main.c: 42: UART_Transmit(0xFF);
  1316  00AF  30FF               	movlw	255
  1317  00B0  2404               	fcall	_UART_Transmit
  1318                           
  1319                           ;main.c: 43: UART_Transmit(0xFF);
  1320  00B1  30FF               	movlw	255
  1321  00B2  2404               	fcall	_UART_Transmit
  1322                           
  1323                           ;main.c: 44: UART_Transmit(0xFF);
  1324  00B3  30FF               	movlw	255
  1325  00B4  2404               	fcall	_UART_Transmit
  1326                           
  1327                           ;main.c: 45: UART_Transmit(0xFF);
  1328  00B5  30FF               	movlw	255
  1329  00B6  2404               	fcall	_UART_Transmit
  1330                           
  1331                           ;main.c: 47: UART_Transmit(accel_t_gyro.reg.x_accel_h);
  1332  00B7  0020               	movlb	0	; select bank0
  1333  00B8  0845               	movf	main@accel_t_gyro,w
  1334  00B9  2404               	fcall	_UART_Transmit
  1335                           
  1336                           ;main.c: 48: UART_Transmit(accel_t_gyro.reg.x_accel_l);
  1337  00BA  0020               	movlb	0	; select bank0
  1338  00BB  0846               	movf	main@accel_t_gyro+1,w
  1339  00BC  2404               	fcall	_UART_Transmit
  1340                           
  1341                           ;main.c: 49: UART_Transmit(accel_t_gyro.reg.y_accel_h);
  1342  00BD  0020               	movlb	0	; select bank0
  1343  00BE  0847               	movf	main@accel_t_gyro+2,w
  1344  00BF  2404               	fcall	_UART_Transmit
  1345                           
  1346                           ;main.c: 50: UART_Transmit(accel_t_gyro.reg.y_accel_l);
  1347  00C0  0020               	movlb	0	; select bank0
  1348  00C1  0848               	movf	main@accel_t_gyro+3,w
  1349  00C2  2404               	fcall	_UART_Transmit
  1350                           
  1351                           ;main.c: 51: UART_Transmit(accel_t_gyro.reg.z_accel_h);
  1352  00C3  0020               	movlb	0	; select bank0
  1353  00C4  0849               	movf	main@accel_t_gyro+4,w
  1354  00C5  2404               	fcall	_UART_Transmit
  1355                           
  1356                           ;main.c: 52: UART_Transmit(accel_t_gyro.reg.z_accel_l);
  1357  00C6  0020               	movlb	0	; select bank0
  1358  00C7  084A               	movf	main@accel_t_gyro+5,w
  1359  00C8  2404               	fcall	_UART_Transmit
  1360                           
  1361                           ;main.c: 54: UART_Transmit(accel_t_gyro.reg.t_h);
  1362  00C9  0020               	movlb	0	; select bank0
  1363  00CA  084B               	movf	main@accel_t_gyro+6,w
  1364  00CB  2404               	fcall	_UART_Transmit
  1365                           
  1366                           ;main.c: 55: UART_Transmit(accel_t_gyro.reg.t_l);
  1367  00CC  0020               	movlb	0	; select bank0
  1368  00CD  084C               	movf	main@accel_t_gyro+7,w
  1369  00CE  2404               	fcall	_UART_Transmit
  1370                           
  1371                           ;main.c: 57: UART_Transmit(accel_t_gyro.reg.x_gyro_h);
  1372  00CF  0020               	movlb	0	; select bank0
  1373  00D0  084D               	movf	main@accel_t_gyro+8,w
  1374  00D1  2404               	fcall	_UART_Transmit
  1375                           
  1376                           ;main.c: 58: UART_Transmit(accel_t_gyro.reg.x_gyro_l);
  1377  00D2  0020               	movlb	0	; select bank0
  1378  00D3  084E               	movf	main@accel_t_gyro+9,w
  1379  00D4  2404               	fcall	_UART_Transmit
  1380                           
  1381                           ;main.c: 59: UART_Transmit(accel_t_gyro.reg.y_gyro_h);
  1382  00D5  0020               	movlb	0	; select bank0
  1383  00D6  084F               	movf	main@accel_t_gyro+10,w
  1384  00D7  2404               	fcall	_UART_Transmit
  1385                           
  1386                           ;main.c: 60: UART_Transmit(accel_t_gyro.reg.y_gyro_l);
  1387  00D8  0020               	movlb	0	; select bank0
  1388  00D9  0850               	movf	main@accel_t_gyro+11,w
  1389  00DA  2404               	fcall	_UART_Transmit
  1390                           
  1391                           ;main.c: 61: UART_Transmit(accel_t_gyro.reg.z_gyro_h);
  1392  00DB  0020               	movlb	0	; select bank0
  1393  00DC  0851               	movf	main@accel_t_gyro+12,w
  1394  00DD  2404               	fcall	_UART_Transmit
  1395                           
  1396                           ;main.c: 62: UART_Transmit(accel_t_gyro.reg.z_gyro_l);
  1397  00DE  0020               	movlb	0	; select bank0
  1398  00DF  0852               	movf	main@accel_t_gyro+13,w
  1399  00E0  2404               	fcall	_UART_Transmit
  1400  00E1  284A               	goto	l1828
  1401  00E2                     __end_of_main:	
  1402                           
  1403                           	psect	text1
  1404  0404                     __ptext1:	
  1405 ;; *************** function _UART_Transmit *****************
  1406 ;; Defined at:
  1407 ;;		line 70 in file "PIC_UART.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  dt              1    wreg     unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  dt              1    4[COMMON] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1
  1421 ;;      Params:         0       0       0
  1422 ;;      Locals:         1       0       0
  1423 ;;      Temps:          0       0       0
  1424 ;;      Totals:         1       0       0
  1425 ;;Total ram usage:        1 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    3
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;;		_putch
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _UART_Transmit
  1438  0404                     _UART_Transmit:	
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _UART_Transmit: [wreg]
  1442                           ;UART_Transmit@dt stored from wreg
  1443  0404  00F4               	movwf	UART_Transmit@dt
  1444  0405                     l110:	
  1445                           ;PIC_UART.c: 72: while (TXIF == 0);
  1446                           
  1447  0405  0020               	movlb	0	; select bank0
  1448  0406  1E11               	btfss	17,4	;volatile
  1449  0407  2C05               	goto	l110
  1450                           
  1451                           ;PIC_UART.c: 73: TXREG = dt;
  1452  0408  0874               	movf	UART_Transmit@dt,w
  1453  0409  0023               	movlb	3	; select bank3
  1454  040A  009A               	movwf	26	;volatile
  1455  040B  0008               	return
  1456  040C                     __end_of_UART_Transmit:	
  1457                           
  1458                           	psect	text2
  1459  02B1                     __ptext2:	
  1460 ;; *************** function _UART_Init *****************
  1461 ;; Defined at:
  1462 ;;		line 37 in file "PIC_UART.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  UART_Init_PO    2    5[COMMON] PTR FTN()void 
  1465 ;;		 -> UART_InitPort(1), 
  1466 ;;  brg             1    7[COMMON] enum E2433
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1
  1478 ;;      Params:         3       0       0
  1479 ;;      Locals:         0       0       0
  1480 ;;      Temps:          0       4       0
  1481 ;;      Totals:         3       4       0
  1482 ;;Total ram usage:        7 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    4
  1485 ;; This function calls:
  1486 ;;		_UART_InitPort
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _UART_Init
  1494  02B1                     _UART_Init:	
  1495                           
  1496                           ;PIC_UART.c: 39: UART_Init_PORT();
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1500  02B1  0876               	movf	UART_Init@UART_Init_PORT+1,w
  1501  02B2  008A               	movwf	10
  1502  02B3  0875               	movf	UART_Init@UART_Init_PORT,w
  1503  02B4  000A               	callw
  1504  02B5  3182               	pagesel	$
  1505                           
  1506                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1507  02B6  3020               	movlw	32
  1508  02B7  0023               	movlb	3	; select bank3
  1509  02B8  009E               	movwf	30	;volatile
  1510                           
  1511                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1512  02B9  3010               	movlw	16
  1513  02BA  009D               	movwf	29	;volatile
  1514                           
  1515                           ;PIC_UART.c: 44: BRG16 = 1;
  1516  02BB  159F               	bsf	31,3	;volatile
  1517                           
  1518                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1519  02BC  0877               	movf	UART_Init@brg,w
  1520  02BD  0020               	movlb	0	; select bank0
  1521  02BE  00A0               	movwf	??_UART_Init
  1522  02BF  01A1               	clrf	??_UART_Init+1
  1523  02C0  35A0               	lslf	??_UART_Init,f
  1524  02C1  0DA1               	rlf	??_UART_Init+1,f
  1525  02C2  30CC               	movlw	low (_baudtable| (0+32768))
  1526  02C3  0720               	addwf	??_UART_Init,w
  1527  02C4  0084               	movwf	4
  1528  02C5  3083               	movlw	high (_baudtable| (0+32768))
  1529  02C6  3D21               	addwfc	??_UART_Init+1,w
  1530  02C7  0085               	movwf	5
  1531  02C8  0800               	movf	0,w	;code access
  1532  02C9  0023               	movlb	3	; select bank3
  1533  02CA  009B               	movwf	27	;volatile
  1534                           
  1535                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1536  02CB  0877               	movf	UART_Init@brg,w
  1537  02CC  0020               	movlb	0	; select bank0
  1538  02CD  00A0               	movwf	??_UART_Init
  1539  02CE  01A1               	clrf	??_UART_Init+1
  1540  02CF  35A0               	lslf	??_UART_Init,f
  1541  02D0  0DA1               	rlf	??_UART_Init+1,f
  1542  02D1  30CC               	movlw	low (_baudtable| (0+32768))
  1543  02D2  0720               	addwf	??_UART_Init,w
  1544  02D3  0084               	movwf	4
  1545  02D4  3083               	movlw	high (_baudtable| (0+32768))
  1546  02D5  3D21               	addwfc	??_UART_Init+1,w
  1547  02D6  0085               	movwf	5
  1548  02D7  3F00               	moviw [0]fsr0
  1549  02D8  00A2               	movwf	??_UART_Init+2
  1550  02D9  3F01               	moviw [1]fsr0
  1551  02DA  00A3               	movwf	??_UART_Init+3
  1552  02DB  0823               	movf	??_UART_Init+3,w
  1553  02DC  0023               	movlb	3	; select bank3
  1554  02DD  009C               	movwf	28	;volatile
  1555                           
  1556                           ;PIC_UART.c: 48: RCIF = 0;
  1557  02DE  0020               	movlb	0	; select bank0
  1558  02DF  1291               	bcf	17,5	;volatile
  1559                           
  1560                           ;PIC_UART.c: 49: RCIE = 1;
  1561  02E0  0021               	movlb	1	; select bank1
  1562  02E1  1691               	bsf	17,5	;volatile
  1563                           
  1564                           ;PIC_UART.c: 50: PEIE = 1;
  1565  02E2  170B               	bsf	11,6	;volatile
  1566                           
  1567                           ;PIC_UART.c: 51: GIE = 1;
  1568  02E3  178B               	bsf	11,7	;volatile
  1569                           
  1570                           ;PIC_UART.c: 53: SPEN = 1;
  1571  02E4  0023               	movlb	3	; select bank3
  1572  02E5  179D               	bsf	29,7	;volatile
  1573                           
  1574                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1575  02E6  01F9               	clrf	_UART_Buffer_inptr
  1576                           
  1577                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1578  02E7  01F8               	clrf	_UART_Buffer_outptr
  1579  02E8  0008               	return
  1580  02E9                     __end_of_UART_Init:	
  1581                           
  1582                           	psect	text3
  1583  03DC                     __ptext3:	
  1584 ;; *************** function _UART_InitPort *****************
  1585 ;; Defined at:
  1586 ;;		line 90 in file "main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1
  1600 ;;      Params:         0       0       0
  1601 ;;      Locals:         0       0       0
  1602 ;;      Temps:          1       0       0
  1603 ;;      Totals:         1       0       0
  1604 ;;Total ram usage:        1 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    3
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_main
  1611 ;;		_UART_Init
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _UART_InitPort
  1617  03DC                     _UART_InitPort:	
  1618                           
  1619                           ;main.c: 92: TRISA &= ~(1<<4);
  1620                           
  1621                           ;incstack = 0
  1622                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  1623  03DC  30EF               	movlw	239
  1624  03DD  00F4               	movwf	??_UART_InitPort
  1625  03DE  0874               	movf	??_UART_InitPort,w
  1626  03DF  0021               	movlb	1	; select bank1
  1627  03E0  058C               	andwf	12,f	;volatile
  1628                           
  1629                           ;main.c: 93: ANSELA &= ~(1<<4);
  1630  03E1  30EF               	movlw	239
  1631  03E2  00F4               	movwf	??_UART_InitPort
  1632  03E3  0874               	movf	??_UART_InitPort,w
  1633  03E4  0023               	movlb	3	; select bank3
  1634  03E5  058C               	andwf	12,f	;volatile
  1635                           
  1636                           ;main.c: 94: APFCON |= (1<<2);
  1637  03E6  0022               	movlb	2	; select bank2
  1638  03E7  151D               	bsf	29,2	;volatile
  1639                           
  1640                           ;main.c: 95: APFCON |= (1<<7);
  1641  03E8  179D               	bsf	29,7	;volatile
  1642  03E9  0008               	return
  1643  03EA                     __end_of_UART_InitPort:	
  1644                           
  1645                           	psect	text4
  1646  02E9                     __ptext4:	
  1647 ;; *************** function _MPU6050_Read_MultiData *****************
  1648 ;; Defined at:
  1649 ;;		line 27 in file "MPU6050.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  reg             1    wreg     unsigned char 
  1652 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  1653 ;;		 -> main@accel_t_gyro(14), 
  1654 ;;  size            1   13[BANK0 ] unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  reg             1   18[BANK0 ] unsigned char 
  1657 ;;  result          1   19[BANK0 ] char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      char 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1
  1667 ;;      Params:         0       2       0
  1668 ;;      Locals:         0       2       0
  1669 ;;      Temps:          0       4       0
  1670 ;;      Totals:         0       8       0
  1671 ;;Total ram usage:        8 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    5
  1674 ;; This function calls:
  1675 ;;		_I2C_Receive
  1676 ;;		_I2C_Transmit
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _MPU6050_Read_MultiData
  1684  02E9                     _MPU6050_Read_MultiData:	
  1685                           
  1686                           ;incstack = 0
  1687                           ; Regs used in _MPU6050_Read_MultiData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1688                           ;MPU6050_Read_MultiData@reg stored from wreg
  1689  02E9  0020               	movlb	0	; select bank0
  1690  02EA  00B2               	movwf	MPU6050_Read_MultiData@reg
  1691                           
  1692                           ;MPU6050.c: 29: int8_t result = 0;
  1693  02EB  01B3               	clrf	MPU6050_Read_MultiData@result
  1694                           
  1695                           ;MPU6050.c: 31: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  1696  02EC  3068               	movlw	104
  1697  02ED  00AE               	movwf	??_MPU6050_Read_MultiData
  1698  02EE  082E               	movf	??_MPU6050_Read_MultiData,w
  1699  02EF  00A4               	movwf	I2C_Transmit@address
  1700  02F0  3032               	movlw	(low (MPU6050_Read_MultiData@reg| 0))& (0+255)
  1701  02F1  00AF               	movwf	??_MPU6050_Read_MultiData+1
  1702  02F2  082F               	movf	??_MPU6050_Read_MultiData+1,w
  1703  02F3  00A5               	movwf	I2C_Transmit@pData
  1704  02F4  01A6               	clrf	I2C_Transmit@size
  1705  02F5  0AA6               	incf	I2C_Transmit@size,f
  1706  02F6  3000               	movlw	0
  1707  02F7  2396               	fcall	_I2C_Transmit
  1708  02F8  0020               	movlb	0	; select bank0
  1709  02F9  00B0               	movwf	??_MPU6050_Read_MultiData+2
  1710  02FA  0830               	movf	??_MPU6050_Read_MultiData+2,w
  1711  02FB  07B3               	addwf	MPU6050_Read_MultiData@result,f
  1712                           
  1713                           ;MPU6050.c: 32: result += I2C_Receive(I2C1_MODULE,0x68,pData,size);
  1714  02FC  3068               	movlw	104
  1715  02FD  00AE               	movwf	??_MPU6050_Read_MultiData
  1716  02FE  082E               	movf	??_MPU6050_Read_MultiData,w
  1717  02FF  00A4               	movwf	I2C_Receive@address
  1718  0300  082C               	movf	MPU6050_Read_MultiData@pData,w
  1719  0301  00AF               	movwf	??_MPU6050_Read_MultiData+1
  1720  0302  082F               	movf	??_MPU6050_Read_MultiData+1,w
  1721  0303  00A5               	movwf	I2C_Receive@pData
  1722  0304  082D               	movf	MPU6050_Read_MultiData@size,w
  1723  0305  00B0               	movwf	??_MPU6050_Read_MultiData+2
  1724  0306  0830               	movf	??_MPU6050_Read_MultiData+2,w
  1725  0307  00A6               	movwf	I2C_Receive@size
  1726  0308  3000               	movlw	0
  1727  0309  23B1               	fcall	_I2C_Receive
  1728  030A  0020               	movlb	0	; select bank0
  1729  030B  00B1               	movwf	??_MPU6050_Read_MultiData+3
  1730  030C  0831               	movf	??_MPU6050_Read_MultiData+3,w
  1731  030D  07B3               	addwf	MPU6050_Read_MultiData@result,f
  1732                           
  1733                           ;MPU6050.c: 34: return result;
  1734  030E  0833               	movf	MPU6050_Read_MultiData@result,w
  1735  030F  0008               	return
  1736  0310                     __end_of_MPU6050_Read_MultiData:	
  1737                           
  1738                           	psect	text5
  1739  037B                     __ptext5:	
  1740 ;; *************** function _MPU6050_Init *****************
  1741 ;; Defined at:
  1742 ;;		line 37 in file "MPU6050.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  addr            1   25[BANK0 ] unsigned char 
  1747 ;;  data            1   24[BANK0 ] unsigned char 
  1748 ;;  result          1   23[BANK0 ] char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      char 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1
  1758 ;;      Params:         0       0       0
  1759 ;;      Locals:         0       3       0
  1760 ;;      Temps:          0       2       0
  1761 ;;      Totals:         0       5       0
  1762 ;;Total ram usage:        5 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    6
  1765 ;; This function calls:
  1766 ;;		_MPU6050_Read_Data
  1767 ;;		_MPU6050_Write_Data
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _MPU6050_Init
  1775  037B                     _MPU6050_Init:	
  1776                           
  1777                           ;MPU6050.c: 39: int8_t result;
  1778                           ;MPU6050.c: 41: uint8_t addr;
  1779                           ;MPU6050.c: 42: result = MPU6050_Read_Data(0x75,&addr);
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _MPU6050_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1783  037B  3039               	movlw	(low (MPU6050_Init@addr| 0))& (0+255)
  1784  037C  0020               	movlb	0	; select bank0
  1785  037D  00B5               	movwf	??_MPU6050_Init
  1786  037E  0835               	movf	??_MPU6050_Init,w
  1787  037F  00AC               	movwf	MPU6050_Read_Data@pData
  1788  0380  3075               	movlw	117
  1789  0381  2337               	fcall	_MPU6050_Read_Data
  1790  0382  0020               	movlb	0	; select bank0
  1791  0383  00B6               	movwf	??_MPU6050_Init+1
  1792  0384  0836               	movf	??_MPU6050_Init+1,w
  1793  0385  00B7               	movwf	MPU6050_Init@result
  1794                           
  1795                           ;MPU6050.c: 43: if(addr!=0x68) return -1;
  1796  0386  3068               	movlw	104
  1797  0387  0639               	xorwf	MPU6050_Init@addr,w
  1798  0388  1D03               	btfss	3,2
  1799  0389  0008               	return
  1800                           
  1801                           ;MPU6050.c: 45: uint8_t data = 0x00;
  1802                           
  1803                           ;	Return value of _MPU6050_Init is never used
  1804  038A  01B8               	clrf	MPU6050_Init@data
  1805                           
  1806                           ;MPU6050.c: 46: result += MPU6050_Write_Data(0x6B,data);
  1807  038B  0838               	movf	MPU6050_Init@data,w
  1808  038C  00B5               	movwf	??_MPU6050_Init
  1809  038D  0835               	movf	??_MPU6050_Init,w
  1810  038E  00AC               	movwf	MPU6050_Write_Data@pData
  1811  038F  306B               	movlw	107
  1812  0390  235C               	fcall	_MPU6050_Write_Data
  1813  0391  0020               	movlb	0	; select bank0
  1814  0392  00B6               	movwf	??_MPU6050_Init+1
  1815  0393  0836               	movf	??_MPU6050_Init+1,w
  1816  0394  07B7               	addwf	MPU6050_Init@result,f
  1817  0395  0008               	return
  1818  0396                     __end_of_MPU6050_Init:	
  1819                           ;MPU6050.c: 48: return result;
  1820                           ;	Return value of _MPU6050_Init is never used
  1821                           
  1822                           
  1823                           	psect	text6
  1824  035C                     __ptext6:	
  1825 ;; *************** function _MPU6050_Write_Data *****************
  1826 ;; Defined at:
  1827 ;;		line 3 in file "MPU6050.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  reg             1    wreg     unsigned char 
  1830 ;;  pData           1   12[BANK0 ] unsigned char 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  reg             1   17[BANK0 ] unsigned char 
  1833 ;;  senddata        2   18[BANK0 ] unsigned char [2]
  1834 ;;  result          1   20[BANK0 ] char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      char 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1
  1844 ;;      Params:         0       1       0
  1845 ;;      Locals:         0       4       0
  1846 ;;      Temps:          0       4       0
  1847 ;;      Totals:         0       9       0
  1848 ;;Total ram usage:        9 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    5
  1851 ;; This function calls:
  1852 ;;		_I2C_Transmit
  1853 ;; This function is called by:
  1854 ;;		_MPU6050_Init
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _MPU6050_Write_Data
  1860  035C                     _MPU6050_Write_Data:	
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _MPU6050_Write_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1864                           ;MPU6050_Write_Data@reg stored from wreg
  1865  035C  0020               	movlb	0	; select bank0
  1866  035D  00B1               	movwf	MPU6050_Write_Data@reg
  1867                           
  1868                           ;MPU6050.c: 5: int8_t result = 0;
  1869  035E  01B4               	clrf	MPU6050_Write_Data@result
  1870                           
  1871                           ;MPU6050.c: 6: uint8_t senddata[2];
  1872                           ;MPU6050.c: 8: senddata[0] = reg;
  1873  035F  0831               	movf	MPU6050_Write_Data@reg,w
  1874  0360  00AD               	movwf	??_MPU6050_Write_Data
  1875  0361  082D               	movf	??_MPU6050_Write_Data,w
  1876  0362  00B2               	movwf	MPU6050_Write_Data@senddata
  1877                           
  1878                           ;MPU6050.c: 9: senddata[1] = pData;
  1879  0363  082C               	movf	MPU6050_Write_Data@pData,w
  1880  0364  00AD               	movwf	??_MPU6050_Write_Data
  1881  0365  082D               	movf	??_MPU6050_Write_Data,w
  1882  0366  00B3               	movwf	MPU6050_Write_Data@senddata+1
  1883                           
  1884                           ;MPU6050.c: 11: result += I2C_Transmit(I2C1_MODULE,0x68,senddata,2);
  1885  0367  3068               	movlw	104
  1886  0368  00AD               	movwf	??_MPU6050_Write_Data
  1887  0369  082D               	movf	??_MPU6050_Write_Data,w
  1888  036A  00A4               	movwf	I2C_Transmit@address
  1889  036B  3032               	movlw	(low (MPU6050_Write_Data@senddata| 0))& (0+255)
  1890  036C  00AE               	movwf	??_MPU6050_Write_Data+1
  1891  036D  082E               	movf	??_MPU6050_Write_Data+1,w
  1892  036E  00A5               	movwf	I2C_Transmit@pData
  1893  036F  3002               	movlw	2
  1894  0370  00AF               	movwf	??_MPU6050_Write_Data+2
  1895  0371  082F               	movf	??_MPU6050_Write_Data+2,w
  1896  0372  00A6               	movwf	I2C_Transmit@size
  1897  0373  3000               	movlw	0
  1898  0374  2396               	fcall	_I2C_Transmit
  1899  0375  0020               	movlb	0	; select bank0
  1900  0376  00B0               	movwf	??_MPU6050_Write_Data+3
  1901  0377  0830               	movf	??_MPU6050_Write_Data+3,w
  1902  0378  07B4               	addwf	MPU6050_Write_Data@result,f
  1903                           
  1904                           ;MPU6050.c: 13: return result;
  1905  0379  0834               	movf	MPU6050_Write_Data@result,w
  1906  037A  0008               	return
  1907  037B                     __end_of_MPU6050_Write_Data:	
  1908                           
  1909                           	psect	text7
  1910  0337                     __ptext7:	
  1911 ;; *************** function _MPU6050_Read_Data *****************
  1912 ;; Defined at:
  1913 ;;		line 16 in file "MPU6050.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  reg             1    wreg     unsigned char 
  1916 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  1917 ;;		 -> MPU6050_Init@addr(1), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  reg             1   16[BANK0 ] unsigned char 
  1920 ;;  result          1   17[BANK0 ] char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      char 
  1923 ;; Registers used:
  1924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1
  1930 ;;      Params:         0       1       0
  1931 ;;      Locals:         0       2       0
  1932 ;;      Temps:          0       3       0
  1933 ;;      Totals:         0       6       0
  1934 ;;Total ram usage:        6 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    5
  1937 ;; This function calls:
  1938 ;;		_I2C_Receive
  1939 ;;		_I2C_Transmit
  1940 ;; This function is called by:
  1941 ;;		_MPU6050_Init
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _MPU6050_Read_Data
  1947  0337                     _MPU6050_Read_Data:	
  1948                           
  1949                           ;incstack = 0
  1950                           ; Regs used in _MPU6050_Read_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1951                           ;MPU6050_Read_Data@reg stored from wreg
  1952  0337  0020               	movlb	0	; select bank0
  1953  0338  00B0               	movwf	MPU6050_Read_Data@reg
  1954                           
  1955                           ;MPU6050.c: 18: int8_t result = 0;
  1956  0339  01B1               	clrf	MPU6050_Read_Data@result
  1957                           
  1958                           ;MPU6050.c: 20: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  1959  033A  3068               	movlw	104
  1960  033B  00AD               	movwf	??_MPU6050_Read_Data
  1961  033C  082D               	movf	??_MPU6050_Read_Data,w
  1962  033D  00A4               	movwf	I2C_Transmit@address
  1963  033E  3030               	movlw	(low (MPU6050_Read_Data@reg| 0))& (0+255)
  1964  033F  00AE               	movwf	??_MPU6050_Read_Data+1
  1965  0340  082E               	movf	??_MPU6050_Read_Data+1,w
  1966  0341  00A5               	movwf	I2C_Transmit@pData
  1967  0342  01A6               	clrf	I2C_Transmit@size
  1968  0343  0AA6               	incf	I2C_Transmit@size,f
  1969  0344  3000               	movlw	0
  1970  0345  2396               	fcall	_I2C_Transmit
  1971  0346  0020               	movlb	0	; select bank0
  1972  0347  00AF               	movwf	??_MPU6050_Read_Data+2
  1973  0348  082F               	movf	??_MPU6050_Read_Data+2,w
  1974  0349  07B1               	addwf	MPU6050_Read_Data@result,f
  1975                           
  1976                           ;MPU6050.c: 22: result += I2C_Receive(I2C1_MODULE,0x68,pData,1);
  1977  034A  3068               	movlw	104
  1978  034B  00AD               	movwf	??_MPU6050_Read_Data
  1979  034C  082D               	movf	??_MPU6050_Read_Data,w
  1980  034D  00A4               	movwf	I2C_Receive@address
  1981  034E  082C               	movf	MPU6050_Read_Data@pData,w
  1982  034F  00AE               	movwf	??_MPU6050_Read_Data+1
  1983  0350  082E               	movf	??_MPU6050_Read_Data+1,w
  1984  0351  00A5               	movwf	I2C_Receive@pData
  1985  0352  01A6               	clrf	I2C_Receive@size
  1986  0353  0AA6               	incf	I2C_Receive@size,f
  1987  0354  3000               	movlw	0
  1988  0355  23B1               	fcall	_I2C_Receive
  1989  0356  0020               	movlb	0	; select bank0
  1990  0357  00AF               	movwf	??_MPU6050_Read_Data+2
  1991  0358  082F               	movf	??_MPU6050_Read_Data+2,w
  1992  0359  07B1               	addwf	MPU6050_Read_Data@result,f
  1993                           
  1994                           ;MPU6050.c: 24: return result;
  1995  035A  0831               	movf	MPU6050_Read_Data@result,w
  1996  035B  0008               	return
  1997  035C                     __end_of_MPU6050_Read_Data:	
  1998                           
  1999                           	psect	text8
  2000  0396                     __ptext8:	
  2001 ;; *************** function _I2C_Transmit *****************
  2002 ;; Defined at:
  2003 ;;		line 5 in file "PIC_I2C.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  I2Cx            1    wreg     enum E2417
  2006 ;;  address         1    4[BANK0 ] unsigned char 
  2007 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  2008 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  2009 ;;  size            1    6[BANK0 ] unsigned char 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  I2Cx            1   10[BANK0 ] enum E2417
  2012 ;;  result          1   11[BANK0 ] char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      char 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1
  2022 ;;      Params:         0       3       0
  2023 ;;      Locals:         0       2       0
  2024 ;;      Temps:          0       3       0
  2025 ;;      Totals:         0       8       0
  2026 ;;Total ram usage:        8 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    4
  2029 ;; This function calls:
  2030 ;;		_I2C1_Transmit
  2031 ;; This function is called by:
  2032 ;;		_MPU6050_Write_Data
  2033 ;;		_MPU6050_Read_Data
  2034 ;;		_MPU6050_Read_MultiData
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _I2C_Transmit
  2040  0396                     _I2C_Transmit:	
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2044                           ;I2C_Transmit@I2Cx stored from wreg
  2045  0396  0020               	movlb	0	; select bank0
  2046  0397  00AA               	movwf	I2C_Transmit@I2Cx
  2047                           
  2048                           ;PIC_I2C.c: 7: int8_t result = -1;
  2049  0398  01AB               	clrf	I2C_Transmit@result
  2050  0399  03AB               	decf	I2C_Transmit@result,f
  2051                           
  2052                           ;PIC_I2C.c: 9: switch(I2Cx)
  2053  039A  2BAA               	goto	l1716
  2054  039B                     l1712:	
  2055                           ;PIC_I2C.c: 10: {
  2056                           ;PIC_I2C.c: 11: case I2C1_MODULE:
  2057                           
  2058                           
  2059                           ;PIC_I2C.c: 12: result = I2C1_Transmit(address,pData,size);
  2060  039B  0825               	movf	I2C_Transmit@pData,w
  2061  039C  00A7               	movwf	??_I2C_Transmit
  2062  039D  0827               	movf	??_I2C_Transmit,w
  2063  039E  00F4               	movwf	I2C1_Transmit@pData
  2064  039F  0826               	movf	I2C_Transmit@size,w
  2065  03A0  00A8               	movwf	??_I2C_Transmit+1
  2066  03A1  0828               	movf	??_I2C_Transmit+1,w
  2067  03A2  00F5               	movwf	I2C1_Transmit@size
  2068  03A3  0824               	movf	I2C_Transmit@address,w
  2069  03A4  217F               	fcall	_I2C1_Transmit
  2070  03A5  0020               	movlb	0	; select bank0
  2071  03A6  00A9               	movwf	??_I2C_Transmit+2
  2072  03A7  0829               	movf	??_I2C_Transmit+2,w
  2073  03A8  00AB               	movwf	I2C_Transmit@result
  2074                           
  2075                           ;PIC_I2C.c: 14: }
  2076                           
  2077                           ;PIC_I2C.c: 13: break;
  2078  03A9  2BAF               	goto	l1718
  2079  03AA                     l1716:	
  2080  03AA  082A               	movf	I2C_Transmit@I2Cx,w
  2081                           
  2082                           ; Switch size 1, requested type "space"
  2083                           ; Number of cases is 1, Range of values is 0 to 0
  2084                           ; switch strategies available:
  2085                           ; Name         Instructions Cycles
  2086                           ; simple_byte            4     3 (average)
  2087                           ; direct_byte            8     6 (fixed)
  2088                           ; jumptable            260     6 (fixed)
  2089                           ;	Chosen strategy is simple_byte
  2090  03AB  3A00               	xorlw	0	; case 0
  2091  03AC  1903               	skipnz
  2092  03AD  2B9B               	goto	l1712
  2093  03AE  2BAF               	goto	l1718
  2094  03AF                     l1718:	
  2095                           
  2096                           ;PIC_I2C.c: 15: return result;
  2097  03AF  082B               	movf	I2C_Transmit@result,w
  2098  03B0  0008               	return
  2099  03B1                     __end_of_I2C_Transmit:	
  2100                           
  2101                           	psect	text9
  2102  017F                     __ptext9:	
  2103 ;; *************** function _I2C1_Transmit *****************
  2104 ;; Defined at:
  2105 ;;		line 53 in file "PIC_I2C1.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  address         1    wreg     unsigned char 
  2108 ;;  pData           1    4[COMMON] PTR unsigned char 
  2109 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  2110 ;;  size            1    5[COMMON] unsigned char 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  address         1    0[BANK0 ] unsigned char 
  2113 ;;  i               1    2[BANK0 ] unsigned char 
  2114 ;;  i               1    1[BANK0 ] unsigned char 
  2115 ;;  result          1    3[BANK0 ] char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      char 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1
  2125 ;;      Params:         2       0       0
  2126 ;;      Locals:         0       4       0
  2127 ;;      Temps:          2       0       0
  2128 ;;      Totals:         4       4       0
  2129 ;;Total ram usage:        8 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    3
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_I2C_Transmit
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function _I2C1_Transmit
  2141  017F                     _I2C1_Transmit:	
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2145                           ;I2C1_Transmit@address stored from wreg
  2146  017F  0020               	movlb	0	; select bank0
  2147  0180  00A0               	movwf	I2C1_Transmit@address
  2148                           
  2149                           ;PIC_I2C1.c: 55: int8_t result;
  2150                           ;PIC_I2C1.c: 57: switch(I2C1_Config.Mode)
  2151  0181  29FD               	goto	l1654
  2152  0182                     l1610:	
  2153                           ;PIC_I2C1.c: 60: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2154                           
  2155                           ;PIC_I2C1.c: 58: {
  2156                           ;PIC_I2C1.c: 59: case I2C_MODE_MASTER:
  2157                           
  2158  0182  3005               	movlw	5
  2159  0183  0024               	movlb	4	; select bank4
  2160  0184  0514               	andwf	20,w	;volatile
  2161  0185  00F6               	movwf	??_I2C1_Transmit
  2162  0186  0816               	movf	22,w	;volatile
  2163  0187  391F               	andlw	31
  2164  0188  0476               	iorwf	??_I2C1_Transmit,w
  2165  0189  1D03               	btfss	3,2
  2166  018A  2982               	goto	l1610
  2167                           
  2168                           ;PIC_I2C1.c: 61: SSPCON2bits.SEN = 1;
  2169  018B  1416               	bsf	22,0	;volatile
  2170  018C                     l1612:	
  2171                           ;PIC_I2C1.c: 63: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2172                           
  2173  018C  3005               	movlw	5
  2174  018D  0514               	andwf	20,w	;volatile
  2175  018E  00F6               	movwf	??_I2C1_Transmit
  2176  018F  0816               	movf	22,w	;volatile
  2177  0190  391F               	andlw	31
  2178  0191  0476               	iorwf	??_I2C1_Transmit,w
  2179  0192  1D03               	btfss	3,2
  2180  0193  298C               	goto	l1612
  2181                           
  2182                           ;PIC_I2C1.c: 64: SSPBUF = address << 1;
  2183  0194  0020               	movlb	0	; select bank0
  2184  0195  3520               	lslf	I2C1_Transmit@address,w
  2185  0196  0024               	movlb	4	; select bank4
  2186  0197  0091               	movwf	17	;volatile
  2187  0198                     l231:	
  2188                           ;PIC_I2C1.c: 65: while(SSPSTATbits.R_nW);
  2189                           
  2190  0198  1914               	btfsc	20,2	;volatile
  2191  0199  2998               	goto	l231
  2192                           
  2193                           ;PIC_I2C1.c: 67: result = SSPCON2bits.ACKSTAT;
  2194  019A  3000               	movlw	0
  2195  019B  1B16               	btfsc	22,6	;volatile
  2196  019C  3001               	movlw	1
  2197  019D  0020               	movlb	0	; select bank0
  2198  019E  00A3               	movwf	I2C1_Transmit@result
  2199                           
  2200                           ;PIC_I2C1.c: 68: if (!result)
  2201  019F  0823               	movf	I2C1_Transmit@result,w
  2202  01A0  1D03               	btfss	3,2
  2203  01A1  29CD               	goto	l1636
  2204                           
  2205                           ;PIC_I2C1.c: 69: {
  2206                           ;PIC_I2C1.c: 70: for(uint8_t i=0;i<size;i++)
  2207  01A2  01A1               	clrf	I2C1_Transmit@i
  2208  01A3  29A8               	goto	l1634
  2209  01A4                     l1632:	
  2210                           ;PIC_I2C1.c: 80: break;
  2211                           
  2212  01A4  3001               	movlw	1
  2213  01A5  00F6               	movwf	??_I2C1_Transmit
  2214  01A6  0876               	movf	??_I2C1_Transmit,w
  2215  01A7  07A1               	addwf	I2C1_Transmit@i,f
  2216  01A8                     l1634:	
  2217  01A8  0875               	movf	I2C1_Transmit@size,w
  2218  01A9  0221               	subwf	I2C1_Transmit@i,w
  2219  01AA  1803               	btfsc	3,0
  2220  01AB  29CD               	goto	l1636
  2221  01AC                     l1622:	
  2222                           ;PIC_I2C1.c: 71: {
  2223                           ;PIC_I2C1.c: 72: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2224                           
  2225  01AC  3005               	movlw	5
  2226  01AD  0024               	movlb	4	; select bank4
  2227  01AE  0514               	andwf	20,w	;volatile
  2228  01AF  00F6               	movwf	??_I2C1_Transmit
  2229  01B0  0816               	movf	22,w	;volatile
  2230  01B1  391F               	andlw	31
  2231  01B2  0476               	iorwf	??_I2C1_Transmit,w
  2232  01B3  1D03               	btfss	3,2
  2233  01B4  29AC               	goto	l1622
  2234                           
  2235                           ;PIC_I2C1.c: 73: SSPBUF = *(pData+i);
  2236  01B5  0020               	movlb	0	; select bank0
  2237  01B6  0821               	movf	I2C1_Transmit@i,w
  2238  01B7  0774               	addwf	I2C1_Transmit@pData,w
  2239  01B8  00F6               	movwf	??_I2C1_Transmit
  2240  01B9  0876               	movf	??_I2C1_Transmit,w
  2241  01BA  0086               	movwf	6
  2242  01BB  0187               	clrf	7
  2243  01BC  0801               	movf	1,w
  2244  01BD  0024               	movlb	4	; select bank4
  2245  01BE  0091               	movwf	17	;volatile
  2246  01BF                     l240:	
  2247                           ;PIC_I2C1.c: 74: while(SSPSTATbits.R_nW);
  2248                           
  2249  01BF  1914               	btfsc	20,2	;volatile
  2250  01C0  29BF               	goto	l240
  2251                           
  2252                           ;PIC_I2C1.c: 76: result = SSPCON2bits.ACKSTAT;
  2253  01C1  3000               	movlw	0
  2254  01C2  1B16               	btfsc	22,6	;volatile
  2255  01C3  3001               	movlw	1
  2256  01C4  0020               	movlb	0	; select bank0
  2257  01C5  00A3               	movwf	I2C1_Transmit@result
  2258                           
  2259                           ;PIC_I2C1.c: 77: if (result)
  2260  01C6  0823               	movf	I2C1_Transmit@result,w
  2261  01C7  1903               	btfsc	3,2
  2262  01C8  29A4               	goto	l1632
  2263                           
  2264                           ;PIC_I2C1.c: 78: {
  2265                           ;PIC_I2C1.c: 79: result = 2;
  2266  01C9  3002               	movlw	2
  2267  01CA  00F6               	movwf	??_I2C1_Transmit
  2268  01CB  0876               	movf	??_I2C1_Transmit,w
  2269  01CC  00A3               	movwf	I2C1_Transmit@result
  2270  01CD                     l1636:	
  2271                           ;PIC_I2C1.c: 81: }
  2272                           ;PIC_I2C1.c: 82: }
  2273                           ;PIC_I2C1.c: 83: }
  2274                           ;PIC_I2C1.c: 85: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2275                           
  2276  01CD  3005               	movlw	5
  2277  01CE  0024               	movlb	4	; select bank4
  2278  01CF  0514               	andwf	20,w	;volatile
  2279  01D0  00F6               	movwf	??_I2C1_Transmit
  2280  01D1  0816               	movf	22,w	;volatile
  2281  01D2  391F               	andlw	31
  2282  01D3  0476               	iorwf	??_I2C1_Transmit,w
  2283  01D4  1D03               	btfss	3,2
  2284  01D5  29CD               	goto	l1636
  2285                           
  2286                           ;PIC_I2C1.c: 86: SSPCON2bits.PEN = 1;
  2287  01D6  1516               	bsf	22,2	;volatile
  2288                           
  2289                           ;PIC_I2C1.c: 87: break;
  2290  01D7  2A05               	goto	l1656
  2291  01D8                     l249:	
  2292                           ;PIC_I2C1.c: 89: case I2C_MODE_SLAVE:
  2293                           
  2294                           
  2295                           ;PIC_I2C1.c: 90: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2296  01D8  0024               	movlb	4	; select bank4
  2297  01D9  1D94               	btfss	20,3	;volatile
  2298  01DA  1E14               	btfss	20,4	;volatile
  2299  01DB  29FA               	goto	l1650
  2300                           
  2301                           ;PIC_I2C1.c: 91: {
  2302                           ;PIC_I2C1.c: 92: for(uint8_t i = 0;i<size;i++)
  2303  01DC  0020               	movlb	0	; select bank0
  2304  01DD  01A2               	clrf	I2C1_Transmit@i_448
  2305  01DE                     l1646:	
  2306  01DE  0875               	movf	I2C1_Transmit@size,w
  2307  01DF  0222               	subwf	I2C1_Transmit@i_448,w
  2308  01E0  1803               	btfsc	3,0
  2309  01E1  29F5               	goto	l1648
  2310                           
  2311                           ;PIC_I2C1.c: 93: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2312  01E2  0822               	movf	I2C1_Transmit@i_448,w
  2313  01E3  0774               	addwf	I2C1_Transmit@pData,w
  2314  01E4  00F6               	movwf	??_I2C1_Transmit
  2315  01E5  0876               	movf	??_I2C1_Transmit,w
  2316  01E6  0086               	movwf	6
  2317  01E7  0187               	clrf	7
  2318  01E8  0801               	movf	1,w
  2319  01E9  00F7               	movwf	??_I2C1_Transmit+1
  2320  01EA  0822               	movf	I2C1_Transmit@i_448,w
  2321  01EB  3E5B               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2322  01EC  0086               	movwf	6
  2323  01ED  0187               	clrf	7
  2324  01EE  0877               	movf	??_I2C1_Transmit+1,w
  2325  01EF  0081               	movwf	1
  2326  01F0  3001               	movlw	1
  2327  01F1  00F6               	movwf	??_I2C1_Transmit
  2328  01F2  0876               	movf	??_I2C1_Transmit,w
  2329  01F3  07A2               	addwf	I2C1_Transmit@i_448,f
  2330  01F4  29DE               	goto	l1646
  2331  01F5                     l1648:	
  2332                           
  2333                           ;PIC_I2C1.c: 94: result = size;
  2334  01F5  0875               	movf	I2C1_Transmit@size,w
  2335  01F6  00F6               	movwf	??_I2C1_Transmit
  2336  01F7  0876               	movf	??_I2C1_Transmit,w
  2337  01F8  00A3               	movwf	I2C1_Transmit@result
  2338                           
  2339                           ;PIC_I2C1.c: 95: }
  2340  01F9  2A05               	goto	l1656
  2341  01FA                     l1650:	
  2342                           
  2343                           ;PIC_I2C1.c: 96: else
  2344                           ;PIC_I2C1.c: 97: result = 0;
  2345  01FA  0020               	movlb	0	; select bank0
  2346  01FB  01A3               	clrf	I2C1_Transmit@result
  2347                           
  2348                           ;PIC_I2C1.c: 99: }
  2349                           
  2350                           ;PIC_I2C1.c: 98: break;
  2351  01FC  2A05               	goto	l1656
  2352  01FD                     l1654:	
  2353  01FD  086D               	movf	_I2C1_Config+18,w
  2354                           
  2355                           ; Switch size 1, requested type "space"
  2356                           ; Number of cases is 2, Range of values is 0 to 1
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte            7     4 (average)
  2360                           ; direct_byte           10     6 (fixed)
  2361                           ; jumptable            260     6 (fixed)
  2362                           ;	Chosen strategy is simple_byte
  2363  01FE  3A00               	xorlw	0	; case 0
  2364  01FF  1903               	skipnz
  2365  0200  2982               	goto	l1610
  2366  0201  3A01               	xorlw	1	; case 1
  2367  0202  1903               	skipnz
  2368  0203  29D8               	goto	l249
  2369  0204  2A05               	goto	l1656
  2370  0205                     l1656:	
  2371                           
  2372                           ;PIC_I2C1.c: 101: return result;
  2373  0205  0020               	movlb	0	; select bank0
  2374  0206  0823               	movf	I2C1_Transmit@result,w
  2375  0207  0008               	return
  2376  0208                     __end_of_I2C1_Transmit:	
  2377                           
  2378                           	psect	text10
  2379  03B1                     __ptext10:	
  2380 ;; *************** function _I2C_Receive *****************
  2381 ;; Defined at:
  2382 ;;		line 18 in file "PIC_I2C.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  I2Cx            1    wreg     enum E2417
  2385 ;;  address         1    4[BANK0 ] unsigned char 
  2386 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  2387 ;;		 -> MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2388 ;;  size            1    6[BANK0 ] unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  I2Cx            1   10[BANK0 ] enum E2417
  2391 ;;  result          1   11[BANK0 ] char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      char 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1
  2401 ;;      Params:         0       3       0
  2402 ;;      Locals:         0       2       0
  2403 ;;      Temps:          0       3       0
  2404 ;;      Totals:         0       8       0
  2405 ;;Total ram usage:        8 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    4
  2408 ;; This function calls:
  2409 ;;		_I2C1_Receive
  2410 ;; This function is called by:
  2411 ;;		_MPU6050_Read_Data
  2412 ;;		_MPU6050_Read_MultiData
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _I2C_Receive
  2418  03B1                     _I2C_Receive:	
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2422                           ;I2C_Receive@I2Cx stored from wreg
  2423  03B1  0020               	movlb	0	; select bank0
  2424  03B2  00AA               	movwf	I2C_Receive@I2Cx
  2425                           
  2426                           ;PIC_I2C.c: 20: int8_t result = -1;
  2427  03B3  01AB               	clrf	I2C_Receive@result
  2428  03B4  03AB               	decf	I2C_Receive@result,f
  2429                           
  2430                           ;PIC_I2C.c: 22: switch(I2Cx)
  2431  03B5  2BC5               	goto	l1728
  2432  03B6                     l1724:	
  2433                           ;PIC_I2C.c: 23: {
  2434                           ;PIC_I2C.c: 24: case I2C1_MODULE:
  2435                           
  2436                           
  2437                           ;PIC_I2C.c: 25: result = I2C1_Receive(address,pData,size);
  2438  03B6  0825               	movf	I2C_Receive@pData,w
  2439  03B7  00A7               	movwf	??_I2C_Receive
  2440  03B8  0827               	movf	??_I2C_Receive,w
  2441  03B9  00F4               	movwf	I2C1_Receive@pData
  2442  03BA  0826               	movf	I2C_Receive@size,w
  2443  03BB  00A8               	movwf	??_I2C_Receive+1
  2444  03BC  0828               	movf	??_I2C_Receive+1,w
  2445  03BD  00F5               	movwf	I2C1_Receive@size
  2446  03BE  0824               	movf	I2C_Receive@address,w
  2447  03BF  20E2               	fcall	_I2C1_Receive
  2448  03C0  0020               	movlb	0	; select bank0
  2449  03C1  00A9               	movwf	??_I2C_Receive+2
  2450  03C2  0829               	movf	??_I2C_Receive+2,w
  2451  03C3  00AB               	movwf	I2C_Receive@result
  2452                           
  2453                           ;PIC_I2C.c: 27: }
  2454                           
  2455                           ;PIC_I2C.c: 26: break;
  2456  03C4  2BCA               	goto	l1730
  2457  03C5                     l1728:	
  2458  03C5  082A               	movf	I2C_Receive@I2Cx,w
  2459                           
  2460                           ; Switch size 1, requested type "space"
  2461                           ; Number of cases is 1, Range of values is 0 to 0
  2462                           ; switch strategies available:
  2463                           ; Name         Instructions Cycles
  2464                           ; simple_byte            4     3 (average)
  2465                           ; direct_byte            8     6 (fixed)
  2466                           ; jumptable            260     6 (fixed)
  2467                           ;	Chosen strategy is simple_byte
  2468  03C6  3A00               	xorlw	0	; case 0
  2469  03C7  1903               	skipnz
  2470  03C8  2BB6               	goto	l1724
  2471  03C9  2BCA               	goto	l1730
  2472  03CA                     l1730:	
  2473                           
  2474                           ;PIC_I2C.c: 28: return result;
  2475  03CA  082B               	movf	I2C_Receive@result,w
  2476  03CB  0008               	return
  2477  03CC                     __end_of_I2C_Receive:	
  2478                           
  2479                           	psect	text11
  2480  00E2                     __ptext11:	
  2481 ;; *************** function _I2C1_Receive *****************
  2482 ;; Defined at:
  2483 ;;		line 104 in file "PIC_I2C1.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  address         1    wreg     unsigned char 
  2486 ;;  pData           1    4[COMMON] PTR unsigned char 
  2487 ;;		 -> MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2488 ;;  size            1    5[COMMON] unsigned char 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  address         1    0[BANK0 ] unsigned char 
  2491 ;;  i               1    3[BANK0 ] unsigned char 
  2492 ;;  i               1    2[BANK0 ] unsigned char 
  2493 ;;  result          1    1[BANK0 ] char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      char 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1
  2503 ;;      Params:         2       0       0
  2504 ;;      Locals:         0       4       0
  2505 ;;      Temps:          2       0       0
  2506 ;;      Totals:         4       4       0
  2507 ;;Total ram usage:        8 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_I2C_Receive
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _I2C1_Receive
  2519  00E2                     _I2C1_Receive:	
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  2523                           ;I2C1_Receive@address stored from wreg
  2524  00E2  0020               	movlb	0	; select bank0
  2525  00E3  00A0               	movwf	I2C1_Receive@address
  2526                           
  2527                           ;PIC_I2C1.c: 106: int8_t result;
  2528                           ;PIC_I2C1.c: 108: switch(I2C1_Config.Mode)
  2529  00E4  2974               	goto	l1704
  2530  00E5                     l1662:	
  2531                           ;PIC_I2C1.c: 111: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2532                           
  2533                           ;PIC_I2C1.c: 109: {
  2534                           ;PIC_I2C1.c: 110: case I2C_MODE_MASTER:
  2535                           
  2536  00E5  3005               	movlw	5
  2537  00E6  0024               	movlb	4	; select bank4
  2538  00E7  0514               	andwf	20,w	;volatile
  2539  00E8  00F6               	movwf	??_I2C1_Receive
  2540  00E9  0816               	movf	22,w	;volatile
  2541  00EA  391F               	andlw	31
  2542  00EB  0476               	iorwf	??_I2C1_Receive,w
  2543  00EC  1D03               	btfss	3,2
  2544  00ED  28E5               	goto	l1662
  2545                           
  2546                           ;PIC_I2C1.c: 112: SSPCON2bits.SEN = 1;
  2547  00EE  1416               	bsf	22,0	;volatile
  2548  00EF                     l1664:	
  2549                           ;PIC_I2C1.c: 114: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2550                           
  2551  00EF  3005               	movlw	5
  2552  00F0  0514               	andwf	20,w	;volatile
  2553  00F1  00F6               	movwf	??_I2C1_Receive
  2554  00F2  0816               	movf	22,w	;volatile
  2555  00F3  391F               	andlw	31
  2556  00F4  0476               	iorwf	??_I2C1_Receive,w
  2557  00F5  1D03               	btfss	3,2
  2558  00F6  28EF               	goto	l1664
  2559                           
  2560                           ;PIC_I2C1.c: 115: SSPBUF = ((address << 1)|0x01);
  2561  00F7  1403               	setc
  2562  00F8  0020               	movlb	0	; select bank0
  2563  00F9  0D20               	rlf	I2C1_Receive@address,w
  2564  00FA  0024               	movlb	4	; select bank4
  2565  00FB  0091               	movwf	17	;volatile
  2566  00FC                     l266:	
  2567                           ;PIC_I2C1.c: 116: while(SSPSTATbits.R_nW);
  2568                           
  2569  00FC  1914               	btfsc	20,2	;volatile
  2570  00FD  28FC               	goto	l266
  2571                           
  2572                           ;PIC_I2C1.c: 118: result = SSPCON2bits.ACKSTAT;
  2573  00FE  3000               	movlw	0
  2574  00FF  1B16               	btfsc	22,6	;volatile
  2575  0100  3001               	movlw	1
  2576  0101  0020               	movlb	0	; select bank0
  2577  0102  00A1               	movwf	I2C1_Receive@result
  2578                           
  2579                           ;PIC_I2C1.c: 119: if (!result)
  2580  0103  0821               	movf	I2C1_Receive@result,w
  2581  0104  1D03               	btfss	3,2
  2582  0105  2944               	goto	l1688
  2583                           
  2584                           ;PIC_I2C1.c: 120: {
  2585                           ;PIC_I2C1.c: 121: for (uint8_t i=0;i<size;i++)
  2586  0106  01A2               	clrf	I2C1_Receive@i
  2587  0107                     l1686:	
  2588  0107  0875               	movf	I2C1_Receive@size,w
  2589  0108  0222               	subwf	I2C1_Receive@i,w
  2590  0109  1803               	btfsc	3,0
  2591  010A  2944               	goto	l1688
  2592  010B                     l1674:	
  2593                           ;PIC_I2C1.c: 122: {
  2594                           ;PIC_I2C1.c: 123: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2595                           
  2596  010B  3005               	movlw	5
  2597  010C  0024               	movlb	4	; select bank4
  2598  010D  0514               	andwf	20,w	;volatile
  2599  010E  00F6               	movwf	??_I2C1_Receive
  2600  010F  0816               	movf	22,w	;volatile
  2601  0110  391F               	andlw	31
  2602  0111  0476               	iorwf	??_I2C1_Receive,w
  2603  0112  1D03               	btfss	3,2
  2604  0113  290B               	goto	l1674
  2605                           
  2606                           ;PIC_I2C1.c: 124: SSPCON2bits.RCEN = 1;
  2607  0114  1596               	bsf	22,3	;volatile
  2608  0115                     l275:	
  2609                           ;PIC_I2C1.c: 125: while(SSPCON2bits.RCEN);
  2610                           
  2611  0115  1996               	btfsc	22,3	;volatile
  2612  0116  2915               	goto	l275
  2613                           
  2614                           ;PIC_I2C1.c: 126: *(pData+i) = SSPBUF;
  2615  0117  0811               	movf	17,w	;volatile
  2616  0118  00F6               	movwf	??_I2C1_Receive
  2617  0119  0020               	movlb	0	; select bank0
  2618  011A  0822               	movf	I2C1_Receive@i,w
  2619  011B  0774               	addwf	I2C1_Receive@pData,w
  2620  011C  00F7               	movwf	??_I2C1_Receive+1
  2621  011D  0877               	movf	??_I2C1_Receive+1,w
  2622  011E  0086               	movwf	6
  2623  011F  0187               	clrf	7
  2624  0120  0876               	movf	??_I2C1_Receive,w
  2625  0121  0081               	movwf	1
  2626  0122                     l1678:	
  2627                           ;PIC_I2C1.c: 127: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2628                           
  2629  0122  3005               	movlw	5
  2630  0123  0024               	movlb	4	; select bank4
  2631  0124  0514               	andwf	20,w	;volatile
  2632  0125  00F6               	movwf	??_I2C1_Receive
  2633  0126  0816               	movf	22,w	;volatile
  2634  0127  391F               	andlw	31
  2635  0128  0476               	iorwf	??_I2C1_Receive,w
  2636  0129  1D03               	btfss	3,2
  2637  012A  2922               	goto	l1678
  2638                           
  2639                           ;PIC_I2C1.c: 128: if (i == size-1)
  2640  012B  0875               	movf	I2C1_Receive@size,w
  2641  012C  3EFF               	addlw	255
  2642  012D  00F6               	movwf	??_I2C1_Receive
  2643  012E  30FF               	movlw	255
  2644  012F  1803               	skipnc
  2645  0130  3000               	movlw	0
  2646  0131  00F7               	movwf	??_I2C1_Receive+1
  2647  0132  0020               	movlb	0	; select bank0
  2648  0133  0822               	movf	I2C1_Receive@i,w
  2649  0134  0676               	xorwf	??_I2C1_Receive,w
  2650  0135  0477               	iorwf	??_I2C1_Receive+1,w
  2651  0136  1D03               	skipz
  2652  0137  293B               	goto	l281
  2653                           
  2654                           ;PIC_I2C1.c: 129: SSPCON2bits.ACKDT = 1;
  2655  0138  0024               	movlb	4	; select bank4
  2656  0139  1696               	bsf	22,5	;volatile
  2657  013A  293D               	goto	l282
  2658  013B                     l281:	
  2659                           
  2660                           ;PIC_I2C1.c: 130: else
  2661                           ;PIC_I2C1.c: 131: SSPCON2bits.ACKDT = 0;
  2662  013B  0024               	movlb	4	; select bank4
  2663  013C  1296               	bcf	22,5	;volatile
  2664  013D                     l282:	
  2665                           
  2666                           ;PIC_I2C1.c: 132: SSPCON2bits.ACKEN = 1;
  2667  013D  1616               	bsf	22,4	;volatile
  2668  013E  3001               	movlw	1
  2669  013F  00F6               	movwf	??_I2C1_Receive
  2670  0140  0876               	movf	??_I2C1_Receive,w
  2671  0141  0020               	movlb	0	; select bank0
  2672  0142  07A2               	addwf	I2C1_Receive@i,f
  2673  0143  2907               	goto	l1686
  2674  0144                     l1688:	
  2675                           ;PIC_I2C1.c: 133: }
  2676                           ;PIC_I2C1.c: 134: }
  2677                           ;PIC_I2C1.c: 136: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2678                           
  2679  0144  3005               	movlw	5
  2680  0145  0024               	movlb	4	; select bank4
  2681  0146  0514               	andwf	20,w	;volatile
  2682  0147  00F6               	movwf	??_I2C1_Receive
  2683  0148  0816               	movf	22,w	;volatile
  2684  0149  391F               	andlw	31
  2685  014A  0476               	iorwf	??_I2C1_Receive,w
  2686  014B  1D03               	btfss	3,2
  2687  014C  2944               	goto	l1688
  2688                           
  2689                           ;PIC_I2C1.c: 137: SSPCON2bits.PEN = 1;
  2690  014D  1516               	bsf	22,2	;volatile
  2691                           
  2692                           ;PIC_I2C1.c: 138: break;
  2693  014E  297C               	goto	l1706
  2694  014F                     l288:	
  2695                           ;PIC_I2C1.c: 140: case I2C_MODE_SLAVE:
  2696                           
  2697                           
  2698                           ;PIC_I2C1.c: 141: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2699  014F  0024               	movlb	4	; select bank4
  2700  0150  1D94               	btfss	20,3	;volatile
  2701  0151  1E14               	btfss	20,4	;volatile
  2702  0152  297C               	goto	l1706
  2703                           
  2704                           ;PIC_I2C1.c: 142: {
  2705                           ;PIC_I2C1.c: 143: for(uint8_t i = 0;i<size;i++)
  2706  0153  0020               	movlb	0	; select bank0
  2707  0154  01A3               	clrf	I2C1_Receive@i_455
  2708  0155                     l1698:	
  2709  0155  0875               	movf	I2C1_Receive@size,w
  2710  0156  0223               	subwf	I2C1_Receive@i_455,w
  2711  0157  1803               	btfsc	3,0
  2712  0158  296C               	goto	l1700
  2713                           
  2714                           ;PIC_I2C1.c: 144: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  2715  0159  0823               	movf	I2C1_Receive@i_455,w
  2716  015A  3E63               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  2717  015B  0086               	movwf	6
  2718  015C  0187               	clrf	7
  2719  015D  0801               	movf	1,w
  2720  015E  00F6               	movwf	??_I2C1_Receive
  2721  015F  0823               	movf	I2C1_Receive@i_455,w
  2722  0160  0774               	addwf	I2C1_Receive@pData,w
  2723  0161  00F7               	movwf	??_I2C1_Receive+1
  2724  0162  0877               	movf	??_I2C1_Receive+1,w
  2725  0163  0086               	movwf	6
  2726  0164  0187               	clrf	7
  2727  0165  0876               	movf	??_I2C1_Receive,w
  2728  0166  0081               	movwf	1
  2729  0167  3001               	movlw	1
  2730  0168  00F6               	movwf	??_I2C1_Receive
  2731  0169  0876               	movf	??_I2C1_Receive,w
  2732  016A  07A3               	addwf	I2C1_Receive@i_455,f
  2733  016B  2955               	goto	l1698
  2734  016C                     l1700:	
  2735                           
  2736                           ;PIC_I2C1.c: 145: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  2737  016C  3063               	movlw	(low (_I2C1_Config+8))& (0+255)
  2738  016D  3AFF               	xorlw	255
  2739  016E  3E01               	addlw	1
  2740  016F  076C               	addwf	_I2C1_Config+17,w
  2741  0170  00F6               	movwf	??_I2C1_Receive
  2742  0171  0876               	movf	??_I2C1_Receive,w
  2743  0172  00A1               	movwf	I2C1_Receive@result
  2744                           
  2745                           ;PIC_I2C1.c: 148: }
  2746                           
  2747                           ;PIC_I2C1.c: 146: }
  2748                           ;PIC_I2C1.c: 147: break;
  2749  0173  297C               	goto	l1706
  2750  0174                     l1704:	
  2751  0174  086D               	movf	_I2C1_Config+18,w
  2752                           
  2753                           ; Switch size 1, requested type "space"
  2754                           ; Number of cases is 2, Range of values is 0 to 1
  2755                           ; switch strategies available:
  2756                           ; Name         Instructions Cycles
  2757                           ; simple_byte            7     4 (average)
  2758                           ; direct_byte           10     6 (fixed)
  2759                           ; jumptable            260     6 (fixed)
  2760                           ;	Chosen strategy is simple_byte
  2761  0175  3A00               	xorlw	0	; case 0
  2762  0176  1903               	skipnz
  2763  0177  28E5               	goto	l1662
  2764  0178  3A01               	xorlw	1	; case 1
  2765  0179  1903               	skipnz
  2766  017A  294F               	goto	l288
  2767  017B  297C               	goto	l1706
  2768  017C                     l1706:	
  2769                           
  2770                           ;PIC_I2C1.c: 150: return result;
  2771  017C  0020               	movlb	0	; select bank0
  2772  017D  0821               	movf	I2C1_Receive@result,w
  2773  017E  0008               	return
  2774  017F                     __end_of_I2C1_Receive:	
  2775                           
  2776                           	psect	text12
  2777  0208                     __ptext12:	
  2778 ;; *************** function _I2C1_Init *****************
  2779 ;; Defined at:
  2780 ;;		line 8 in file "PIC_I2C1.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  I2C1_Init_PO    2    0[BANK0 ] PTR FTN()void 
  2783 ;;		 -> I2C_InitPort(1), 
  2784 ;;  address         1    2[BANK0 ] unsigned char 
  2785 ;;  mode            1    3[BANK0 ] enum E2409
  2786 ;;  Speed           1    4[BANK0 ] enum E2413
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1
  2798 ;;      Params:         0       5       0
  2799 ;;      Locals:         0       0       0
  2800 ;;      Temps:          1       0       0
  2801 ;;      Totals:         1       5       0
  2802 ;;Total ram usage:        6 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    4
  2805 ;; This function calls:
  2806 ;;		_I2C_InitPort
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           
  2813                           ;psect for function _I2C1_Init
  2814  0208                     _I2C1_Init:	
  2815                           
  2816                           ;PIC_I2C1.c: 10: I2C1_Init_PORT();
  2817                           
  2818                           ;incstack = 0
  2819                           ; Regs used in _I2C1_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2820  0208  0020               	movlb	0	; select bank0
  2821  0209  0821               	movf	I2C1_Init@I2C1_Init_PORT+1,w
  2822  020A  008A               	movwf	10
  2823  020B  0820               	movf	I2C1_Init@I2C1_Init_PORT,w
  2824  020C  000A               	callw
  2825  020D  3182               	pagesel	$
  2826                           
  2827                           ;PIC_I2C1.c: 11: I2C1_Config.Mode = mode;
  2828  020E  0020               	movlb	0	; select bank0
  2829  020F  0823               	movf	I2C1_Init@mode,w
  2830  0210  00F5               	movwf	??_I2C1_Init
  2831  0211  0875               	movf	??_I2C1_Init,w
  2832  0212  00ED               	movwf	_I2C1_Config+18
  2833                           
  2834                           ;PIC_I2C1.c: 13: switch(mode)
  2835  0213  2A4B               	goto	l1792
  2836  0214                     l211:	
  2837                           ;PIC_I2C1.c: 14: {
  2838                           ;PIC_I2C1.c: 15: case I2C_MODE_MASTER:
  2839                           
  2840                           
  2841                           ;PIC_I2C1.c: 16: SSPCON1 |= (0x08<<0);
  2842  0214  0024               	movlb	4	; select bank4
  2843  0215  1595               	bsf	21,3	;volatile
  2844                           
  2845                           ;PIC_I2C1.c: 17: if(Speed==I2C_SPEED_STANDARD)
  2846  0216  0020               	movlb	0	; select bank0
  2847  0217  0824               	movf	I2C1_Init@Speed,w
  2848  0218  1D03               	btfss	3,2
  2849  0219  2A1E               	goto	l1766
  2850                           
  2851                           ;PIC_I2C1.c: 18: {
  2852                           ;PIC_I2C1.c: 19: SSPSTAT |= (1<<7);
  2853  021A  0024               	movlb	4	; select bank4
  2854  021B  1794               	bsf	20,7	;volatile
  2855                           
  2856                           ;PIC_I2C1.c: 20: SSPADD = 0x4F;
  2857  021C  304F               	movlw	79
  2858  021D  2A28               	goto	L1
  2859  021E                     l1766:	
  2860                           ;PIC_I2C1.c: 21: }
  2861                           
  2862                           
  2863                           ;PIC_I2C1.c: 22: else if(Speed==I2C_SPEED_HIGH)
  2864  021E  0020               	movlb	0	; select bank0
  2865  021F  0324               	decf	I2C1_Init@Speed,w
  2866  0220  1D03               	btfss	3,2
  2867  0221  2A29               	goto	l1772
  2868                           
  2869                           ;PIC_I2C1.c: 23: {
  2870                           ;PIC_I2C1.c: 24: SSPSTAT &= ~(1<<7);
  2871  0222  307F               	movlw	127
  2872  0223  00F5               	movwf	??_I2C1_Init
  2873  0224  0875               	movf	??_I2C1_Init,w
  2874  0225  0024               	movlb	4	; select bank4
  2875  0226  0594               	andwf	20,f	;volatile
  2876                           
  2877                           ;PIC_I2C1.c: 25: SSPADD = 0x13;
  2878  0227  3013               	movlw	19
  2879  0228                     L1:	
  2880  0228  0092               	movwf	18	;volatile
  2881  0229                     l1772:	
  2882                           
  2883                           ;PIC_I2C1.c: 26: }
  2884                           ;PIC_I2C1.c: 27: SSPCON1bits.SSPEN = 1;
  2885  0229  0024               	movlb	4	; select bank4
  2886  022A  2A49               	goto	l1788
  2887  022B                     l1774:	
  2888                           ;PIC_I2C1.c: 30: case I2C_MODE_SLAVE:
  2889                           
  2890                           ;PIC_I2C1.c: 28: break;
  2891                           
  2892                           
  2893                           ;PIC_I2C1.c: 31: SSPSTAT = 0x00;
  2894  022B  0024               	movlb	4	; select bank4
  2895  022C  0194               	clrf	20	;volatile
  2896                           
  2897                           ;PIC_I2C1.c: 32: if(Speed==I2C_SPEED_STANDARD)
  2898  022D  0020               	movlb	0	; select bank0
  2899  022E  0824               	movf	I2C1_Init@Speed,w
  2900  022F  1D03               	btfss	3,2
  2901  0230  2A34               	goto	l1780
  2902                           
  2903                           ;PIC_I2C1.c: 33: SSPSTAT |= (1<<7);
  2904  0231  0024               	movlb	4	; select bank4
  2905  0232  1794               	bsf	20,7	;volatile
  2906  0233  2A3D               	goto	l218
  2907  0234                     l1780:	
  2908                           
  2909                           ;PIC_I2C1.c: 34: else if(Speed==I2C_SPEED_HIGH)
  2910  0234  0020               	movlb	0	; select bank0
  2911  0235  0324               	decf	I2C1_Init@Speed,w
  2912  0236  1D03               	btfss	3,2
  2913  0237  2A3D               	goto	l218
  2914                           
  2915                           ;PIC_I2C1.c: 35: SSPSTAT &= ~(1<<7);
  2916  0238  307F               	movlw	127
  2917  0239  00F5               	movwf	??_I2C1_Init
  2918  023A  0875               	movf	??_I2C1_Init,w
  2919  023B  0024               	movlb	4	; select bank4
  2920  023C  0594               	andwf	20,f	;volatile
  2921  023D                     l218:	
  2922                           
  2923                           ;PIC_I2C1.c: 37: SSPCON1 |= (0x06<<0);
  2924  023D  3006               	movlw	6
  2925  023E  00F5               	movwf	??_I2C1_Init
  2926  023F  0875               	movf	??_I2C1_Init,w
  2927  0240  0024               	movlb	4	; select bank4
  2928  0241  0495               	iorwf	21,f	;volatile
  2929                           
  2930                           ;PIC_I2C1.c: 38: SSPCON2bits.SEN= 1;
  2931  0242  1416               	bsf	22,0	;volatile
  2932                           
  2933                           ;PIC_I2C1.c: 39: SSPADD = address << 1;
  2934  0243  0020               	movlb	0	; select bank0
  2935  0244  3522               	lslf	I2C1_Init@address,w
  2936  0245  0024               	movlb	4	; select bank4
  2937  0246  0092               	movwf	18	;volatile
  2938                           
  2939                           ;PIC_I2C1.c: 40: SSPMSK = 0xFE;
  2940  0247  30FE               	movlw	254
  2941  0248  0093               	movwf	19	;volatile
  2942  0249                     l1788:	
  2943                           
  2944                           ;PIC_I2C1.c: 41: SSPCON1bits.SSPEN = 1;
  2945  0249  1695               	bsf	21,5	;volatile
  2946                           
  2947                           ;PIC_I2C1.c: 43: }
  2948                           
  2949                           ;PIC_I2C1.c: 42: break;
  2950  024A  2A54               	goto	l215
  2951  024B                     l1792:	
  2952  024B  0020               	movlb	0	; select bank0
  2953  024C  0823               	movf	I2C1_Init@mode,w
  2954                           
  2955                           ; Switch size 1, requested type "space"
  2956                           ; Number of cases is 2, Range of values is 0 to 1
  2957                           ; switch strategies available:
  2958                           ; Name         Instructions Cycles
  2959                           ; simple_byte            7     4 (average)
  2960                           ; direct_byte           10     6 (fixed)
  2961                           ; jumptable            260     6 (fixed)
  2962                           ;	Chosen strategy is simple_byte
  2963  024D  3A00               	xorlw	0	; case 0
  2964  024E  1903               	skipnz
  2965  024F  2A14               	goto	l211
  2966  0250  3A01               	xorlw	1	; case 1
  2967  0251  1903               	skipnz
  2968  0252  2A2B               	goto	l1774
  2969  0253  2A54               	goto	l215
  2970  0254                     l215:	
  2971                           
  2972                           ;PIC_I2C1.c: 44: SSP1IE = 1;
  2973  0254  0021               	movlb	1	; select bank1
  2974  0255  1591               	bsf	17,3	;volatile
  2975                           
  2976                           ;PIC_I2C1.c: 45: BCL1IE = 1;
  2977  0256  1592               	bsf	18,3	;volatile
  2978                           
  2979                           ;PIC_I2C1.c: 46: SSP1IF = 0;
  2980  0257  0020               	movlb	0	; select bank0
  2981  0258  1191               	bcf	17,3	;volatile
  2982                           
  2983                           ;PIC_I2C1.c: 47: BCL1IF = 0;
  2984  0259  1192               	bcf	18,3	;volatile
  2985                           
  2986                           ;PIC_I2C1.c: 49: PEIE = 1;
  2987  025A  170B               	bsf	11,6	;volatile
  2988                           
  2989                           ;PIC_I2C1.c: 50: GIE = 1;
  2990  025B  178B               	bsf	11,7	;volatile
  2991  025C  0008               	return
  2992  025D                     __end_of_I2C1_Init:	
  2993                           
  2994                           	psect	text13
  2995  03EA                     __ptext13:	
  2996 ;; *************** function _I2C_InitPort *****************
  2997 ;; Defined at:
  2998 ;;		line 97 in file "main.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1
  3012 ;;      Params:         0       0       0
  3013 ;;      Locals:         0       0       0
  3014 ;;      Temps:          1       0       0
  3015 ;;      Totals:         1       0       0
  3016 ;;Total ram usage:        1 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    3
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_main
  3023 ;;		_I2C1_Init
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           
  3028                           ;psect for function _I2C_InitPort
  3029  03EA                     _I2C_InitPort:	
  3030                           
  3031                           ;main.c: 99: TRISA |= (1<<1);
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _I2C_InitPort: [wreg+status,2+status,0]
  3035  03EA  0021               	movlb	1	; select bank1
  3036  03EB  148C               	bsf	12,1	;volatile
  3037                           
  3038                           ;main.c: 100: TRISA |= (1<<2);
  3039  03EC  150C               	bsf	12,2	;volatile
  3040                           
  3041                           ;main.c: 102: ANSELA &= ~(1<<1);
  3042  03ED  30FD               	movlw	253
  3043  03EE  00F4               	movwf	??_I2C_InitPort
  3044  03EF  0874               	movf	??_I2C_InitPort,w
  3045  03F0  0023               	movlb	3	; select bank3
  3046  03F1  058C               	andwf	12,f	;volatile
  3047                           
  3048                           ;main.c: 103: ANSELA &= ~(1<<2);
  3049  03F2  30FB               	movlw	251
  3050  03F3  00F4               	movwf	??_I2C_InitPort
  3051  03F4  0874               	movf	??_I2C_InitPort,w
  3052  03F5  058C               	andwf	12,f	;volatile
  3053  03F6  0008               	return
  3054  03F7                     __end_of_I2C_InitPort:	
  3055                           
  3056                           	psect	text14
  3057  03F7                     __ptext14:	
  3058 ;; *************** function _Basic_Init *****************
  3059 ;; Defined at:
  3060 ;;		line 74 in file "main.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1
  3074 ;;      Params:         0       0       0
  3075 ;;      Locals:         0       0       0
  3076 ;;      Temps:          0       0       0
  3077 ;;      Totals:         0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    3
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           
  3089                           ;psect for function _Basic_Init
  3090  03F7                     _Basic_Init:	
  3091                           
  3092                           ;main.c: 76: OSCCON = 0xF0;
  3093                           
  3094                           ;incstack = 0
  3095                           ; Regs used in _Basic_Init: [wreg+status,2]
  3096  03F7  30F0               	movlw	240
  3097  03F8  0021               	movlb	1	; select bank1
  3098  03F9  0099               	movwf	25	;volatile
  3099                           
  3100                           ;main.c: 80: TRISA = 0x00;
  3101  03FA  018C               	clrf	12	;volatile
  3102                           
  3103                           ;main.c: 81: ANSELA = 0x00;
  3104  03FB  0023               	movlb	3	; select bank3
  3105  03FC  018C               	clrf	12	;volatile
  3106                           
  3107                           ;main.c: 82: WPUA = 0x00;
  3108  03FD  0024               	movlb	4	; select bank4
  3109  03FE  018C               	clrf	12	;volatile
  3110                           
  3111                           ;main.c: 85: APFCON = 0x00;
  3112  03FF  0022               	movlb	2	; select bank2
  3113  0400  019D               	clrf	29	;volatile
  3114                           
  3115                           ;main.c: 87: PORTA = 0x00;
  3116  0401  0020               	movlb	0	; select bank0
  3117  0402  018C               	clrf	12	;volatile
  3118  0403  0008               	return
  3119  0404                     __end_of_Basic_Init:	
  3120                           
  3121                           	psect	intentry
  3122  0004                     __pintentry:	
  3123 ;; *************** function _Handle *****************
  3124 ;; Defined at:
  3125 ;;		line 68 in file "main.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;		None
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1
  3139 ;;      Params:         0       0       0
  3140 ;;      Locals:         0       0       0
  3141 ;;      Temps:          1       0       0
  3142 ;;      Totals:         1       0       0
  3143 ;;Total ram usage:        1 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		_I2C_Interrupt
  3148 ;;		_UART_Interrupt
  3149 ;; This function is called by:
  3150 ;;		Interrupt level 1
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154  0004                     _Handle:	
  3155                           
  3156                           ;incstack = 0
  3157  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3158                           
  3159                           ; Regs used in _Handle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3160  0005  3180               	pagesel	$
  3161  0006  0020               	movlb	0	; select bank0
  3162  0007  087F               	movf	127,w
  3163  0008  00F3               	movwf	??_Handle
  3164                           
  3165                           ;main.c: 70: UART_Interrupt();
  3166  0009  2310               	fcall	_UART_Interrupt
  3167                           
  3168                           ;main.c: 71: I2C_Interrupt();
  3169  000A  2412               	fcall	_I2C_Interrupt
  3170  000B  0873               	movf	??_Handle,w
  3171  000C  0020               	movlb	0	; select bank0
  3172  000D  00FF               	movwf	127
  3173  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3174  000F  0009               	retfie
  3175  0010                     __end_of_Handle:	
  3176                           
  3177                           	psect	text16
  3178  0310                     __ptext16:	
  3179 ;; *************** function _UART_Interrupt *****************
  3180 ;; Defined at:
  3181 ;;		line 107 in file "PIC_UART.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  x               1    2[COMMON] unsigned char 
  3186 ;;  dt              1    1[COMMON] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1
  3196 ;;      Params:         0       0       0
  3197 ;;      Locals:         2       0       0
  3198 ;;      Temps:          1       0       0
  3199 ;;      Totals:         3       0       0
  3200 ;;Total ram usage:        3 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_Handle
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function _UART_Interrupt
  3211  0310                     _UART_Interrupt:	
  3212                           
  3213                           ;PIC_UART.c: 109: uint8_t x;
  3214                           ;PIC_UART.c: 110: uint8_t dt;
  3215                           ;PIC_UART.c: 112: if (RCIF == 1)
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3219  0310  0020               	movlb	0	; select bank0
  3220  0311  1E91               	btfss	17,5	;volatile
  3221  0312  0008               	return
  3222                           
  3223                           ;PIC_UART.c: 113: {
  3224                           ;PIC_UART.c: 114: dt = RCREG;
  3225  0313  0023               	movlb	3	; select bank3
  3226  0314  0819               	movf	25,w	;volatile
  3227  0315  00F0               	movwf	??_UART_Interrupt
  3228  0316  0870               	movf	??_UART_Interrupt,w
  3229  0317  00F1               	movwf	UART_Interrupt@dt
  3230                           
  3231                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 8;
  3232  0318  0878               	movf	_UART_Buffer_outptr,w
  3233  0319  3E01               	addlw	1
  3234  031A  3907               	andlw	7
  3235  031B  00F0               	movwf	??_UART_Interrupt
  3236  031C  0870               	movf	??_UART_Interrupt,w
  3237  031D  00F2               	movwf	UART_Interrupt@x
  3238                           
  3239                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  3240  031E  0872               	movf	UART_Interrupt@x,w
  3241  031F  0679               	xorwf	_UART_Buffer_inptr,w
  3242  0320  1903               	skipnz
  3243  0321  2B2E               	goto	i1l1496
  3244                           
  3245                           ;PIC_UART.c: 117: {
  3246                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  3247  0322  0871               	movf	UART_Interrupt@dt,w
  3248  0323  00F0               	movwf	??_UART_Interrupt
  3249  0324  0878               	movf	_UART_Buffer_outptr,w
  3250  0325  3E53               	addlw	(low (_UART_Buffer| 0))& (0+255)
  3251  0326  0086               	movwf	6
  3252  0327  0187               	clrf	7
  3253  0328  0870               	movf	??_UART_Interrupt,w
  3254  0329  0081               	movwf	1
  3255                           
  3256                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  3257  032A  0872               	movf	UART_Interrupt@x,w
  3258  032B  00F0               	movwf	??_UART_Interrupt
  3259  032C  0870               	movf	??_UART_Interrupt,w
  3260  032D  00F8               	movwf	_UART_Buffer_outptr
  3261  032E                     i1l1496:	
  3262                           
  3263                           ;PIC_UART.c: 120: }
  3264                           ;PIC_UART.c: 122: if (OERR == 1)
  3265  032E  1C9D               	btfss	29,1	;volatile
  3266  032F  2B34               	goto	i1l131
  3267                           
  3268                           ;PIC_UART.c: 123: {
  3269                           ;PIC_UART.c: 124: CREN = 0;
  3270  0330  121D               	bcf	29,4	;volatile
  3271  0331                     i1l132:	
  3272                           ;PIC_UART.c: 125: while (OERR);
  3273                           
  3274  0331  189D               	btfsc	29,1	;volatile
  3275  0332  2B31               	goto	i1l132
  3276                           
  3277                           ;PIC_UART.c: 126: CREN = 1;
  3278  0333  161D               	bsf	29,4	;volatile
  3279  0334                     i1l131:	
  3280                           
  3281                           ;PIC_UART.c: 127: }
  3282                           ;PIC_UART.c: 128: RCIF = 0;
  3283  0334  0020               	movlb	0	; select bank0
  3284  0335  1291               	bcf	17,5	;volatile
  3285  0336  0008               	return
  3286  0337                     __end_of_UART_Interrupt:	
  3287                           
  3288                           	psect	text17
  3289  0412                     __ptext17:	
  3290 ;; *************** function _I2C_Interrupt *****************
  3291 ;; Defined at:
  3292 ;;		line 31 in file "PIC_I2C.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1
  3306 ;;      Params:         0       0       0
  3307 ;;      Locals:         0       0       0
  3308 ;;      Temps:          0       0       0
  3309 ;;      Totals:         0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    1
  3313 ;; This function calls:
  3314 ;;		_I2C1_Interrupt
  3315 ;; This function is called by:
  3316 ;;		_Handle
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           
  3321                           ;psect for function _I2C_Interrupt
  3322  0412                     _I2C_Interrupt:	
  3323                           
  3324                           ;PIC_I2C.c: 33: I2C1_Interrupt();
  3325                           
  3326                           ;incstack = 0
  3327                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3328  0412  225D               	fcall	_I2C1_Interrupt
  3329  0413  0008               	return
  3330  0414                     __end_of_I2C_Interrupt:	
  3331                           
  3332                           	psect	text18
  3333  025D                     __ptext18:	
  3334 ;; *************** function _I2C1_Interrupt *****************
  3335 ;; Defined at:
  3336 ;;		line 153 in file "PIC_I2C1.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1
  3350 ;;      Params:         0       0       0
  3351 ;;      Locals:         0       0       0
  3352 ;;      Temps:          1       0       0
  3353 ;;      Totals:         1       0       0
  3354 ;;Total ram usage:        1 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_I2C_Interrupt
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _I2C1_Interrupt
  3365  025D                     _I2C1_Interrupt:	
  3366                           
  3367                           ;PIC_I2C1.c: 155: if(SSP1IF&&SSP1IE)
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3371  025D  0020               	movlb	0	; select bank0
  3372  025E  1D91               	btfss	17,3	;volatile
  3373  025F  2AA9               	goto	i1l978
  3374  0260  0021               	movlb	1	; select bank1
  3375  0261  1D91               	btfss	17,3	;volatile
  3376  0262  2AA9               	goto	i1l978
  3377                           
  3378                           ;PIC_I2C1.c: 156: {
  3379                           ;PIC_I2C1.c: 157: if(SSPSTATbits.D_nA)
  3380  0263  0024               	movlb	4	; select bank4
  3381  0264  1E94               	btfss	20,5	;volatile
  3382  0265  2A80               	goto	i1l297
  3383                           
  3384                           ;PIC_I2C1.c: 158: {
  3385                           ;PIC_I2C1.c: 159: if(SSPSTATbits.R_nW)
  3386  0266  1D14               	btfss	20,2	;volatile
  3387  0267  2A73               	goto	i1l954
  3388                           
  3389                           ;PIC_I2C1.c: 160: {
  3390                           ;PIC_I2C1.c: 161: if(!SSPCON2bits.ACKSTAT)
  3391  0268  1B16               	btfsc	22,6	;volatile
  3392  0269  2AA7               	goto	i1l976
  3393  026A                     i1l946:	
  3394                           ;PIC_I2C1.c: 162: {
  3395                           ;PIC_I2C1.c: 163: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3396                           
  3397  026A  0814               	movf	20,w	;volatile
  3398  026B  3901               	andlw	1
  3399  026C  00F0               	movwf	??_I2C1_Interrupt
  3400  026D  0E15               	swapf	21,w	;volatile
  3401  026E  3901               	andlw	1
  3402  026F  0470               	iorwf	??_I2C1_Interrupt,w
  3403  0270  1D03               	btfss	3,2
  3404  0271  2A6A               	goto	i1l946
  3405  0272  2A93               	goto	L2
  3406  0273                     i1l954:	
  3407                           ;PIC_I2C1.c: 167: }
  3408                           ;PIC_I2C1.c: 168: }
  3409                           
  3410                           ;PIC_I2C1.c: 166: SSPCON1bits.CKP = 1;
  3411                           
  3412                           ;PIC_I2C1.c: 165: I2C1_Config.TransmitPoint++;
  3413                           
  3414                           ;PIC_I2C1.c: 164: SSPBUF = *I2C1_Config.TransmitPoint;
  3415                           
  3416                           
  3417                           ;PIC_I2C1.c: 169: else
  3418                           ;PIC_I2C1.c: 170: {
  3419                           ;PIC_I2C1.c: 171: *I2C1_Config.ReceivePoint = SSPBUF;
  3420  0273  0811               	movf	17,w	;volatile
  3421  0274  00F0               	movwf	??_I2C1_Interrupt
  3422  0275  0020               	movlb	0	; select bank0
  3423  0276  086C               	movf	low ((_I2C1_Config| 0+17)),w
  3424  0277  0086               	movwf	6
  3425  0278  0187               	clrf	7
  3426  0279  0870               	movf	??_I2C1_Interrupt,w
  3427  027A  0081               	movwf	1
  3428                           
  3429                           ;PIC_I2C1.c: 172: I2C1_Config.ReceivePoint++;
  3430  027B  3001               	movlw	1
  3431  027C  00F0               	movwf	??_I2C1_Interrupt
  3432  027D  0870               	movf	??_I2C1_Interrupt,w
  3433  027E  07EC               	addwf	low ((_I2C1_Config| 0+17)),f
  3434  027F  2AA5               	goto	i1l974
  3435  0280                     i1l297:	
  3436                           ;PIC_I2C1.c: 174: }
  3437                           ;PIC_I2C1.c: 175: }
  3438                           
  3439                           ;PIC_I2C1.c: 173: SSPCON1bits.CKP = 1;
  3440                           
  3441                           
  3442                           ;PIC_I2C1.c: 176: else if(!SSPSTATbits.D_nA)
  3443  0280  1A94               	btfsc	20,5	;volatile
  3444  0281  2AA7               	goto	i1l976
  3445                           
  3446                           ;PIC_I2C1.c: 177: {
  3447                           ;PIC_I2C1.c: 178: SSPBUF;
  3448  0282  0811               	movf	17,w	;volatile
  3449                           
  3450                           ;PIC_I2C1.c: 180: if(SSPSTATbits.R_nW)
  3451  0283  1D14               	btfss	20,2	;volatile
  3452  0284  2AA0               	goto	i1l972
  3453                           
  3454                           ;PIC_I2C1.c: 181: {
  3455                           ;PIC_I2C1.c: 182: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3456  0285  305B               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3457  0286  00F0               	movwf	??_I2C1_Interrupt
  3458  0287  0870               	movf	??_I2C1_Interrupt,w
  3459  0288  0020               	movlb	0	; select bank0
  3460  0289  00EB               	movwf	low ((_I2C1_Config| 0+16))
  3461  028A                     i1l966:	
  3462                           ;PIC_I2C1.c: 184: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3463                           
  3464  028A  0024               	movlb	4	; select bank4
  3465  028B  0814               	movf	20,w	;volatile
  3466  028C  3901               	andlw	1
  3467  028D  00F0               	movwf	??_I2C1_Interrupt
  3468  028E  0E15               	swapf	21,w	;volatile
  3469  028F  3901               	andlw	1
  3470  0290  0470               	iorwf	??_I2C1_Interrupt,w
  3471  0291  1D03               	btfss	3,2
  3472  0292  2A8A               	goto	i1l966
  3473  0293                     L2:	
  3474                           
  3475                           ;PIC_I2C1.c: 185: SSPBUF = *I2C1_Config.TransmitPoint;
  3476  0293  0020               	movlb	0	; select bank0
  3477  0294  086B               	movf	low ((_I2C1_Config| 0+16)),w
  3478  0295  0086               	movwf	6
  3479  0296  0187               	clrf	7
  3480  0297  0801               	movf	1,w
  3481  0298  0024               	movlb	4	; select bank4
  3482  0299  0091               	movwf	17	;volatile
  3483                           
  3484                           ;PIC_I2C1.c: 186: I2C1_Config.TransmitPoint++;
  3485  029A  3001               	movlw	1
  3486  029B  00F0               	movwf	??_I2C1_Interrupt
  3487  029C  0870               	movf	??_I2C1_Interrupt,w
  3488  029D  0020               	movlb	0	; select bank0
  3489  029E  07EB               	addwf	low ((_I2C1_Config| 0+16)),f
  3490                           
  3491                           ;PIC_I2C1.c: 187: }
  3492  029F  2AA5               	goto	i1l974
  3493  02A0                     i1l972:	
  3494                           
  3495                           ;PIC_I2C1.c: 188: else
  3496                           ;PIC_I2C1.c: 189: {
  3497                           ;PIC_I2C1.c: 190: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3498  02A0  3063               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3499  02A1  00F0               	movwf	??_I2C1_Interrupt
  3500  02A2  0870               	movf	??_I2C1_Interrupt,w
  3501  02A3  0020               	movlb	0	; select bank0
  3502  02A4  00EC               	movwf	low ((_I2C1_Config| 0+17))
  3503  02A5                     i1l974:	
  3504                           
  3505                           ;PIC_I2C1.c: 191: }
  3506                           ;PIC_I2C1.c: 192: SSPCON1bits.CKP = 1;
  3507  02A5  0024               	movlb	4	; select bank4
  3508  02A6  1615               	bsf	21,4	;volatile
  3509  02A7                     i1l976:	
  3510                           
  3511                           ;PIC_I2C1.c: 193: }
  3512                           ;PIC_I2C1.c: 194: SSP1IF = 0;
  3513  02A7  0020               	movlb	0	; select bank0
  3514  02A8  1191               	bcf	17,3	;volatile
  3515  02A9                     i1l978:	
  3516                           
  3517                           ;PIC_I2C1.c: 195: }
  3518                           ;PIC_I2C1.c: 197: if(BCL1IE&&BCL1IF)
  3519  02A9  0021               	movlb	1	; select bank1
  3520  02AA  1D92               	btfss	18,3	;volatile
  3521  02AB  0008               	return
  3522  02AC  0020               	movlb	0	; select bank0
  3523  02AD  1D92               	btfss	18,3	;volatile
  3524  02AE  0008               	return
  3525                           
  3526                           ;PIC_I2C1.c: 198: BCL1IF = 0;
  3527  02AF  1192               	bcf	18,3	;volatile
  3528  02B0  0008               	return
  3529  02B1                     __end_of_I2C1_Interrupt:	
  3530  007E                     btemp	set	126	;btemp
  3531  007E                     int$flags	set	126
  3532  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     51      78
    BANK1            32      0       0

Pointer List with Targets:

    I2C1_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@senddata(BANK0[2]), 

    I2C1_Init@I2C1_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_InitPort(), 

    I2C_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@senddata(BANK0[2]), 

    S272$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S272$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    MPU6050_Read_MultiData@pData	PTR unsigned char  size(1) Largest target is 14
		 -> main@accel_t_gyro(BANK0[14]), 

    MPU6050_Read_Data@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Init@addr(BANK0[1]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->_UART_InitPort
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive
    _I2C1_Init->_I2C_InitPort

Critical Paths under _Handle in COMMON

    _Handle->_UART_Interrupt
    _I2C_Interrupt->_I2C1_Interrupt

Critical Paths under _main in BANK0

    _main->_MPU6050_Init
    _MPU6050_Read_MultiData->_I2C_Receive
    _MPU6050_Read_MultiData->_I2C_Transmit
    _MPU6050_Init->_MPU6050_Write_Data
    _MPU6050_Write_Data->_I2C_Transmit
    _MPU6050_Read_Data->_I2C_Receive
    _MPU6050_Read_Data->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive

Critical Paths under _Handle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   10203
                                             26 BANK0     25    25      0
                         _Basic_Init
                          _I2C1_Init
                       _MPU6050_Init
             _MPU6050_Read_MultiData
                          _UART_Init
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     194
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_MultiData                               8     6      2    2991
                                             12 BANK0      8     6      2
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         5     5      0    4726
                                             21 BANK0      5     5      0
                  _MPU6050_Read_Data
                 _MPU6050_Write_Data
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write_Data                                   9     8      1    1722
                                             12 BANK0      9     8      1
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read_Data                                    6     5      1    2883
                                             12 BANK0      6     5      1
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1469
                                              4 BANK0      8     5      3
                      _I2C1_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          8     5      3    1229
                                              4 BANK0      8     5      3
                       _I2C1_Receive
 ---------------------------------------------------------------------------------
 (3) _I2C1_Receive                                         8     6      2     606
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Init                                            6     1      5     556
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _I2C_InitPort *
 ---------------------------------------------------------------------------------
 (2) _I2C_InitPort                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handle                                               1     1      0      68
                                              3 COMMON     1     1      0
                      _I2C_Interrupt
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (6) _UART_Interrupt                                       3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C_Interrupt                                        0     0      0       0
                     _I2C1_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C1_Init
     _I2C_InitPort *
   _MPU6050_Init
     _MPU6050_Read_Data
       _I2C_Receive
         _I2C1_Receive
       _I2C_Transmit
         _I2C1_Transmit
     _MPU6050_Write_Data
       _I2C_Transmit
         _I2C1_Transmit
   _MPU6050_Read_MultiData
     _I2C_Receive
       _I2C1_Receive
     _I2C_Transmit
       _I2C1_Transmit
   _UART_Init
     _UART_InitPort *
   _UART_Transmit

 _Handle (ROOT)
   _I2C_Interrupt
     _I2C1_Interrupt
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      58       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      58       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Jan 14 14:05:54 2018

                    __CFG_CP$OFF 0000                      _SSPSTATbits 0214                              l110 0405  
                            l211 0214                              l215 0254                              l231 0198  
                            l240 01BF                              l218 023D                              l281 013B  
                            l249 01D8                              l282 013D                              l266 00FC  
                            l275 0115                              l288 014F                              _GIE 005F  
                   __CFG_CPD$OFF 0000             __size_of_I2C_Receive 001B                     __CFG_BORV$LO 0000  
                            wreg 0009                       _Basic_Init 03F7               MPU6050_Init@result 0037  
                   __CFG_LVP$OFF 0000                             l1610 0182                             l1700 016C  
                           l1612 018C                             l1622 01AC                             l1704 0174  
                           l1632 01A4                             l1712 039B                             l1706 017C  
                           l1730 03CA                             l1650 01FA                             l1634 01A8  
                           l1724 03B6                             l1636 01CD                             l1716 03AA  
                           l1662 00E5                             l1646 01DE                             l1654 01FD  
                           l1718 03AF                             l1664 00EF                             l1728 03C5  
                           l1648 01F5                             l1656 0205                             l1674 010B  
                           l1780 0234                             l1772 0229                             l1828 004A  
                           l1774 022B                             l1766 021E                             l1678 0122  
                           l1686 0107                             l1792 024B                             l1688 0144  
                           l1698 0155                             l1788 0249                             _CREN 0CEC  
                           u1167 0037                             u1177 0044                             _PEIE 005E  
                           _RCIE 048D                             _RCIF 008D                             _OERR 0CE9  
                           _SPEN 0CEF                             _TXIF 008C                             _WPUA 020C  
                ??_I2C1_Transmit 0076                     __CFG_WRT$OFF 0000            __size_of_I2C_InitPort 000D  
                           _main 001C                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                 ??_I2C1_Interrupt 0070  
                           start 0010                    __CFG_IESO$OFF 0000            __size_of_I2C_Transmit 001B  
                  __CFG_PLLEN$ON 0000                __end_of_I2C1_Init 025D                            ?_main 0070  
                          _BRG16 0CFB                    __CFG_WDTE$OFF 0000                            i1l131 0334  
                          i1l132 0331                            i1l297 0280                            i1l946 026A  
                          i1l954 0273                            i1l972 02A0                            i1l974 02A5  
                          i1l966 028A                            i1l976 02A7                            i1l978 02A9  
                          _RCREG 0199                            _RCSTA 019D                            _PORTA 000C  
                          _TRISA 008C                            _TXREG 019A                            _TXSTA 019E  
                 __CFG_FCMEN$OFF 0000               __size_of_UART_Init 0038                     _I2C_InitPort 03EA  
              _UART_Buffer_inptr 0079                    ?_MPU6050_Init 0070                   __CFG_BOREN$OFF 0000  
                          pclath 000A                     main@swap_170 0040                     main@swap_171 0041  
                   main@swap_172 0042                     main@swap_173 0043                     main@swap_174 0044  
                   main@swap_169 003F         ??_MPU6050_Read_MultiData 002E           __size_of_I2C_Interrupt 0002  
                          status 0003                            wtemp0 007E                     _I2C_Transmit 0396  
                 __CFG_MCLRE$OFF 0000                  __initialization 0011                     __end_of_main 00E2  
                         ??_main 003A                I2C_Receive@result 002B                I2C1_Receive@i_455 0023  
              I2C1_Receive@pData 0074                      ?_Basic_Init 0070                   ??_MPU6050_Init 0035  
                         _BCL1IE 0493                           _BCL1IF 0093                           _APFCON 011D  
                         _ANSELA 018C                           i1l1496 032E                           _OSCCON 0099  
                         _SPBRGH 019C                           _SPBRGL 019B                           _SSP1IE 048B  
                         _SSP1IF 008B                           _SSPADD 0212                           _SSPBUF 0211  
                         _SSPMSK 0213                           _Handle 0004                   __CFG_PWRTE$OFF 0000  
           MPU6050_Read_Data@reg 0030                __end_of_UART_Init 02E9               _UART_Buffer_outptr 0078  
                  _I2C_Interrupt 0412      __size_of_MPU6050_Write_Data 001F          __size_of_UART_Interrupt 0027  
               I2C_Transmit@I2Cx 002A            __end_of_UART_InitPort 03EA                 I2C_Transmit@size 0026  
        UART_Init@UART_Init_PORT 0075          __end_of__initialization 0019  __size_of_MPU6050_Read_MultiData 0027  
          __end_of_UART_Transmit 040C                   __pcstackCOMMON 0070              __size_of_Basic_Init 000D  
                 ?_I2C_Interrupt 0070               I2C_Receive@address 0024              I2C1_Transmit@result 0023  
                     __pbssBANK0 0053       MPU6050_Write_Data@senddata 0032                          ?_Handle 0070  
             I2C1_Receive@result 0021                       __pmaintext 001C             __end_of_MPU6050_Init 0396  
                     __pintentry 0004           _MPU6050_Read_MultiData 02E9                    ??_I2C_Receive 0027  
              _MPU6050_Read_Data 0337               ?_MPU6050_Read_Data 002C                        _I2C1_Init 0208  
                        _SSPCON1 0215                          _SSPCON2 0216                          _SSPSTAT 0214  
            ??_MPU6050_Read_Data 002D                __end_of_baudtable 03DC          MPU6050_Write_Data@pData 002C  
          __end_of_I2C1_Transmit 0208                  __size_of_Handle 000C                  ??_I2C_Interrupt 0071  
      __end_of_MPU6050_Read_Data 035C        MPU6050_Read_MultiData@reg 0032                  __CFG_STVREN$OFF 0000  
                        __ptext1 0404                          __ptext2 02B1                          __ptext3 03DC  
                        __ptext4 02E9                          __ptext5 037B                          __ptext6 035C  
                        __ptext7 0337                          __ptext8 0396                          __ptext9 017F  
                 _UART_Interrupt 0310                       ?_I2C1_Init 0020                     ??_Basic_Init 0074  
            __end_of_I2C_Receive 03CC                          clrloop0 040D             end_of_initialization 0019  
               I2C1_Init@address 0022                    ?_I2C1_Receive 0074                      _I2C1_Config 005B  
              I2C_Transmit@pData 0025               __end_of_Basic_Init 0404           __end_of_UART_Interrupt 0337  
                      _UART_Init 02B1          __size_of_I2C1_Interrupt 0054                 __CFG_FOSC$INTOSC 0000  
               MPU6050_Init@addr 0039                 MPU6050_Init@data 0038                   ??_I2C1_Receive 0076  
          __size_of_MPU6050_Init 001B                       main@result 003D                   __end_of_Handle 0010  
               UART_Interrupt@dt 0071       __size_of_MPU6050_Read_Data 0025                  ?_UART_Interrupt 0070  
                     ?_UART_Init 0075       __end_of_MPU6050_Write_Data 037B                      _I2C_Receive 03B1  
            start_initialization 0011                      ??_I2C1_Init 0075                 I2C_Receive@pData 0025  
           I2C1_Transmit@address 0020                     _MPU6050_Init 037B                 I2C1_Receive@size 0075  
                       ??_Handle 0073            MPU6050_Write_Data@reg 0031          ?_MPU6050_Read_MultiData 002C  
         __size_of_UART_InitPort 000E          MPU6050_Read_Data@result 0031                      __pbssCOMMON 0078  
                      ___latbits 0000           __size_of_UART_Transmit 0008                    __pcstackBANK0 0020  
            I2C1_Receive@address 0020                    ?_I2C_InitPort 0070               I2C1_Transmit@i_448 0022  
    MPU6050_Read_MultiData@pData 002C               I2C1_Transmit@pData 0074                        _baudtable 03CC  
                  ?_I2C_Transmit 0024   __end_of_MPU6050_Read_MultiData 0310                      ??_UART_Init 0020  
                 _I2C1_Interrupt 025D             __end_of_I2C1_Receive 017F                   ??_I2C_InitPort 0074  
                  _UART_InitPort 03DC          I2C1_Init@I2C1_Init_PORT 0020                   ??_I2C_Transmit 0027  
                      clear_ram0 040C                    _UART_Transmit 0404           __end_of_I2C1_Interrupt 02B1  
          __end_of_I2C_Interrupt 0414           __size_of_I2C1_Transmit 0089                   ?_UART_InitPort 0070  
                UART_Interrupt@x 0072                  I2C_Receive@I2Cx 002A         MPU6050_Write_Data@result 0034  
                I2C_Receive@size 0026                   ?_UART_Transmit 0070           MPU6050_Read_Data@pData 002C  
               ??_UART_Interrupt 0070                  ?_I2C1_Interrupt 0070                     ?_I2C_Receive 0024  
     MPU6050_Read_MultiData@size 002D                I2C1_Transmit@size 0075                     UART_Init@brg 0077  
                       __ptext10 03B1                         __ptext11 00E2                         __ptext12 0208  
                       __ptext13 03EA                         __ptext14 03F7                         __ptext16 0310  
                       __ptext17 0412                         __ptext18 025D               _MPU6050_Write_Data 035C  
                  __size_of_main 00C6              ?_MPU6050_Write_Data 002C                   I2C1_Init@Speed 0024  
                  _I2C1_Transmit 017F             __end_of_I2C_InitPort 03F7            __size_of_I2C1_Receive 009D  
                       int$flags 007E              I2C_Transmit@address 0024                         main@swap 003E  
   MPU6050_Read_MultiData@result 0033             ??_MPU6050_Write_Data 002D             __end_of_I2C_Transmit 03B1  
                ??_UART_InitPort 0074                         intlevel1 0000                  ??_UART_Transmit 0074  
                   _I2C1_Receive 00E2                  UART_Transmit@dt 0074                   ?_I2C1_Transmit 0074  
              __CFG_CLKOUTEN$OFF 0000                      _UART_Buffer 0053                    I2C1_Init@mode 0023  
                  I2C1_Receive@i 0022               I2C_Transmit@result 002B                    __pstringtext1 03CC  
               main@accel_t_gyro 0045                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
                 I2C1_Transmit@i 0021               __size_of_I2C1_Init 0055  
