

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Jan 14 14:17:55 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.43
    41                           ; Generated 25/07/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC12F1822 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  0111                     	;# 
   116  0112                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  018C                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020C                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0216                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0217                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0294                     	;# 
   168  0295                     	;# 
   169  0295                     	;# 
   170  0296                     	;# 
   171  0391                     	;# 
   172  0392                     	;# 
   173  0393                     	;# 
   174  039A                     	;# 
   175  039C                     	;# 
   176  039D                     	;# 
   177  039E                     	;# 
   178  039F                     	;# 
   179  0FE4                     	;# 
   180  0FE5                     	;# 
   181  0FE6                     	;# 
   182  0FE7                     	;# 
   183  0FE8                     	;# 
   184  0FE9                     	;# 
   185  0FEA                     	;# 
   186  0FEB                     	;# 
   187  0FED                     	;# 
   188  0FEE                     	;# 
   189  0FEF                     	;# 
   190  0000                     	;# 
   191  0001                     	;# 
   192  0002                     	;# 
   193  0003                     	;# 
   194  0004                     	;# 
   195  0005                     	;# 
   196  0006                     	;# 
   197  0007                     	;# 
   198  0008                     	;# 
   199  0009                     	;# 
   200  000A                     	;# 
   201  000B                     	;# 
   202  000C                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0015                     	;# 
   206  0016                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001C                     	;# 
   214  001E                     	;# 
   215  001F                     	;# 
   216  008C                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  010C                     	;# 
   231  0111                     	;# 
   232  0112                     	;# 
   233  0115                     	;# 
   234  0116                     	;# 
   235  0117                     	;# 
   236  0118                     	;# 
   237  0119                     	;# 
   238  011A                     	;# 
   239  011B                     	;# 
   240  011D                     	;# 
   241  011D                     	;# 
   242  018C                     	;# 
   243  0191                     	;# 
   244  0191                     	;# 
   245  0192                     	;# 
   246  0193                     	;# 
   247  0193                     	;# 
   248  0193                     	;# 
   249  0194                     	;# 
   250  0195                     	;# 
   251  0196                     	;# 
   252  0199                     	;# 
   253  019A                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019B                     	;# 
   258  019C                     	;# 
   259  019C                     	;# 
   260  019D                     	;# 
   261  019E                     	;# 
   262  019F                     	;# 
   263  020C                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0216                     	;# 
   276  0216                     	;# 
   277  0217                     	;# 
   278  0217                     	;# 
   279  0291                     	;# 
   280  0291                     	;# 
   281  0292                     	;# 
   282  0293                     	;# 
   283  0294                     	;# 
   284  0295                     	;# 
   285  0295                     	;# 
   286  0296                     	;# 
   287  0391                     	;# 
   288  0392                     	;# 
   289  0393                     	;# 
   290  039A                     	;# 
   291  039C                     	;# 
   292  039D                     	;# 
   293  039E                     	;# 
   294  039F                     	;# 
   295  0FE4                     	;# 
   296  0FE5                     	;# 
   297  0FE6                     	;# 
   298  0FE7                     	;# 
   299  0FE8                     	;# 
   300  0FE9                     	;# 
   301  0FEA                     	;# 
   302  0FEB                     	;# 
   303  0FED                     	;# 
   304  0FEE                     	;# 
   305  0FEF                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  008C                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0095                     	;# 
   336  0096                     	;# 
   337  0097                     	;# 
   338  0098                     	;# 
   339  0099                     	;# 
   340  009A                     	;# 
   341  009B                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  010C                     	;# 
   347  0111                     	;# 
   348  0112                     	;# 
   349  0115                     	;# 
   350  0116                     	;# 
   351  0117                     	;# 
   352  0118                     	;# 
   353  0119                     	;# 
   354  011A                     	;# 
   355  011B                     	;# 
   356  011D                     	;# 
   357  011D                     	;# 
   358  018C                     	;# 
   359  0191                     	;# 
   360  0191                     	;# 
   361  0192                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0193                     	;# 
   365  0194                     	;# 
   366  0195                     	;# 
   367  0196                     	;# 
   368  0199                     	;# 
   369  019A                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019C                     	;# 
   375  019C                     	;# 
   376  019D                     	;# 
   377  019E                     	;# 
   378  019F                     	;# 
   379  020C                     	;# 
   380  0211                     	;# 
   381  0211                     	;# 
   382  0212                     	;# 
   383  0212                     	;# 
   384  0213                     	;# 
   385  0213                     	;# 
   386  0214                     	;# 
   387  0214                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0215                     	;# 
   391  0216                     	;# 
   392  0216                     	;# 
   393  0217                     	;# 
   394  0217                     	;# 
   395  0291                     	;# 
   396  0291                     	;# 
   397  0292                     	;# 
   398  0293                     	;# 
   399  0294                     	;# 
   400  0295                     	;# 
   401  0295                     	;# 
   402  0296                     	;# 
   403  0391                     	;# 
   404  0392                     	;# 
   405  0393                     	;# 
   406  039A                     	;# 
   407  039C                     	;# 
   408  039D                     	;# 
   409  039E                     	;# 
   410  039F                     	;# 
   411  0FE4                     	;# 
   412  0FE5                     	;# 
   413  0FE6                     	;# 
   414  0FE7                     	;# 
   415  0FE8                     	;# 
   416  0FE9                     	;# 
   417  0FEA                     	;# 
   418  0FEB                     	;# 
   419  0FED                     	;# 
   420  0FEE                     	;# 
   421  0FEF                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0008                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0016                     	;# 
   440  0017                     	;# 
   441  0018                     	;# 
   442  0019                     	;# 
   443  001A                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  008C                     	;# 
   449  0091                     	;# 
   450  0092                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009A                     	;# 
   457  009B                     	;# 
   458  009B                     	;# 
   459  009C                     	;# 
   460  009D                     	;# 
   461  009E                     	;# 
   462  010C                     	;# 
   463  0111                     	;# 
   464  0112                     	;# 
   465  0115                     	;# 
   466  0116                     	;# 
   467  0117                     	;# 
   468  0118                     	;# 
   469  0119                     	;# 
   470  011A                     	;# 
   471  011B                     	;# 
   472  011D                     	;# 
   473  011D                     	;# 
   474  018C                     	;# 
   475  0191                     	;# 
   476  0191                     	;# 
   477  0192                     	;# 
   478  0193                     	;# 
   479  0193                     	;# 
   480  0193                     	;# 
   481  0194                     	;# 
   482  0195                     	;# 
   483  0196                     	;# 
   484  0199                     	;# 
   485  019A                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019C                     	;# 
   491  019C                     	;# 
   492  019D                     	;# 
   493  019E                     	;# 
   494  019F                     	;# 
   495  020C                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0212                     	;# 
   500  0213                     	;# 
   501  0213                     	;# 
   502  0214                     	;# 
   503  0214                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0216                     	;# 
   508  0216                     	;# 
   509  0217                     	;# 
   510  0217                     	;# 
   511  0291                     	;# 
   512  0291                     	;# 
   513  0292                     	;# 
   514  0293                     	;# 
   515  0294                     	;# 
   516  0295                     	;# 
   517  0295                     	;# 
   518  0296                     	;# 
   519  0391                     	;# 
   520  0392                     	;# 
   521  0393                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0FE4                     	;# 
   528  0FE5                     	;# 
   529  0FE6                     	;# 
   530  0FE7                     	;# 
   531  0FE8                     	;# 
   532  0FE9                     	;# 
   533  0FEA                     	;# 
   534  0FEB                     	;# 
   535  0FED                     	;# 
   536  0FEE                     	;# 
   537  0FEF                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0015                     	;# 
   554  0016                     	;# 
   555  0016                     	;# 
   556  0017                     	;# 
   557  0018                     	;# 
   558  0019                     	;# 
   559  001A                     	;# 
   560  001B                     	;# 
   561  001C                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  008C                     	;# 
   565  0091                     	;# 
   566  0092                     	;# 
   567  0095                     	;# 
   568  0096                     	;# 
   569  0097                     	;# 
   570  0098                     	;# 
   571  0099                     	;# 
   572  009A                     	;# 
   573  009B                     	;# 
   574  009B                     	;# 
   575  009C                     	;# 
   576  009D                     	;# 
   577  009E                     	;# 
   578  010C                     	;# 
   579  0111                     	;# 
   580  0112                     	;# 
   581  0115                     	;# 
   582  0116                     	;# 
   583  0117                     	;# 
   584  0118                     	;# 
   585  0119                     	;# 
   586  011A                     	;# 
   587  011B                     	;# 
   588  011D                     	;# 
   589  011D                     	;# 
   590  018C                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0193                     	;# 
   597  0194                     	;# 
   598  0195                     	;# 
   599  0196                     	;# 
   600  0199                     	;# 
   601  019A                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019C                     	;# 
   607  019C                     	;# 
   608  019D                     	;# 
   609  019E                     	;# 
   610  019F                     	;# 
   611  020C                     	;# 
   612  0211                     	;# 
   613  0211                     	;# 
   614  0212                     	;# 
   615  0212                     	;# 
   616  0213                     	;# 
   617  0213                     	;# 
   618  0214                     	;# 
   619  0214                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0216                     	;# 
   624  0216                     	;# 
   625  0217                     	;# 
   626  0217                     	;# 
   627  0291                     	;# 
   628  0291                     	;# 
   629  0292                     	;# 
   630  0293                     	;# 
   631  0294                     	;# 
   632  0295                     	;# 
   633  0295                     	;# 
   634  0296                     	;# 
   635  0391                     	;# 
   636  0392                     	;# 
   637  0393                     	;# 
   638  039A                     	;# 
   639  039C                     	;# 
   640  039D                     	;# 
   641  039E                     	;# 
   642  039F                     	;# 
   643  0FE4                     	;# 
   644  0FE5                     	;# 
   645  0FE6                     	;# 
   646  0FE7                     	;# 
   647  0FE8                     	;# 
   648  0FE9                     	;# 
   649  0FEA                     	;# 
   650  0FEB                     	;# 
   651  0FED                     	;# 
   652  0FEE                     	;# 
   653  0FEF                     	;# 
   654  0000                     	;# 
   655  0001                     	;# 
   656  0002                     	;# 
   657  0003                     	;# 
   658  0004                     	;# 
   659  0005                     	;# 
   660  0006                     	;# 
   661  0007                     	;# 
   662  0008                     	;# 
   663  0009                     	;# 
   664  000A                     	;# 
   665  000B                     	;# 
   666  000C                     	;# 
   667  0011                     	;# 
   668  0012                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0016                     	;# 
   672  0017                     	;# 
   673  0018                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  001E                     	;# 
   679  001F                     	;# 
   680  008C                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  010C                     	;# 
   695  0111                     	;# 
   696  0112                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  018C                     	;# 
   707  0191                     	;# 
   708  0191                     	;# 
   709  0192                     	;# 
   710  0193                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0194                     	;# 
   714  0195                     	;# 
   715  0196                     	;# 
   716  0199                     	;# 
   717  019A                     	;# 
   718  019B                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019B                     	;# 
   722  019C                     	;# 
   723  019C                     	;# 
   724  019D                     	;# 
   725  019E                     	;# 
   726  019F                     	;# 
   727  020C                     	;# 
   728  0211                     	;# 
   729  0211                     	;# 
   730  0212                     	;# 
   731  0212                     	;# 
   732  0213                     	;# 
   733  0213                     	;# 
   734  0214                     	;# 
   735  0214                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0215                     	;# 
   739  0216                     	;# 
   740  0216                     	;# 
   741  0217                     	;# 
   742  0217                     	;# 
   743  0291                     	;# 
   744  0291                     	;# 
   745  0292                     	;# 
   746  0293                     	;# 
   747  0294                     	;# 
   748  0295                     	;# 
   749  0295                     	;# 
   750  0296                     	;# 
   751  0391                     	;# 
   752  0392                     	;# 
   753  0393                     	;# 
   754  039A                     	;# 
   755  039C                     	;# 
   756  039D                     	;# 
   757  039E                     	;# 
   758  039F                     	;# 
   759  0FE4                     	;# 
   760  0FE5                     	;# 
   761  0FE6                     	;# 
   762  0FE7                     	;# 
   763  0FE8                     	;# 
   764  0FE9                     	;# 
   765  0FEA                     	;# 
   766  0FEB                     	;# 
   767  0FED                     	;# 
   768  0FEE                     	;# 
   769  0FEF                     	;# 
   770                           
   771                           	psect	stringtext1
   772  0574                     __pstringtext1:	
   773  0574                     _baudtable:	
   774  0574  340A               	retlw	10
   775  0575  341A               	retlw	26
   776  0576  3404               	retlw	4
   777  0577  340D               	retlw	13
   778  0578  3440               	retlw	64
   779  0579  3403               	retlw	3
   780  057A  34CF               	retlw	207
   781  057B  3400               	retlw	0
   782  057C  34BF               	retlw	191
   783  057D  3400               	retlw	0
   784  057E  3467               	retlw	103
   785  057F  3400               	retlw	0
   786  0580  3422               	retlw	34
   787  0581  3400               	retlw	0
   788  0582  3410               	retlw	16
   789  0583  3400               	retlw	0
   790  0584                     __end_of_baudtable:	
   791  0015                     _TMR0	set	21
   792  000C                     _PORTA	set	12
   793  005D                     _TMR0IE	set	93
   794  005A                     _TMR0IF	set	90
   795  0093                     _BCL1IF	set	147
   796  008B                     _SSP1IF	set	139
   797  008C                     _TXIF	set	140
   798  005F                     _GIE	set	95
   799  005E                     _PEIE	set	94
   800  008D                     _RCIF	set	141
   801  0095                     _OPTION_REG	set	149
   802  008C                     _TRISA	set	140
   803  0099                     _OSCCON	set	153
   804  0493                     _BCL1IE	set	1171
   805  048B                     _SSP1IE	set	1163
   806  048D                     _RCIE	set	1165
   807  011D                     _APFCON	set	285
   808  0199                     _RCREG	set	409
   809  019A                     _TXREG	set	410
   810  019C                     _SPBRGH	set	412
   811  019B                     _SPBRGL	set	411
   812  019D                     _RCSTA	set	413
   813  019E                     _TXSTA	set	414
   814  018C                     _ANSELA	set	396
   815  0CEC                     _CREN	set	3308
   816  0CE9                     _OERR	set	3305
   817  0CEF                     _SPEN	set	3311
   818  0CFB                     _BRG16	set	3323
   819  0214                     _SSPSTATbits	set	532
   820  0211                     _SSPBUF	set	529
   821  0216                     _SSPCON2	set	534
   822  0213                     _SSPMSK	set	531
   823  0216                     _SSPCON2bits	set	534
   824  0215                     _SSPCON1bits	set	533
   825  0212                     _SSPADD	set	530
   826  0214                     _SSPSTAT	set	532
   827  0215                     _SSPCON1	set	533
   828  020C                     _WPUA	set	524
   829                           
   830                           ; #config settings
   831  0000                     
   832                           	psect	cinit
   833  0092                     start_initialization:	
   834  0092                     __initialization:	
   835                           
   836                           ; Clear objects allocated to BANK0
   837  0092  3048               	movlw	low __pbssBANK0
   838  0093  0084               	movwf	4
   839  0094  3000               	movlw	high __pbssBANK0
   840  0095  0085               	movwf	5
   841  0096  301B               	movlw	27
   842  0097  25C4               	fcall	clear_ram0
   843                           
   844                           ; Clear objects allocated to BANK1
   845  0098  30A0               	movlw	low __pbssBANK1
   846  0099  0084               	movwf	4
   847  009A  3000               	movlw	high __pbssBANK1
   848  009B  0085               	movwf	5
   849  009C  3013               	movlw	19
   850  009D  25C4               	fcall	clear_ram0
   851  009E                     end_of_initialization:	
   852                           ;End of C runtime variable initialization code
   853                           
   854  009E                     __end_of__initialization:	
   855  009E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   856  009F  0020               	movlb	0
   857  00A0  2BDD               	ljmp	_main	;jump to C main() function
   858                           
   859                           	psect	bssBANK0
   860  0048                     __pbssBANK0:	
   861  0048                     _UART_Buffer:	
   862  0048                     	ds	8
   863  0050                     Handle@count:	
   864  0050                     	ds	2
   865  0052                     _TMR0_ReloadTemp:	
   866  0052                     	ds	1
   867  0053                     _UART_Buffer_outptr:	
   868  0053                     	ds	1
   869  0054                     _UART_Buffer_inptr:	
   870  0054                     	ds	1
   871  0055                     Handle@accel_t_gyro:	
   872  0055                     	ds	14
   873                           
   874                           	psect	bssBANK1
   875  00A0                     __pbssBANK1:	
   876  00A0                     _I2C1_Config:	
   877  00A0                     	ds	19
   878                           
   879                           	psect	clrtext
   880  05C4                     clear_ram0:	
   881                           ;	Called with FSR0 containing the base address, and
   882                           ;	WREG with the size to clear
   883                           
   884  05C4  0064               	clrwdt	;clear the watchdog before getting into this loop
   885  05C5                     clrloop0:	
   886  05C5  0180               	clrf	0	;clear RAM location pointed to by FSR
   887  05C6  3101               	addfsr 0,1
   888  05C7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   889  05C8  2DC5               	goto	clrloop0	;have we reached the end yet?
   890  05C9  3400               	retlw	0	;all done for this memory range, return
   891                           
   892                           	psect	cstackBANK1
   893  00B3                     __pcstackBANK1:	
   894  00B3                     MPU6050_Init@result:	
   895                           
   896                           ; 1 bytes @ 0x0
   897  00B3                     	ds	1
   898  00B4                     MPU6050_Init@data:	
   899                           
   900                           ; 1 bytes @ 0x1
   901  00B4                     	ds	1
   902  00B5                     MPU6050_Init@addr:	
   903                           
   904                           ; 1 bytes @ 0x2
   905  00B5                     	ds	1
   906  00B6                     ??_main:	
   907                           
   908                           ; 1 bytes @ 0x3
   909  00B6                     	ds	2
   910                           
   911                           	psect	cstackCOMMON
   912  0070                     __pcstackCOMMON:	
   913  0070                     ?_Basic_Init:	
   914  0070                     ?_I2C_InitPort:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_UART_InitPort:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_MPU6050_Init:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_Timer0_CheckFlag:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ??_Timer0_CheckFlag:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_UART_Transmit:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ??_UART_Transmit:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_UART_Interrupt:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ??_UART_Interrupt:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_I2C_Interrupt:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_I2C1_Interrupt:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ??_I2C1_Interrupt:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_main:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ?_SWAP:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?_Handle:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?i1_I2C1_Transmit:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0070                     ?i1_I2C1_Receive:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0070                     SWAP@y:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     UART_Transmit@dt:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     i1I2C1_Transmit@pData:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     i1I2C1_Receive@pData:	
   975                           ; 1 bytes @ 0x0
   976                           
   977                           
   978                           ; 1 bytes @ 0x0
   979  0070                     	ds	1
   980  0071                     ??_I2C_Interrupt:	
   981  0071                     ??_SWAP:	
   982                           ; 1 bytes @ 0x1
   983                           
   984  0071                     UART_Interrupt@dt:	
   985                           ; 1 bytes @ 0x1
   986                           
   987  0071                     i1I2C1_Transmit@size:	
   988                           ; 1 bytes @ 0x1
   989                           
   990  0071                     i1I2C1_Receive@size:	
   991                           ; 1 bytes @ 0x1
   992                           
   993                           
   994                           ; 1 bytes @ 0x1
   995  0071                     	ds	1
   996  0072                     ??i1_I2C1_Transmit:	
   997  0072                     ??i1_I2C1_Receive:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0072                     SWAP@swap:	
  1001                           ; 1 bytes @ 0x2
  1002                           
  1003  0072                     UART_Interrupt@x:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0x2
  1008  0072                     	ds	1
  1009  0073                     SWAP@x:	
  1010                           
  1011                           ; 1 bytes @ 0x3
  1012  0073                     	ds	1
  1013  0074                     i1I2C1_Transmit@address:	
  1014  0074                     i1I2C1_Receive@address:	
  1015                           ; 1 bytes @ 0x4
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x4
  1019  0074                     	ds	1
  1020  0075                     i1I2C1_Transmit@i:	
  1021  0075                     i1I2C1_Receive@result:	
  1022                           ; 1 bytes @ 0x5
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x5
  1026  0075                     	ds	1
  1027  0076                     i1I2C1_Transmit@i_465:	
  1028  0076                     i1I2C1_Receive@i:	
  1029                           ; 1 bytes @ 0x6
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x6
  1033  0076                     	ds	1
  1034  0077                     i1I2C1_Transmit@result:	
  1035  0077                     i1I2C1_Receive@i_472:	
  1036                           ; 1 bytes @ 0x7
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0x7
  1040  0077                     	ds	1
  1041  0078                     ?i1_I2C_Transmit:	
  1042  0078                     ?i1_I2C_Receive:	
  1043                           ; 1 bytes @ 0x8
  1044                           
  1045  0078                     i1I2C_Transmit@address:	
  1046                           ; 1 bytes @ 0x8
  1047                           
  1048  0078                     i1I2C_Receive@address:	
  1049                           ; 1 bytes @ 0x8
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x8
  1053  0078                     	ds	1
  1054  0079                     i1I2C_Transmit@pData:	
  1055  0079                     i1I2C_Receive@pData:	
  1056                           ; 1 bytes @ 0x9
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x9
  1060  0079                     	ds	1
  1061  007A                     i1I2C_Transmit@size:	
  1062  007A                     i1I2C_Receive@size:	
  1063                           ; 1 bytes @ 0xA
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0xA
  1067  007A                     	ds	1
  1068  007B                     ??i1_I2C_Transmit:	
  1069  007B                     ??i1_I2C_Receive:	
  1070                           ; 1 bytes @ 0xB
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0xB
  1074  007B                     	ds	3
  1075                           
  1076                           	psect	cstackBANK0
  1077  0020                     __pcstackBANK0:	
  1078  0020                     i1I2C_Transmit@I2Cx:	
  1079  0020                     i1I2C_Receive@I2Cx:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082                           
  1083                           ; 1 bytes @ 0x0
  1084  0020                     	ds	1
  1085  0021                     i1I2C_Transmit@result:	
  1086  0021                     i1I2C_Receive@result:	
  1087                           ; 1 bytes @ 0x1
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x1
  1091  0021                     	ds	1
  1092  0022                     ?_MPU6050_Read_MultiData:	
  1093  0022                     MPU6050_Read_MultiData@pData:	
  1094                           ; 1 bytes @ 0x2
  1095                           
  1096                           
  1097                           ; 1 bytes @ 0x2
  1098  0022                     	ds	1
  1099  0023                     MPU6050_Read_MultiData@size:	
  1100                           
  1101                           ; 1 bytes @ 0x3
  1102  0023                     	ds	1
  1103  0024                     ??_MPU6050_Read_MultiData:	
  1104                           
  1105                           ; 1 bytes @ 0x4
  1106  0024                     	ds	4
  1107  0028                     MPU6050_Read_MultiData@result:	
  1108                           
  1109                           ; 1 bytes @ 0x8
  1110  0028                     	ds	1
  1111  0029                     MPU6050_Read_MultiData@reg:	
  1112                           
  1113                           ; 1 bytes @ 0x9
  1114  0029                     	ds	1
  1115  002A                     ??_Handle:	
  1116                           
  1117                           ; 1 bytes @ 0xA
  1118  002A                     	ds	3
  1119  002D                     ??_Basic_Init:	
  1120  002D                     ??_I2C_InitPort:	
  1121                           ; 1 bytes @ 0xD
  1122                           
  1123  002D                     ??_UART_InitPort:	
  1124                           ; 1 bytes @ 0xD
  1125                           
  1126  002D                     ?_Timer0_Init:	
  1127                           ; 1 bytes @ 0xD
  1128                           
  1129  002D                     ?_I2C1_Transmit:	
  1130                           ; 1 bytes @ 0xD
  1131                           
  1132  002D                     ?_I2C1_Receive:	
  1133                           ; 1 bytes @ 0xD
  1134                           
  1135  002D                     I2C1_Transmit@pData:	
  1136                           ; 1 bytes @ 0xD
  1137                           
  1138  002D                     I2C1_Receive@pData:	
  1139                           ; 1 bytes @ 0xD
  1140                           
  1141  002D                     Timer0_Init@reload_val:	
  1142                           ; 1 bytes @ 0xD
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0xD
  1146  002D                     	ds	1
  1147  002E                     ?_I2C1_Init:	
  1148  002E                     ?_UART_Init:	
  1149                           ; 1 bytes @ 0xE
  1150                           
  1151  002E                     ??_Timer0_Init:	
  1152                           ; 1 bytes @ 0xE
  1153                           
  1154  002E                     I2C1_Transmit@size:	
  1155                           ; 1 bytes @ 0xE
  1156                           
  1157  002E                     I2C1_Receive@size:	
  1158                           ; 1 bytes @ 0xE
  1159                           
  1160  002E                     UART_Init@UART_Init_PORT:	
  1161                           ; 1 bytes @ 0xE
  1162                           
  1163  002E                     I2C1_Init@I2C1_Init_PORT:	
  1164                           ; 2 bytes @ 0xE
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0xE
  1168  002E                     	ds	1
  1169  002F                     ??_I2C1_Transmit:	
  1170  002F                     ??_I2C1_Receive:	
  1171                           ; 1 bytes @ 0xF
  1172                           
  1173  002F                     Timer0_Init@pre_val:	
  1174                           ; 1 bytes @ 0xF
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0xF
  1178  002F                     	ds	1
  1179  0030                     UART_Init@brg:	
  1180  0030                     I2C1_Init@address:	
  1181                           ; 1 bytes @ 0x10
  1182                           
  1183                           
  1184                           ; 1 bytes @ 0x10
  1185  0030                     	ds	1
  1186  0031                     ??_UART_Init:	
  1187  0031                     I2C1_Init@mode:	
  1188                           ; 1 bytes @ 0x11
  1189                           
  1190  0031                     I2C1_Transmit@address:	
  1191                           ; 1 bytes @ 0x11
  1192                           
  1193  0031                     I2C1_Receive@address:	
  1194                           ; 1 bytes @ 0x11
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0x11
  1198  0031                     	ds	1
  1199  0032                     I2C1_Init@Speed:	
  1200  0032                     I2C1_Transmit@i:	
  1201                           ; 1 bytes @ 0x12
  1202                           
  1203  0032                     I2C1_Receive@result:	
  1204                           ; 1 bytes @ 0x12
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0x12
  1208  0032                     	ds	1
  1209  0033                     ??_I2C1_Init:	
  1210  0033                     I2C1_Transmit@i_465:	
  1211                           ; 1 bytes @ 0x13
  1212                           
  1213  0033                     I2C1_Receive@i:	
  1214                           ; 1 bytes @ 0x13
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x13
  1218  0033                     	ds	1
  1219  0034                     I2C1_Transmit@result:	
  1220  0034                     I2C1_Receive@i_472:	
  1221                           ; 1 bytes @ 0x14
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x14
  1225  0034                     	ds	1
  1226  0035                     ?_I2C_Transmit:	
  1227  0035                     ?_I2C_Receive:	
  1228                           ; 1 bytes @ 0x15
  1229                           
  1230  0035                     I2C_Transmit@address:	
  1231                           ; 1 bytes @ 0x15
  1232                           
  1233  0035                     I2C_Receive@address:	
  1234                           ; 1 bytes @ 0x15
  1235                           
  1236                           
  1237                           ; 1 bytes @ 0x15
  1238  0035                     	ds	1
  1239  0036                     I2C_Transmit@pData:	
  1240  0036                     I2C_Receive@pData:	
  1241                           ; 1 bytes @ 0x16
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x16
  1245  0036                     	ds	1
  1246  0037                     I2C_Transmit@size:	
  1247  0037                     I2C_Receive@size:	
  1248                           ; 1 bytes @ 0x17
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x17
  1252  0037                     	ds	1
  1253  0038                     ??_I2C_Transmit:	
  1254  0038                     ??_I2C_Receive:	
  1255                           ; 1 bytes @ 0x18
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x18
  1259  0038                     	ds	3
  1260  003B                     I2C_Transmit@I2Cx:	
  1261  003B                     I2C_Receive@I2Cx:	
  1262                           ; 1 bytes @ 0x1B
  1263                           
  1264                           
  1265                           ; 1 bytes @ 0x1B
  1266  003B                     	ds	1
  1267  003C                     I2C_Transmit@result:	
  1268  003C                     I2C_Receive@result:	
  1269                           ; 1 bytes @ 0x1C
  1270                           
  1271                           
  1272                           ; 1 bytes @ 0x1C
  1273  003C                     	ds	1
  1274  003D                     ?_MPU6050_Write_Data:	
  1275  003D                     ?_MPU6050_Read_Data:	
  1276                           ; 1 bytes @ 0x1D
  1277                           
  1278  003D                     MPU6050_Write_Data@pData:	
  1279                           ; 1 bytes @ 0x1D
  1280                           
  1281  003D                     MPU6050_Read_Data@pData:	
  1282                           ; 1 bytes @ 0x1D
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x1D
  1286  003D                     	ds	1
  1287  003E                     ??_MPU6050_Write_Data:	
  1288  003E                     ??_MPU6050_Read_Data:	
  1289                           ; 1 bytes @ 0x1E
  1290                           
  1291                           
  1292                           ; 1 bytes @ 0x1E
  1293  003E                     	ds	3
  1294  0041                     MPU6050_Read_Data@result:	
  1295                           
  1296                           ; 1 bytes @ 0x21
  1297  0041                     	ds	1
  1298  0042                     MPU6050_Write_Data@reg:	
  1299  0042                     MPU6050_Read_Data@reg:	
  1300                           ; 1 bytes @ 0x22
  1301                           
  1302                           
  1303                           ; 1 bytes @ 0x22
  1304  0042                     	ds	1
  1305  0043                     MPU6050_Write_Data@result:	
  1306                           
  1307                           ; 1 bytes @ 0x23
  1308  0043                     	ds	1
  1309  0044                     MPU6050_Write_Data@senddata:	
  1310                           
  1311                           ; 2 bytes @ 0x24
  1312  0044                     	ds	2
  1313  0046                     ??_MPU6050_Init:	
  1314                           
  1315                           ; 1 bytes @ 0x26
  1316  0046                     	ds	2
  1317                           
  1318                           	psect	maintext
  1319  03DD                     __pmaintext:	
  1320 ;;
  1321 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1322 ;;
  1323 ;; *************** function _main *****************
  1324 ;; Defined at:
  1325 ;;		line 9 in file "main.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : B1F/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1
  1339 ;;      Params:         0       0       0
  1340 ;;      Locals:         0       0       0
  1341 ;;      Temps:          0       0       2
  1342 ;;      Totals:         0       0       2
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels required when called:    8
  1345 ;; This function calls:
  1346 ;;		_Basic_Init
  1347 ;;		_I2C1_Init
  1348 ;;		_MPU6050_Init
  1349 ;;		_Timer0_Init
  1350 ;;		_UART_Init
  1351 ;; This function is called by:
  1352 ;;		Startup code after reset
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _main
  1358  03DD                     _main:	
  1359                           
  1360                           ;main.c: 12: Basic_Init();
  1361                           
  1362                           ;incstack = 0
  1363                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1364  03DD  25A4               	fcall	_Basic_Init
  1365                           
  1366                           ;main.c: 14: I2C1_Init(I2C_InitPort,0x00,I2C_MODE_MASTER,I2C_SPEED_HIGH);
  1367  03DE  3094               	movlw	low _I2C_InitPort
  1368  03DF  0020               	movlb	0	; select bank0
  1369  03E0  00AE               	movwf	I2C1_Init@I2C1_Init_PORT
  1370  03E1  3005               	movlw	high _I2C_InitPort
  1371  03E2  00AF               	movwf	I2C1_Init@I2C1_Init_PORT+1
  1372  03E3  01B0               	clrf	I2C1_Init@address
  1373  03E4  01B1               	clrf	I2C1_Init@mode
  1374  03E5  01B2               	clrf	I2C1_Init@Speed
  1375  03E6  0AB2               	incf	I2C1_Init@Speed,f
  1376  03E7  22F8               	fcall	_I2C1_Init
  1377                           
  1378                           ;main.c: 16: UART_Init(UART_InitPort,BAUD_9600);
  1379  03E8  3084               	movlw	low _UART_InitPort
  1380  03E9  0020               	movlb	0	; select bank0
  1381  03EA  00AE               	movwf	UART_Init@UART_Init_PORT
  1382  03EB  3005               	movlw	high _UART_InitPort
  1383  03EC  00AF               	movwf	UART_Init@UART_Init_PORT+1
  1384  03ED  3003               	movlw	3
  1385  03EE  0021               	movlb	1	; select bank1
  1386  03EF  00B6               	movwf	??_main^(0+128)
  1387  03F0  0836               	movf	??_main^(0+128),w
  1388  03F1  0020               	movlb	0	; select bank0
  1389  03F2  00B0               	movwf	UART_Init@brg
  1390  03F3  23A3               	fcall	_UART_Init
  1391                           
  1392                           ;main.c: 18: _delay((unsigned long)((100)*(32000000/4000.0)));
  1393  03F4  3005               	movlw	5
  1394  03F5  0021               	movlb	1	; select bank1
  1395  03F6  00B7               	movwf	(??_main^(0+128)+1)
  1396  03F7  300F               	movlw	15
  1397  03F8  00B6               	movwf	??_main^(0+128)
  1398  03F9  30F1               	movlw	241
  1399  03FA                     u1967:	
  1400  03FA  0B89               	decfsz	9,f
  1401  03FB  2BFA               	goto	u1967
  1402  03FC  0BB6               	decfsz	??_main^(0+128),f
  1403  03FD  2BFA               	goto	u1967
  1404  03FE  0BB7               	decfsz	(??_main^(0+128)+1),f
  1405  03FF  2BFA               	goto	u1967
  1406                           
  1407                           ;main.c: 20: MPU6050_Init();
  1408  0400  24D0               	fcall	_MPU6050_Init
  1409                           
  1410                           ;main.c: 22: _delay((unsigned long)((100)*(32000000/4000.0)));
  1411  0401  3005               	movlw	5
  1412  0402  0021               	movlb	1	; select bank1
  1413  0403  00B7               	movwf	(??_main^(0+128)+1)
  1414  0404  300F               	movlw	15
  1415  0405  00B6               	movwf	??_main^(0+128)
  1416  0406  30F1               	movlw	241
  1417  0407                     u1977:	
  1418  0407  0B89               	decfsz	9,f
  1419  0408  2C07               	goto	u1977
  1420  0409  0BB6               	decfsz	??_main^(0+128),f
  1421  040A  2C07               	goto	u1977
  1422  040B  0BB7               	decfsz	(??_main^(0+128)+1),f
  1423  040C  2C07               	goto	u1977
  1424                           
  1425                           ;main.c: 24: Timer0_Init(TMR0_PRESCALER64,125);
  1426  040D  307D               	movlw	125
  1427  040E  0021               	movlb	1	; select bank1
  1428  040F  00B6               	movwf	??_main^(0+128)
  1429  0410  0836               	movf	??_main^(0+128),w
  1430  0411  0020               	movlb	0	; select bank0
  1431  0412  00AD               	movwf	Timer0_Init@reload_val
  1432  0413  3005               	movlw	5
  1433  0414  243F               	fcall	_Timer0_Init
  1434  0415                     l43:	
  1435                           ;main.c: 26: while(1)
  1436                           
  1437                           
  1438                           ;main.c: 27: {
  1439  0415  2C15               	goto	l43
  1440  0416                     __end_of_main:	
  1441                           
  1442                           	psect	text1
  1443  03A3                     __ptext1:	
  1444 ;; *************** function _UART_Init *****************
  1445 ;; Defined at:
  1446 ;;		line 37 in file "PIC_UART.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  UART_Init_PO    2   14[BANK0 ] PTR FTN()void 
  1449 ;;		 -> UART_InitPort(1), 
  1450 ;;  brg             1   16[BANK0 ] enum E2448
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1
  1462 ;;      Params:         0       3       0
  1463 ;;      Locals:         0       0       0
  1464 ;;      Temps:          0       4       0
  1465 ;;      Totals:         0       7       0
  1466 ;;Total ram usage:        7 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    5
  1469 ;; This function calls:
  1470 ;;		_UART_InitPort
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           
  1477                           ;psect for function _UART_Init
  1478  03A3                     _UART_Init:	
  1479                           
  1480                           ;PIC_UART.c: 39: UART_Init_PORT();
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1484  03A3  0020               	movlb	0	; select bank0
  1485  03A4  082F               	movf	UART_Init@UART_Init_PORT+1,w
  1486  03A5  008A               	movwf	10
  1487  03A6  082E               	movf	UART_Init@UART_Init_PORT,w
  1488  03A7  000A               	callw
  1489  03A8  3183               	pagesel	$
  1490                           
  1491                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1492  03A9  3020               	movlw	32
  1493  03AA  0023               	movlb	3	; select bank3
  1494  03AB  009E               	movwf	30	;volatile
  1495                           
  1496                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1497  03AC  3010               	movlw	16
  1498  03AD  009D               	movwf	29	;volatile
  1499                           
  1500                           ;PIC_UART.c: 44: BRG16 = 1;
  1501  03AE  159F               	bsf	31,3	;volatile
  1502                           
  1503                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1504  03AF  0020               	movlb	0	; select bank0
  1505  03B0  0830               	movf	UART_Init@brg,w
  1506  03B1  00B1               	movwf	??_UART_Init
  1507  03B2  01B2               	clrf	??_UART_Init+1
  1508  03B3  35B1               	lslf	??_UART_Init,f
  1509  03B4  0DB2               	rlf	??_UART_Init+1,f
  1510  03B5  3074               	movlw	low (_baudtable| (0+32768))
  1511  03B6  0731               	addwf	??_UART_Init,w
  1512  03B7  0084               	movwf	4
  1513  03B8  3085               	movlw	high (_baudtable| (0+32768))
  1514  03B9  3D32               	addwfc	??_UART_Init+1,w
  1515  03BA  0085               	movwf	5
  1516  03BB  0800               	movf	0,w	;code access
  1517  03BC  0023               	movlb	3	; select bank3
  1518  03BD  009B               	movwf	27	;volatile
  1519                           
  1520                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1521  03BE  0020               	movlb	0	; select bank0
  1522  03BF  0830               	movf	UART_Init@brg,w
  1523  03C0  00B1               	movwf	??_UART_Init
  1524  03C1  01B2               	clrf	??_UART_Init+1
  1525  03C2  35B1               	lslf	??_UART_Init,f
  1526  03C3  0DB2               	rlf	??_UART_Init+1,f
  1527  03C4  3074               	movlw	low (_baudtable| (0+32768))
  1528  03C5  0731               	addwf	??_UART_Init,w
  1529  03C6  0084               	movwf	4
  1530  03C7  3085               	movlw	high (_baudtable| (0+32768))
  1531  03C8  3D32               	addwfc	??_UART_Init+1,w
  1532  03C9  0085               	movwf	5
  1533  03CA  3F00               	moviw [0]fsr0
  1534  03CB  00B3               	movwf	??_UART_Init+2
  1535  03CC  3F01               	moviw [1]fsr0
  1536  03CD  00B4               	movwf	??_UART_Init+3
  1537  03CE  0834               	movf	??_UART_Init+3,w
  1538  03CF  0023               	movlb	3	; select bank3
  1539  03D0  009C               	movwf	28	;volatile
  1540                           
  1541                           ;PIC_UART.c: 48: RCIF = 0;
  1542  03D1  0020               	movlb	0	; select bank0
  1543  03D2  1291               	bcf	17,5	;volatile
  1544                           
  1545                           ;PIC_UART.c: 49: RCIE = 1;
  1546  03D3  0021               	movlb	1	; select bank1
  1547  03D4  1691               	bsf	17,5	;volatile
  1548                           
  1549                           ;PIC_UART.c: 50: PEIE = 1;
  1550  03D5  170B               	bsf	11,6	;volatile
  1551                           
  1552                           ;PIC_UART.c: 51: GIE = 1;
  1553  03D6  178B               	bsf	11,7	;volatile
  1554                           
  1555                           ;PIC_UART.c: 53: SPEN = 1;
  1556  03D7  0023               	movlb	3	; select bank3
  1557  03D8  179D               	bsf	29,7	;volatile
  1558                           
  1559                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1560  03D9  0020               	movlb	0	; select bank0
  1561  03DA  01D4               	clrf	_UART_Buffer_inptr
  1562                           
  1563                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1564  03DB  01D3               	clrf	_UART_Buffer_outptr
  1565  03DC  0008               	return
  1566  03DD                     __end_of_UART_Init:	
  1567                           
  1568                           	psect	text2
  1569  0584                     __ptext2:	
  1570 ;; *************** function _UART_InitPort *****************
  1571 ;; Defined at:
  1572 ;;		line 107 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1
  1586 ;;      Params:         0       0       0
  1587 ;;      Locals:         0       0       0
  1588 ;;      Temps:          0       1       0
  1589 ;;      Totals:         0       1       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    4
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;;		_UART_Init
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _UART_InitPort
  1603  0584                     _UART_InitPort:	
  1604                           
  1605                           ;main.c: 109: TRISA &= ~(1<<4);
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  1609  0584  30EF               	movlw	239
  1610  0585  0020               	movlb	0	; select bank0
  1611  0586  00AD               	movwf	??_UART_InitPort
  1612  0587  082D               	movf	??_UART_InitPort,w
  1613  0588  0021               	movlb	1	; select bank1
  1614  0589  058C               	andwf	12,f	;volatile
  1615                           
  1616                           ;main.c: 110: ANSELA &= ~(1<<4);
  1617  058A  30EF               	movlw	239
  1618  058B  0020               	movlb	0	; select bank0
  1619  058C  00AD               	movwf	??_UART_InitPort
  1620  058D  082D               	movf	??_UART_InitPort,w
  1621  058E  0023               	movlb	3	; select bank3
  1622  058F  058C               	andwf	12,f	;volatile
  1623                           
  1624                           ;main.c: 111: APFCON |= (1<<2);
  1625  0590  0022               	movlb	2	; select bank2
  1626  0591  151D               	bsf	29,2	;volatile
  1627                           
  1628                           ;main.c: 112: APFCON |= (1<<7);
  1629  0592  179D               	bsf	29,7	;volatile
  1630  0593  0008               	return
  1631  0594                     __end_of_UART_InitPort:	
  1632                           
  1633                           	psect	text3
  1634  043F                     __ptext3:	
  1635 ;; *************** function _Timer0_Init *****************
  1636 ;; Defined at:
  1637 ;;		line 5 in file "PIC_Timer0.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  pre_val         1    wreg     enum E2461
  1640 ;;  reload_val      1   13[BANK0 ] unsigned char 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  pre_val         1   15[BANK0 ] enum E2461
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1
  1652 ;;      Params:         0       1       0
  1653 ;;      Locals:         0       1       0
  1654 ;;      Temps:          0       1       0
  1655 ;;      Totals:         0       3       0
  1656 ;;Total ram usage:        3 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    4
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _Timer0_Init
  1668  043F                     _Timer0_Init:	
  1669                           
  1670                           ;incstack = 0
  1671                           ; Regs used in _Timer0_Init: [wreg+status,2+status,0]
  1672                           ;Timer0_Init@pre_val stored from wreg
  1673  043F  0020               	movlb	0	; select bank0
  1674  0440  00AF               	movwf	Timer0_Init@pre_val
  1675                           
  1676                           ;PIC_Timer0.c: 7: OPTION_REG &= ~(1<<5);
  1677  0441  30DF               	movlw	223
  1678  0442  00AE               	movwf	??_Timer0_Init
  1679  0443  082E               	movf	??_Timer0_Init,w
  1680  0444  0021               	movlb	1	; select bank1
  1681  0445  0595               	andwf	21,f	;volatile
  1682                           
  1683                           ;PIC_Timer0.c: 8: OPTION_REG &= ~(1<<3);
  1684  0446  30F7               	movlw	247
  1685  0447  0020               	movlb	0	; select bank0
  1686  0448  00AE               	movwf	??_Timer0_Init
  1687  0449  082E               	movf	??_Timer0_Init,w
  1688  044A  0021               	movlb	1	; select bank1
  1689  044B  0595               	andwf	21,f	;volatile
  1690                           
  1691                           ;PIC_Timer0.c: 9: OPTION_REG &= ~(7<<0);
  1692  044C  30F8               	movlw	248
  1693  044D  0020               	movlb	0	; select bank0
  1694  044E  00AE               	movwf	??_Timer0_Init
  1695  044F  082E               	movf	??_Timer0_Init,w
  1696  0450  0021               	movlb	1	; select bank1
  1697  0451  0595               	andwf	21,f	;volatile
  1698                           
  1699                           ;PIC_Timer0.c: 10: OPTION_REG |= ((uint8_t)pre_val<<0);
  1700  0452  0020               	movlb	0	; select bank0
  1701  0453  082F               	movf	Timer0_Init@pre_val,w
  1702  0454  00AE               	movwf	??_Timer0_Init
  1703  0455  082E               	movf	??_Timer0_Init,w
  1704  0456  0021               	movlb	1	; select bank1
  1705  0457  0495               	iorwf	21,f	;volatile
  1706                           
  1707                           ;PIC_Timer0.c: 12: TMR0_ReloadTemp = 0xFF - reload_val;
  1708  0458  0020               	movlb	0	; select bank0
  1709  0459  032D               	decf	Timer0_Init@reload_val,w
  1710  045A  3AFF               	xorlw	255
  1711  045B  3EFF               	addlw	255
  1712  045C  00AE               	movwf	??_Timer0_Init
  1713  045D  082E               	movf	??_Timer0_Init,w
  1714  045E  00D2               	movwf	_TMR0_ReloadTemp
  1715                           
  1716                           ;PIC_Timer0.c: 13: TMR0 = TMR0_ReloadTemp;
  1717  045F  0852               	movf	_TMR0_ReloadTemp,w
  1718  0460  0095               	movwf	21	;volatile
  1719                           
  1720                           ;PIC_Timer0.c: 15: TMR0IF = 0;
  1721  0461  110B               	bcf	11,2	;volatile
  1722                           
  1723                           ;PIC_Timer0.c: 16: TMR0IE = 1;
  1724  0462  168B               	bsf	11,5	;volatile
  1725                           
  1726                           ;PIC_Timer0.c: 17: PEIE = 1;
  1727  0463  170B               	bsf	11,6	;volatile
  1728                           
  1729                           ;PIC_Timer0.c: 18: GIE = 1;
  1730  0464  178B               	bsf	11,7	;volatile
  1731  0465  0008               	return
  1732  0466                     __end_of_Timer0_Init:	
  1733                           
  1734                           	psect	text4
  1735  04D0                     __ptext4:	
  1736 ;; *************** function _MPU6050_Init *****************
  1737 ;; Defined at:
  1738 ;;		line 37 in file "MPU6050.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  addr            1    2[BANK1 ] unsigned char 
  1743 ;;  data            1    1[BANK1 ] unsigned char 
  1744 ;;  result          1    0[BANK1 ] char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      char 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1
  1754 ;;      Params:         0       0       0
  1755 ;;      Locals:         0       0       3
  1756 ;;      Temps:          0       2       0
  1757 ;;      Totals:         0       2       3
  1758 ;;Total ram usage:        5 bytes
  1759 ;; Hardware stack levels used:    1
  1760 ;; Hardware stack levels required when called:    7
  1761 ;; This function calls:
  1762 ;;		_MPU6050_Read_Data
  1763 ;;		_MPU6050_Write_Data
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           
  1770                           ;psect for function _MPU6050_Init
  1771  04D0                     _MPU6050_Init:	
  1772                           
  1773                           ;MPU6050.c: 39: int8_t result;
  1774                           ;MPU6050.c: 41: uint8_t addr;
  1775                           ;MPU6050.c: 42: result = MPU6050_Read_Data(0x75,&addr);
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _MPU6050_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1779  04D0  30B5               	movlw	(low (MPU6050_Init@addr| 0))& (0+255)
  1780  04D1  0020               	movlb	0	; select bank0
  1781  04D2  00C6               	movwf	??_MPU6050_Init
  1782  04D3  0846               	movf	??_MPU6050_Init,w
  1783  04D4  00BD               	movwf	MPU6050_Read_Data@pData
  1784  04D5  3075               	movlw	117
  1785  04D6  248C               	fcall	_MPU6050_Read_Data
  1786  04D7  0020               	movlb	0	; select bank0
  1787  04D8  00C7               	movwf	??_MPU6050_Init+1
  1788  04D9  0847               	movf	??_MPU6050_Init+1,w
  1789  04DA  0021               	movlb	1	; select bank1
  1790  04DB  00B3               	movwf	MPU6050_Init@result^(0+128)
  1791                           
  1792                           ;MPU6050.c: 43: if(addr!=0x68) return -1;
  1793  04DC  3068               	movlw	104
  1794  04DD  0635               	xorwf	MPU6050_Init@addr^(0+128),w
  1795  04DE  1D03               	btfss	3,2
  1796  04DF  0008               	return
  1797                           
  1798                           ;MPU6050.c: 45: uint8_t data = 0x00;
  1799                           
  1800                           ;	Return value of _MPU6050_Init is never used
  1801  04E0  01B4               	clrf	MPU6050_Init@data^(0+128)
  1802                           
  1803                           ;MPU6050.c: 46: result += MPU6050_Write_Data(0x6B,data);
  1804  04E1  0834               	movf	MPU6050_Init@data^(0+128),w
  1805  04E2  0020               	movlb	0	; select bank0
  1806  04E3  00C6               	movwf	??_MPU6050_Init
  1807  04E4  0846               	movf	??_MPU6050_Init,w
  1808  04E5  00BD               	movwf	MPU6050_Write_Data@pData
  1809  04E6  306B               	movlw	107
  1810  04E7  24B1               	fcall	_MPU6050_Write_Data
  1811  04E8  0020               	movlb	0	; select bank0
  1812  04E9  00C7               	movwf	??_MPU6050_Init+1
  1813  04EA  0847               	movf	??_MPU6050_Init+1,w
  1814  04EB  0021               	movlb	1	; select bank1
  1815  04EC  07B3               	addwf	MPU6050_Init@result^(0+128),f
  1816  04ED  0008               	return
  1817  04EE                     __end_of_MPU6050_Init:	
  1818                           ;MPU6050.c: 48: return result;
  1819                           ;	Return value of _MPU6050_Init is never used
  1820                           
  1821                           
  1822                           	psect	text5
  1823  04B1                     __ptext5:	
  1824 ;; *************** function _MPU6050_Write_Data *****************
  1825 ;; Defined at:
  1826 ;;		line 3 in file "MPU6050.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  reg             1    wreg     unsigned char 
  1829 ;;  pData           1   29[BANK0 ] unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  reg             1   34[BANK0 ] unsigned char 
  1832 ;;  senddata        2   36[BANK0 ] unsigned char [2]
  1833 ;;  result          1   35[BANK0 ] char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      char 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1
  1843 ;;      Params:         0       1       0
  1844 ;;      Locals:         0       4       0
  1845 ;;      Temps:          0       4       0
  1846 ;;      Totals:         0       9       0
  1847 ;;Total ram usage:        9 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    6
  1850 ;; This function calls:
  1851 ;;		_I2C_Transmit
  1852 ;; This function is called by:
  1853 ;;		_MPU6050_Init
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function _MPU6050_Write_Data
  1859  04B1                     _MPU6050_Write_Data:	
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _MPU6050_Write_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1863                           ;MPU6050_Write_Data@reg stored from wreg
  1864  04B1  0020               	movlb	0	; select bank0
  1865  04B2  00C2               	movwf	MPU6050_Write_Data@reg
  1866                           
  1867                           ;MPU6050.c: 5: int8_t result = 0;
  1868  04B3  01C3               	clrf	MPU6050_Write_Data@result
  1869                           
  1870                           ;MPU6050.c: 6: uint8_t senddata[2];
  1871                           ;MPU6050.c: 8: senddata[0] = reg;
  1872  04B4  0842               	movf	MPU6050_Write_Data@reg,w
  1873  04B5  00BE               	movwf	??_MPU6050_Write_Data
  1874  04B6  083E               	movf	??_MPU6050_Write_Data,w
  1875  04B7  00C4               	movwf	MPU6050_Write_Data@senddata
  1876                           
  1877                           ;MPU6050.c: 9: senddata[1] = pData;
  1878  04B8  083D               	movf	MPU6050_Write_Data@pData,w
  1879  04B9  00BE               	movwf	??_MPU6050_Write_Data
  1880  04BA  083E               	movf	??_MPU6050_Write_Data,w
  1881  04BB  00C5               	movwf	MPU6050_Write_Data@senddata+1
  1882                           
  1883                           ;MPU6050.c: 11: result += I2C_Transmit(I2C1_MODULE,0x68,senddata,2);
  1884  04BC  3068               	movlw	104
  1885  04BD  00BE               	movwf	??_MPU6050_Write_Data
  1886  04BE  083E               	movf	??_MPU6050_Write_Data,w
  1887  04BF  00B5               	movwf	I2C_Transmit@address
  1888  04C0  3044               	movlw	(low (MPU6050_Write_Data@senddata| 0))& (0+255)
  1889  04C1  00BF               	movwf	??_MPU6050_Write_Data+1
  1890  04C2  083F               	movf	??_MPU6050_Write_Data+1,w
  1891  04C3  00B6               	movwf	I2C_Transmit@pData
  1892  04C4  3002               	movlw	2
  1893  04C5  00C0               	movwf	??_MPU6050_Write_Data+2
  1894  04C6  0840               	movf	??_MPU6050_Write_Data+2,w
  1895  04C7  00B7               	movwf	I2C_Transmit@size
  1896  04C8  3000               	movlw	0
  1897  04C9  24EE               	fcall	_I2C_Transmit
  1898  04CA  0020               	movlb	0	; select bank0
  1899  04CB  00C1               	movwf	??_MPU6050_Write_Data+3
  1900  04CC  0841               	movf	??_MPU6050_Write_Data+3,w
  1901  04CD  07C3               	addwf	MPU6050_Write_Data@result,f
  1902                           
  1903                           ;MPU6050.c: 13: return result;
  1904  04CE  0843               	movf	MPU6050_Write_Data@result,w
  1905  04CF  0008               	return
  1906  04D0                     __end_of_MPU6050_Write_Data:	
  1907                           
  1908                           	psect	text6
  1909  048C                     __ptext6:	
  1910 ;; *************** function _MPU6050_Read_Data *****************
  1911 ;; Defined at:
  1912 ;;		line 16 in file "MPU6050.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  reg             1    wreg     unsigned char 
  1915 ;;  pData           1   29[BANK0 ] PTR unsigned char 
  1916 ;;		 -> MPU6050_Init@addr(1), 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  reg             1   34[BANK0 ] unsigned char 
  1919 ;;  result          1   33[BANK0 ] char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      char 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1
  1929 ;;      Params:         0       1       0
  1930 ;;      Locals:         0       2       0
  1931 ;;      Temps:          0       3       0
  1932 ;;      Totals:         0       6       0
  1933 ;;Total ram usage:        6 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    6
  1936 ;; This function calls:
  1937 ;;		_I2C_Receive
  1938 ;;		_I2C_Transmit
  1939 ;; This function is called by:
  1940 ;;		_MPU6050_Init
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function _MPU6050_Read_Data
  1946  048C                     _MPU6050_Read_Data:	
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in _MPU6050_Read_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1950                           ;MPU6050_Read_Data@reg stored from wreg
  1951  048C  0020               	movlb	0	; select bank0
  1952  048D  00C2               	movwf	MPU6050_Read_Data@reg
  1953                           
  1954                           ;MPU6050.c: 18: int8_t result = 0;
  1955  048E  01C1               	clrf	MPU6050_Read_Data@result
  1956                           
  1957                           ;MPU6050.c: 20: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  1958  048F  3068               	movlw	104
  1959  0490  00BE               	movwf	??_MPU6050_Read_Data
  1960  0491  083E               	movf	??_MPU6050_Read_Data,w
  1961  0492  00B5               	movwf	I2C_Transmit@address
  1962  0493  3042               	movlw	(low (MPU6050_Read_Data@reg| 0))& (0+255)
  1963  0494  00BF               	movwf	??_MPU6050_Read_Data+1
  1964  0495  083F               	movf	??_MPU6050_Read_Data+1,w
  1965  0496  00B6               	movwf	I2C_Transmit@pData
  1966  0497  01B7               	clrf	I2C_Transmit@size
  1967  0498  0AB7               	incf	I2C_Transmit@size,f
  1968  0499  3000               	movlw	0
  1969  049A  24EE               	fcall	_I2C_Transmit
  1970  049B  0020               	movlb	0	; select bank0
  1971  049C  00C0               	movwf	??_MPU6050_Read_Data+2
  1972  049D  0840               	movf	??_MPU6050_Read_Data+2,w
  1973  049E  07C1               	addwf	MPU6050_Read_Data@result,f
  1974                           
  1975                           ;MPU6050.c: 22: result += I2C_Receive(I2C1_MODULE,0x68,pData,1);
  1976  049F  3068               	movlw	104
  1977  04A0  00BE               	movwf	??_MPU6050_Read_Data
  1978  04A1  083E               	movf	??_MPU6050_Read_Data,w
  1979  04A2  00B5               	movwf	I2C_Receive@address
  1980  04A3  083D               	movf	MPU6050_Read_Data@pData,w
  1981  04A4  00BF               	movwf	??_MPU6050_Read_Data+1
  1982  04A5  083F               	movf	??_MPU6050_Read_Data+1,w
  1983  04A6  00B6               	movwf	I2C_Receive@pData
  1984  04A7  01B7               	clrf	I2C_Receive@size
  1985  04A8  0AB7               	incf	I2C_Receive@size,f
  1986  04A9  3000               	movlw	0
  1987  04AA  2509               	fcall	_I2C_Receive
  1988  04AB  0020               	movlb	0	; select bank0
  1989  04AC  00C0               	movwf	??_MPU6050_Read_Data+2
  1990  04AD  0840               	movf	??_MPU6050_Read_Data+2,w
  1991  04AE  07C1               	addwf	MPU6050_Read_Data@result,f
  1992                           
  1993                           ;MPU6050.c: 24: return result;
  1994  04AF  0841               	movf	MPU6050_Read_Data@result,w
  1995  04B0  0008               	return
  1996  04B1                     __end_of_MPU6050_Read_Data:	
  1997                           
  1998                           	psect	text7
  1999  04EE                     __ptext7:	
  2000 ;; *************** function _I2C_Transmit *****************
  2001 ;; Defined at:
  2002 ;;		line 5 in file "PIC_I2C.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  I2Cx            1    wreg     enum E2432
  2005 ;;  address         1   21[BANK0 ] unsigned char 
  2006 ;;  pData           1   22[BANK0 ] PTR unsigned char 
  2007 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  2008 ;;  size            1   23[BANK0 ] unsigned char 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  I2Cx            1   27[BANK0 ] enum E2432
  2011 ;;  result          1   28[BANK0 ] char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      char 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1
  2021 ;;      Params:         0       3       0
  2022 ;;      Locals:         0       2       0
  2023 ;;      Temps:          0       3       0
  2024 ;;      Totals:         0       8       0
  2025 ;;Total ram usage:        8 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    5
  2028 ;; This function calls:
  2029 ;;		_I2C1_Transmit
  2030 ;; This function is called by:
  2031 ;;		_MPU6050_Write_Data
  2032 ;;		_MPU6050_Read_Data
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _I2C_Transmit
  2038  04EE                     _I2C_Transmit:	
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2042                           ;I2C_Transmit@I2Cx stored from wreg
  2043  04EE  0020               	movlb	0	; select bank0
  2044  04EF  00BB               	movwf	I2C_Transmit@I2Cx
  2045                           
  2046                           ;PIC_I2C.c: 7: int8_t result = -1;
  2047  04F0  01BC               	clrf	I2C_Transmit@result
  2048  04F1  03BC               	decf	I2C_Transmit@result,f
  2049                           
  2050                           ;PIC_I2C.c: 9: switch(I2Cx)
  2051  04F2  2D02               	goto	l2068
  2052  04F3                     l2064:	
  2053                           ;PIC_I2C.c: 10: {
  2054                           ;PIC_I2C.c: 11: case I2C1_MODULE:
  2055                           
  2056                           
  2057                           ;PIC_I2C.c: 12: result = I2C1_Transmit(address,pData,size);
  2058  04F3  0836               	movf	I2C_Transmit@pData,w
  2059  04F4  00B8               	movwf	??_I2C_Transmit
  2060  04F5  0838               	movf	??_I2C_Transmit,w
  2061  04F6  00AD               	movwf	I2C1_Transmit@pData
  2062  04F7  0837               	movf	I2C_Transmit@size,w
  2063  04F8  00B9               	movwf	??_I2C_Transmit+1
  2064  04F9  0839               	movf	??_I2C_Transmit+1,w
  2065  04FA  00AE               	movwf	I2C1_Transmit@size
  2066  04FB  0835               	movf	I2C_Transmit@address,w
  2067  04FC  2152               	fcall	_I2C1_Transmit
  2068  04FD  0020               	movlb	0	; select bank0
  2069  04FE  00BA               	movwf	??_I2C_Transmit+2
  2070  04FF  083A               	movf	??_I2C_Transmit+2,w
  2071  0500  00BC               	movwf	I2C_Transmit@result
  2072                           
  2073                           ;PIC_I2C.c: 14: }
  2074                           
  2075                           ;PIC_I2C.c: 13: break;
  2076  0501  2D07               	goto	l2070
  2077  0502                     l2068:	
  2078  0502  083B               	movf	I2C_Transmit@I2Cx,w
  2079                           
  2080                           ; Switch size 1, requested type "space"
  2081                           ; Number of cases is 1, Range of values is 0 to 0
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte            4     3 (average)
  2085                           ; direct_byte            8     6 (fixed)
  2086                           ; jumptable            260     6 (fixed)
  2087                           ;	Chosen strategy is simple_byte
  2088  0503  3A00               	xorlw	0	; case 0
  2089  0504  1903               	skipnz
  2090  0505  2CF3               	goto	l2064
  2091  0506  2D07               	goto	l2070
  2092  0507                     l2070:	
  2093                           
  2094                           ;PIC_I2C.c: 15: return result;
  2095  0507  083C               	movf	I2C_Transmit@result,w
  2096  0508  0008               	return
  2097  0509                     __end_of_I2C_Transmit:	
  2098                           
  2099                           	psect	text8
  2100  0152                     __ptext8:	
  2101 ;; *************** function _I2C1_Transmit *****************
  2102 ;; Defined at:
  2103 ;;		line 53 in file "PIC_I2C1.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  address         1    wreg     unsigned char 
  2106 ;;  pData           1   13[BANK0 ] PTR unsigned char 
  2107 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  2108 ;;  size            1   14[BANK0 ] unsigned char 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  address         1   17[BANK0 ] unsigned char 
  2111 ;;  i               1   19[BANK0 ] unsigned char 
  2112 ;;  i               1   18[BANK0 ] unsigned char 
  2113 ;;  result          1   20[BANK0 ] char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      char 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1
  2123 ;;      Params:         0       2       0
  2124 ;;      Locals:         0       4       0
  2125 ;;      Temps:          0       2       0
  2126 ;;      Totals:         0       8       0
  2127 ;;Total ram usage:        8 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    4
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_I2C_Transmit
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _I2C1_Transmit
  2139  0152                     _I2C1_Transmit:	
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2143                           ;I2C1_Transmit@address stored from wreg
  2144  0152  0020               	movlb	0	; select bank0
  2145  0153  00B1               	movwf	I2C1_Transmit@address
  2146                           
  2147                           ;PIC_I2C1.c: 55: int8_t result;
  2148                           ;PIC_I2C1.c: 57: switch(I2C1_Config.Mode)
  2149  0154  29DD               	goto	l2006
  2150  0155                     l1962:	
  2151                           ;PIC_I2C1.c: 60: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2152                           
  2153                           ;PIC_I2C1.c: 58: {
  2154                           ;PIC_I2C1.c: 59: case I2C_MODE_MASTER:
  2155                           
  2156  0155  3005               	movlw	5
  2157  0156  0024               	movlb	4	; select bank4
  2158  0157  0514               	andwf	20,w	;volatile
  2159  0158  0020               	movlb	0	; select bank0
  2160  0159  00AF               	movwf	??_I2C1_Transmit
  2161  015A  0024               	movlb	4	; select bank4
  2162  015B  0816               	movf	22,w	;volatile
  2163  015C  391F               	andlw	31
  2164  015D  0020               	movlb	0	; select bank0
  2165  015E  042F               	iorwf	??_I2C1_Transmit,w
  2166  015F  1D03               	btfss	3,2
  2167  0160  2955               	goto	l1962
  2168                           
  2169                           ;PIC_I2C1.c: 61: SSPCON2bits.SEN = 1;
  2170  0161  0024               	movlb	4	; select bank4
  2171  0162  1416               	bsf	22,0	;volatile
  2172  0163                     l1964:	
  2173                           ;PIC_I2C1.c: 63: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2174                           
  2175  0163  3005               	movlw	5
  2176  0164  0024               	movlb	4	; select bank4
  2177  0165  0514               	andwf	20,w	;volatile
  2178  0166  0020               	movlb	0	; select bank0
  2179  0167  00AF               	movwf	??_I2C1_Transmit
  2180  0168  0024               	movlb	4	; select bank4
  2181  0169  0816               	movf	22,w	;volatile
  2182  016A  391F               	andlw	31
  2183  016B  0020               	movlb	0	; select bank0
  2184  016C  042F               	iorwf	??_I2C1_Transmit,w
  2185  016D  1D03               	btfss	3,2
  2186  016E  2963               	goto	l1964
  2187                           
  2188                           ;PIC_I2C1.c: 64: SSPBUF = address << 1;
  2189  016F  3531               	lslf	I2C1_Transmit@address,w
  2190  0170  0024               	movlb	4	; select bank4
  2191  0171  0091               	movwf	17	;volatile
  2192  0172                     l244:	
  2193                           ;PIC_I2C1.c: 65: while(SSPSTATbits.R_nW);
  2194                           
  2195  0172  1914               	btfsc	20,2	;volatile
  2196  0173  2972               	goto	l244
  2197                           
  2198                           ;PIC_I2C1.c: 67: result = SSPCON2bits.ACKSTAT;
  2199  0174  3000               	movlw	0
  2200  0175  1B16               	btfsc	22,6	;volatile
  2201  0176  3001               	movlw	1
  2202  0177  0020               	movlb	0	; select bank0
  2203  0178  00B4               	movwf	I2C1_Transmit@result
  2204                           
  2205                           ;PIC_I2C1.c: 68: if (!result)
  2206  0179  0834               	movf	I2C1_Transmit@result,w
  2207  017A  1D03               	btfss	3,2
  2208  017B  29A9               	goto	l1988
  2209                           
  2210                           ;PIC_I2C1.c: 69: {
  2211                           ;PIC_I2C1.c: 70: for(uint8_t i=0;i<size;i++)
  2212  017C  01B2               	clrf	I2C1_Transmit@i
  2213  017D  2982               	goto	l1986
  2214  017E                     l1984:	
  2215                           ;PIC_I2C1.c: 80: break;
  2216                           
  2217  017E  3001               	movlw	1
  2218  017F  00AF               	movwf	??_I2C1_Transmit
  2219  0180  082F               	movf	??_I2C1_Transmit,w
  2220  0181  07B2               	addwf	I2C1_Transmit@i,f
  2221  0182                     l1986:	
  2222  0182  082E               	movf	I2C1_Transmit@size,w
  2223  0183  0232               	subwf	I2C1_Transmit@i,w
  2224  0184  1803               	btfsc	3,0
  2225  0185  29A9               	goto	l1988
  2226  0186                     l1974:	
  2227                           ;PIC_I2C1.c: 71: {
  2228                           ;PIC_I2C1.c: 72: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2229                           
  2230  0186  3005               	movlw	5
  2231  0187  0024               	movlb	4	; select bank4
  2232  0188  0514               	andwf	20,w	;volatile
  2233  0189  0020               	movlb	0	; select bank0
  2234  018A  00AF               	movwf	??_I2C1_Transmit
  2235  018B  0024               	movlb	4	; select bank4
  2236  018C  0816               	movf	22,w	;volatile
  2237  018D  391F               	andlw	31
  2238  018E  0020               	movlb	0	; select bank0
  2239  018F  042F               	iorwf	??_I2C1_Transmit,w
  2240  0190  1D03               	btfss	3,2
  2241  0191  2986               	goto	l1974
  2242                           
  2243                           ;PIC_I2C1.c: 73: SSPBUF = *(pData+i);
  2244  0192  0832               	movf	I2C1_Transmit@i,w
  2245  0193  072D               	addwf	I2C1_Transmit@pData,w
  2246  0194  00AF               	movwf	??_I2C1_Transmit
  2247  0195  082F               	movf	??_I2C1_Transmit,w
  2248  0196  0086               	movwf	6
  2249  0197  0187               	clrf	7
  2250  0198  0801               	movf	1,w
  2251  0199  0024               	movlb	4	; select bank4
  2252  019A  0091               	movwf	17	;volatile
  2253  019B                     l253:	
  2254                           ;PIC_I2C1.c: 74: while(SSPSTATbits.R_nW);
  2255                           
  2256  019B  1914               	btfsc	20,2	;volatile
  2257  019C  299B               	goto	l253
  2258                           
  2259                           ;PIC_I2C1.c: 76: result = SSPCON2bits.ACKSTAT;
  2260  019D  3000               	movlw	0
  2261  019E  1B16               	btfsc	22,6	;volatile
  2262  019F  3001               	movlw	1
  2263  01A0  0020               	movlb	0	; select bank0
  2264  01A1  00B4               	movwf	I2C1_Transmit@result
  2265                           
  2266                           ;PIC_I2C1.c: 77: if (result)
  2267  01A2  0834               	movf	I2C1_Transmit@result,w
  2268  01A3  1903               	btfsc	3,2
  2269  01A4  297E               	goto	l1984
  2270                           
  2271                           ;PIC_I2C1.c: 78: {
  2272                           ;PIC_I2C1.c: 79: result = 2;
  2273  01A5  3002               	movlw	2
  2274  01A6  00AF               	movwf	??_I2C1_Transmit
  2275  01A7  082F               	movf	??_I2C1_Transmit,w
  2276  01A8  00B4               	movwf	I2C1_Transmit@result
  2277  01A9                     l1988:	
  2278                           ;PIC_I2C1.c: 81: }
  2279                           ;PIC_I2C1.c: 82: }
  2280                           ;PIC_I2C1.c: 83: }
  2281                           ;PIC_I2C1.c: 85: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2282                           
  2283  01A9  3005               	movlw	5
  2284  01AA  0024               	movlb	4	; select bank4
  2285  01AB  0514               	andwf	20,w	;volatile
  2286  01AC  0020               	movlb	0	; select bank0
  2287  01AD  00AF               	movwf	??_I2C1_Transmit
  2288  01AE  0024               	movlb	4	; select bank4
  2289  01AF  0816               	movf	22,w	;volatile
  2290  01B0  391F               	andlw	31
  2291  01B1  0020               	movlb	0	; select bank0
  2292  01B2  042F               	iorwf	??_I2C1_Transmit,w
  2293  01B3  1D03               	btfss	3,2
  2294  01B4  29A9               	goto	l1988
  2295                           
  2296                           ;PIC_I2C1.c: 86: SSPCON2bits.PEN = 1;
  2297  01B5  0024               	movlb	4	; select bank4
  2298  01B6  1516               	bsf	22,2	;volatile
  2299                           
  2300                           ;PIC_I2C1.c: 87: break;
  2301  01B7  29E6               	goto	l2008
  2302  01B8                     l262:	
  2303                           ;PIC_I2C1.c: 89: case I2C_MODE_SLAVE:
  2304                           
  2305                           
  2306                           ;PIC_I2C1.c: 90: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2307  01B8  0024               	movlb	4	; select bank4
  2308  01B9  1D94               	btfss	20,3	;volatile
  2309  01BA  1E14               	btfss	20,4	;volatile
  2310  01BB  29DA               	goto	l2002
  2311                           
  2312                           ;PIC_I2C1.c: 91: {
  2313                           ;PIC_I2C1.c: 92: for(uint8_t i = 0;i<size;i++)
  2314  01BC  0020               	movlb	0	; select bank0
  2315  01BD  01B3               	clrf	I2C1_Transmit@i_465
  2316  01BE                     l1998:	
  2317  01BE  082E               	movf	I2C1_Transmit@size,w
  2318  01BF  0233               	subwf	I2C1_Transmit@i_465,w
  2319  01C0  1803               	btfsc	3,0
  2320  01C1  29D5               	goto	l2000
  2321                           
  2322                           ;PIC_I2C1.c: 93: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2323  01C2  0833               	movf	I2C1_Transmit@i_465,w
  2324  01C3  072D               	addwf	I2C1_Transmit@pData,w
  2325  01C4  00AF               	movwf	??_I2C1_Transmit
  2326  01C5  082F               	movf	??_I2C1_Transmit,w
  2327  01C6  0086               	movwf	6
  2328  01C7  0187               	clrf	7
  2329  01C8  0801               	movf	1,w
  2330  01C9  00B0               	movwf	??_I2C1_Transmit+1
  2331  01CA  0833               	movf	I2C1_Transmit@i_465,w
  2332  01CB  3EA0               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2333  01CC  0086               	movwf	6
  2334  01CD  0187               	clrf	7
  2335  01CE  0830               	movf	??_I2C1_Transmit+1,w
  2336  01CF  0081               	movwf	1
  2337  01D0  3001               	movlw	1
  2338  01D1  00AF               	movwf	??_I2C1_Transmit
  2339  01D2  082F               	movf	??_I2C1_Transmit,w
  2340  01D3  07B3               	addwf	I2C1_Transmit@i_465,f
  2341  01D4  29BE               	goto	l1998
  2342  01D5                     l2000:	
  2343                           
  2344                           ;PIC_I2C1.c: 94: result = size;
  2345  01D5  082E               	movf	I2C1_Transmit@size,w
  2346  01D6  00AF               	movwf	??_I2C1_Transmit
  2347  01D7  082F               	movf	??_I2C1_Transmit,w
  2348  01D8  00B4               	movwf	I2C1_Transmit@result
  2349                           
  2350                           ;PIC_I2C1.c: 95: }
  2351  01D9  29E6               	goto	l2008
  2352  01DA                     l2002:	
  2353                           
  2354                           ;PIC_I2C1.c: 96: else
  2355                           ;PIC_I2C1.c: 97: result = 0;
  2356  01DA  0020               	movlb	0	; select bank0
  2357  01DB  01B4               	clrf	I2C1_Transmit@result
  2358                           
  2359                           ;PIC_I2C1.c: 99: }
  2360                           
  2361                           ;PIC_I2C1.c: 98: break;
  2362  01DC  29E6               	goto	l2008
  2363  01DD                     l2006:	
  2364  01DD  0021               	movlb	1	; select bank1
  2365  01DE  0832               	movf	(_I2C1_Config^(0+128)+18),w
  2366                           
  2367                           ; Switch size 1, requested type "space"
  2368                           ; Number of cases is 2, Range of values is 0 to 1
  2369                           ; switch strategies available:
  2370                           ; Name         Instructions Cycles
  2371                           ; simple_byte            7     4 (average)
  2372                           ; direct_byte           10     6 (fixed)
  2373                           ; jumptable            260     6 (fixed)
  2374                           ;	Chosen strategy is simple_byte
  2375  01DF  3A00               	xorlw	0	; case 0
  2376  01E0  1903               	skipnz
  2377  01E1  2955               	goto	l1962
  2378  01E2  3A01               	xorlw	1	; case 1
  2379  01E3  1903               	skipnz
  2380  01E4  29B8               	goto	l262
  2381  01E5  29E6               	goto	l2008
  2382  01E6                     l2008:	
  2383                           
  2384                           ;PIC_I2C1.c: 101: return result;
  2385  01E6  0020               	movlb	0	; select bank0
  2386  01E7  0834               	movf	I2C1_Transmit@result,w
  2387  01E8  0008               	return
  2388  01E9                     __end_of_I2C1_Transmit:	
  2389                           
  2390                           	psect	text9
  2391  0509                     __ptext9:	
  2392 ;; *************** function _I2C_Receive *****************
  2393 ;; Defined at:
  2394 ;;		line 18 in file "PIC_I2C.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  I2Cx            1    wreg     enum E2432
  2397 ;;  address         1   21[BANK0 ] unsigned char 
  2398 ;;  pData           1   22[BANK0 ] PTR unsigned char 
  2399 ;;		 -> MPU6050_Init@addr(1), Handle@accel_t_gyro(14), 
  2400 ;;  size            1   23[BANK0 ] unsigned char 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  I2Cx            1   27[BANK0 ] enum E2432
  2403 ;;  result          1   28[BANK0 ] char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      char 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1
  2413 ;;      Params:         0       3       0
  2414 ;;      Locals:         0       2       0
  2415 ;;      Temps:          0       3       0
  2416 ;;      Totals:         0       8       0
  2417 ;;Total ram usage:        8 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    5
  2420 ;; This function calls:
  2421 ;;		_I2C1_Receive
  2422 ;; This function is called by:
  2423 ;;		_MPU6050_Read_Data
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _I2C_Receive
  2429  0509                     _I2C_Receive:	
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2433                           ;I2C_Receive@I2Cx stored from wreg
  2434  0509  0020               	movlb	0	; select bank0
  2435  050A  00BB               	movwf	I2C_Receive@I2Cx
  2436                           
  2437                           ;PIC_I2C.c: 20: int8_t result = -1;
  2438  050B  01BC               	clrf	I2C_Receive@result
  2439  050C  03BC               	decf	I2C_Receive@result,f
  2440                           
  2441                           ;PIC_I2C.c: 22: switch(I2Cx)
  2442  050D  2D1D               	goto	l2080
  2443  050E                     l2076:	
  2444                           ;PIC_I2C.c: 23: {
  2445                           ;PIC_I2C.c: 24: case I2C1_MODULE:
  2446                           
  2447                           
  2448                           ;PIC_I2C.c: 25: result = I2C1_Receive(address,pData,size);
  2449  050E  0836               	movf	I2C_Receive@pData,w
  2450  050F  00B8               	movwf	??_I2C_Receive
  2451  0510  0838               	movf	??_I2C_Receive,w
  2452  0511  00AD               	movwf	I2C1_Receive@pData
  2453  0512  0837               	movf	I2C_Receive@size,w
  2454  0513  00B9               	movwf	??_I2C_Receive+1
  2455  0514  0839               	movf	??_I2C_Receive+1,w
  2456  0515  00AE               	movwf	I2C1_Receive@size
  2457  0516  0835               	movf	I2C_Receive@address,w
  2458  0517  20A1               	fcall	_I2C1_Receive
  2459  0518  0020               	movlb	0	; select bank0
  2460  0519  00BA               	movwf	??_I2C_Receive+2
  2461  051A  083A               	movf	??_I2C_Receive+2,w
  2462  051B  00BC               	movwf	I2C_Receive@result
  2463                           
  2464                           ;PIC_I2C.c: 27: }
  2465                           
  2466                           ;PIC_I2C.c: 26: break;
  2467  051C  2D22               	goto	l2082
  2468  051D                     l2080:	
  2469  051D  083B               	movf	I2C_Receive@I2Cx,w
  2470                           
  2471                           ; Switch size 1, requested type "space"
  2472                           ; Number of cases is 1, Range of values is 0 to 0
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte            4     3 (average)
  2476                           ; direct_byte            8     6 (fixed)
  2477                           ; jumptable            260     6 (fixed)
  2478                           ;	Chosen strategy is simple_byte
  2479  051E  3A00               	xorlw	0	; case 0
  2480  051F  1903               	skipnz
  2481  0520  2D0E               	goto	l2076
  2482  0521  2D22               	goto	l2082
  2483  0522                     l2082:	
  2484                           
  2485                           ;PIC_I2C.c: 28: return result;
  2486  0522  083C               	movf	I2C_Receive@result,w
  2487  0523  0008               	return
  2488  0524                     __end_of_I2C_Receive:	
  2489                           
  2490                           	psect	text10
  2491  00A1                     __ptext10:	
  2492 ;; *************** function _I2C1_Receive *****************
  2493 ;; Defined at:
  2494 ;;		line 104 in file "PIC_I2C1.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  address         1    wreg     unsigned char 
  2497 ;;  pData           1   13[BANK0 ] PTR unsigned char 
  2498 ;;		 -> MPU6050_Init@addr(1), Handle@accel_t_gyro(14), 
  2499 ;;  size            1   14[BANK0 ] unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  address         1   17[BANK0 ] unsigned char 
  2502 ;;  i               1   20[BANK0 ] unsigned char 
  2503 ;;  i               1   19[BANK0 ] unsigned char 
  2504 ;;  result          1   18[BANK0 ] char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      char 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1
  2514 ;;      Params:         0       2       0
  2515 ;;      Locals:         0       4       0
  2516 ;;      Temps:          0       2       0
  2517 ;;      Totals:         0       8       0
  2518 ;;Total ram usage:        8 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    4
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_I2C_Receive
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _I2C1_Receive
  2530  00A1                     _I2C1_Receive:	
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  2534                           ;I2C1_Receive@address stored from wreg
  2535  00A1  0020               	movlb	0	; select bank0
  2536  00A2  00B1               	movwf	I2C1_Receive@address
  2537                           
  2538                           ;PIC_I2C1.c: 106: int8_t result;
  2539                           ;PIC_I2C1.c: 108: switch(I2C1_Config.Mode)
  2540  00A3  2946               	goto	l2056
  2541  00A4                     l2014:	
  2542                           ;PIC_I2C1.c: 111: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2543                           
  2544                           ;PIC_I2C1.c: 109: {
  2545                           ;PIC_I2C1.c: 110: case I2C_MODE_MASTER:
  2546                           
  2547  00A4  3005               	movlw	5
  2548  00A5  0024               	movlb	4	; select bank4
  2549  00A6  0514               	andwf	20,w	;volatile
  2550  00A7  0020               	movlb	0	; select bank0
  2551  00A8  00AF               	movwf	??_I2C1_Receive
  2552  00A9  0024               	movlb	4	; select bank4
  2553  00AA  0816               	movf	22,w	;volatile
  2554  00AB  391F               	andlw	31
  2555  00AC  0020               	movlb	0	; select bank0
  2556  00AD  042F               	iorwf	??_I2C1_Receive,w
  2557  00AE  1D03               	btfss	3,2
  2558  00AF  28A4               	goto	l2014
  2559                           
  2560                           ;PIC_I2C1.c: 112: SSPCON2bits.SEN = 1;
  2561  00B0  0024               	movlb	4	; select bank4
  2562  00B1  1416               	bsf	22,0	;volatile
  2563  00B2                     l2016:	
  2564                           ;PIC_I2C1.c: 114: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2565                           
  2566  00B2  3005               	movlw	5
  2567  00B3  0024               	movlb	4	; select bank4
  2568  00B4  0514               	andwf	20,w	;volatile
  2569  00B5  0020               	movlb	0	; select bank0
  2570  00B6  00AF               	movwf	??_I2C1_Receive
  2571  00B7  0024               	movlb	4	; select bank4
  2572  00B8  0816               	movf	22,w	;volatile
  2573  00B9  391F               	andlw	31
  2574  00BA  0020               	movlb	0	; select bank0
  2575  00BB  042F               	iorwf	??_I2C1_Receive,w
  2576  00BC  1D03               	btfss	3,2
  2577  00BD  28B2               	goto	l2016
  2578                           
  2579                           ;PIC_I2C1.c: 115: SSPBUF = ((address << 1)|0x01);
  2580  00BE  1403               	setc
  2581  00BF  0D31               	rlf	I2C1_Receive@address,w
  2582  00C0  0024               	movlb	4	; select bank4
  2583  00C1  0091               	movwf	17	;volatile
  2584  00C2                     l279:	
  2585                           ;PIC_I2C1.c: 116: while(SSPSTATbits.R_nW);
  2586                           
  2587  00C2  1914               	btfsc	20,2	;volatile
  2588  00C3  28C2               	goto	l279
  2589                           
  2590                           ;PIC_I2C1.c: 118: result = SSPCON2bits.ACKSTAT;
  2591  00C4  3000               	movlw	0
  2592  00C5  1B16               	btfsc	22,6	;volatile
  2593  00C6  3001               	movlw	1
  2594  00C7  0020               	movlb	0	; select bank0
  2595  00C8  00B2               	movwf	I2C1_Receive@result
  2596                           
  2597                           ;PIC_I2C1.c: 119: if (!result)
  2598  00C9  0832               	movf	I2C1_Receive@result,w
  2599  00CA  1D03               	btfss	3,2
  2600  00CB  2910               	goto	l2040
  2601                           
  2602                           ;PIC_I2C1.c: 120: {
  2603                           ;PIC_I2C1.c: 121: for (uint8_t i=0;i<size;i++)
  2604  00CC  01B3               	clrf	I2C1_Receive@i
  2605  00CD                     l2038:	
  2606  00CD  082E               	movf	I2C1_Receive@size,w
  2607  00CE  0233               	subwf	I2C1_Receive@i,w
  2608  00CF  1803               	btfsc	3,0
  2609  00D0  2910               	goto	l2040
  2610  00D1                     l2026:	
  2611                           ;PIC_I2C1.c: 122: {
  2612                           ;PIC_I2C1.c: 123: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2613                           
  2614  00D1  3005               	movlw	5
  2615  00D2  0024               	movlb	4	; select bank4
  2616  00D3  0514               	andwf	20,w	;volatile
  2617  00D4  0020               	movlb	0	; select bank0
  2618  00D5  00AF               	movwf	??_I2C1_Receive
  2619  00D6  0024               	movlb	4	; select bank4
  2620  00D7  0816               	movf	22,w	;volatile
  2621  00D8  391F               	andlw	31
  2622  00D9  0020               	movlb	0	; select bank0
  2623  00DA  042F               	iorwf	??_I2C1_Receive,w
  2624  00DB  1D03               	btfss	3,2
  2625  00DC  28D1               	goto	l2026
  2626                           
  2627                           ;PIC_I2C1.c: 124: SSPCON2bits.RCEN = 1;
  2628  00DD  0024               	movlb	4	; select bank4
  2629  00DE  1596               	bsf	22,3	;volatile
  2630  00DF                     l288:	
  2631                           ;PIC_I2C1.c: 125: while(SSPCON2bits.RCEN);
  2632                           
  2633  00DF  1996               	btfsc	22,3	;volatile
  2634  00E0  28DF               	goto	l288
  2635                           
  2636                           ;PIC_I2C1.c: 126: *(pData+i) = SSPBUF;
  2637  00E1  0811               	movf	17,w	;volatile
  2638  00E2  0020               	movlb	0	; select bank0
  2639  00E3  00AF               	movwf	??_I2C1_Receive
  2640  00E4  0833               	movf	I2C1_Receive@i,w
  2641  00E5  072D               	addwf	I2C1_Receive@pData,w
  2642  00E6  00B0               	movwf	??_I2C1_Receive+1
  2643  00E7  0830               	movf	??_I2C1_Receive+1,w
  2644  00E8  0086               	movwf	6
  2645  00E9  0187               	clrf	7
  2646  00EA  082F               	movf	??_I2C1_Receive,w
  2647  00EB  0081               	movwf	1
  2648  00EC                     l2030:	
  2649                           ;PIC_I2C1.c: 127: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2650                           
  2651  00EC  3005               	movlw	5
  2652  00ED  0024               	movlb	4	; select bank4
  2653  00EE  0514               	andwf	20,w	;volatile
  2654  00EF  0020               	movlb	0	; select bank0
  2655  00F0  00AF               	movwf	??_I2C1_Receive
  2656  00F1  0024               	movlb	4	; select bank4
  2657  00F2  0816               	movf	22,w	;volatile
  2658  00F3  391F               	andlw	31
  2659  00F4  0020               	movlb	0	; select bank0
  2660  00F5  042F               	iorwf	??_I2C1_Receive,w
  2661  00F6  1D03               	btfss	3,2
  2662  00F7  28EC               	goto	l2030
  2663                           
  2664                           ;PIC_I2C1.c: 128: if (i == size-1)
  2665  00F8  082E               	movf	I2C1_Receive@size,w
  2666  00F9  3EFF               	addlw	255
  2667  00FA  00AF               	movwf	??_I2C1_Receive
  2668  00FB  30FF               	movlw	255
  2669  00FC  1803               	skipnc
  2670  00FD  3000               	movlw	0
  2671  00FE  00B0               	movwf	??_I2C1_Receive+1
  2672  00FF  0833               	movf	I2C1_Receive@i,w
  2673  0100  062F               	xorwf	??_I2C1_Receive,w
  2674  0101  0430               	iorwf	??_I2C1_Receive+1,w
  2675  0102  1D03               	skipz
  2676  0103  2907               	goto	l294
  2677                           
  2678                           ;PIC_I2C1.c: 129: SSPCON2bits.ACKDT = 1;
  2679  0104  0024               	movlb	4	; select bank4
  2680  0105  1696               	bsf	22,5	;volatile
  2681  0106  2909               	goto	l295
  2682  0107                     l294:	
  2683                           
  2684                           ;PIC_I2C1.c: 130: else
  2685                           ;PIC_I2C1.c: 131: SSPCON2bits.ACKDT = 0;
  2686  0107  0024               	movlb	4	; select bank4
  2687  0108  1296               	bcf	22,5	;volatile
  2688  0109                     l295:	
  2689                           
  2690                           ;PIC_I2C1.c: 132: SSPCON2bits.ACKEN = 1;
  2691  0109  1616               	bsf	22,4	;volatile
  2692  010A  3001               	movlw	1
  2693  010B  0020               	movlb	0	; select bank0
  2694  010C  00AF               	movwf	??_I2C1_Receive
  2695  010D  082F               	movf	??_I2C1_Receive,w
  2696  010E  07B3               	addwf	I2C1_Receive@i,f
  2697  010F  28CD               	goto	l2038
  2698  0110                     l2040:	
  2699                           ;PIC_I2C1.c: 133: }
  2700                           ;PIC_I2C1.c: 134: }
  2701                           ;PIC_I2C1.c: 136: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2702                           
  2703  0110  3005               	movlw	5
  2704  0111  0024               	movlb	4	; select bank4
  2705  0112  0514               	andwf	20,w	;volatile
  2706  0113  0020               	movlb	0	; select bank0
  2707  0114  00AF               	movwf	??_I2C1_Receive
  2708  0115  0024               	movlb	4	; select bank4
  2709  0116  0816               	movf	22,w	;volatile
  2710  0117  391F               	andlw	31
  2711  0118  0020               	movlb	0	; select bank0
  2712  0119  042F               	iorwf	??_I2C1_Receive,w
  2713  011A  1D03               	btfss	3,2
  2714  011B  2910               	goto	l2040
  2715                           
  2716                           ;PIC_I2C1.c: 137: SSPCON2bits.PEN = 1;
  2717  011C  0024               	movlb	4	; select bank4
  2718  011D  1516               	bsf	22,2	;volatile
  2719                           
  2720                           ;PIC_I2C1.c: 138: break;
  2721  011E  294F               	goto	l2058
  2722  011F                     l301:	
  2723                           ;PIC_I2C1.c: 140: case I2C_MODE_SLAVE:
  2724                           
  2725                           
  2726                           ;PIC_I2C1.c: 141: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2727  011F  0024               	movlb	4	; select bank4
  2728  0120  1D94               	btfss	20,3	;volatile
  2729  0121  1E14               	btfss	20,4	;volatile
  2730  0122  294F               	goto	l2058
  2731                           
  2732                           ;PIC_I2C1.c: 142: {
  2733                           ;PIC_I2C1.c: 143: for(uint8_t i = 0;i<size;i++)
  2734  0123  0020               	movlb	0	; select bank0
  2735  0124  01B4               	clrf	I2C1_Receive@i_472
  2736  0125                     l2050:	
  2737  0125  082E               	movf	I2C1_Receive@size,w
  2738  0126  0234               	subwf	I2C1_Receive@i_472,w
  2739  0127  1803               	btfsc	3,0
  2740  0128  293C               	goto	l2052
  2741                           
  2742                           ;PIC_I2C1.c: 144: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  2743  0129  0834               	movf	I2C1_Receive@i_472,w
  2744  012A  3EA8               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  2745  012B  0086               	movwf	6
  2746  012C  0187               	clrf	7
  2747  012D  0801               	movf	1,w
  2748  012E  00AF               	movwf	??_I2C1_Receive
  2749  012F  0834               	movf	I2C1_Receive@i_472,w
  2750  0130  072D               	addwf	I2C1_Receive@pData,w
  2751  0131  00B0               	movwf	??_I2C1_Receive+1
  2752  0132  0830               	movf	??_I2C1_Receive+1,w
  2753  0133  0086               	movwf	6
  2754  0134  0187               	clrf	7
  2755  0135  082F               	movf	??_I2C1_Receive,w
  2756  0136  0081               	movwf	1
  2757  0137  3001               	movlw	1
  2758  0138  00AF               	movwf	??_I2C1_Receive
  2759  0139  082F               	movf	??_I2C1_Receive,w
  2760  013A  07B4               	addwf	I2C1_Receive@i_472,f
  2761  013B  2925               	goto	l2050
  2762  013C                     l2052:	
  2763                           
  2764                           ;PIC_I2C1.c: 145: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  2765  013C  30A8               	movlw	(low (_I2C1_Config+8))& (0+255)
  2766  013D  3AFF               	xorlw	255
  2767  013E  3E01               	addlw	1
  2768  013F  0021               	movlb	1	; select bank1
  2769  0140  0731               	addwf	(_I2C1_Config^(0+128)+17),w
  2770  0141  0020               	movlb	0	; select bank0
  2771  0142  00AF               	movwf	??_I2C1_Receive
  2772  0143  082F               	movf	??_I2C1_Receive,w
  2773  0144  00B2               	movwf	I2C1_Receive@result
  2774                           
  2775                           ;PIC_I2C1.c: 148: }
  2776                           
  2777                           ;PIC_I2C1.c: 146: }
  2778                           ;PIC_I2C1.c: 147: break;
  2779  0145  294F               	goto	l2058
  2780  0146                     l2056:	
  2781  0146  0021               	movlb	1	; select bank1
  2782  0147  0832               	movf	(_I2C1_Config^(0+128)+18),w
  2783                           
  2784                           ; Switch size 1, requested type "space"
  2785                           ; Number of cases is 2, Range of values is 0 to 1
  2786                           ; switch strategies available:
  2787                           ; Name         Instructions Cycles
  2788                           ; simple_byte            7     4 (average)
  2789                           ; direct_byte           10     6 (fixed)
  2790                           ; jumptable            260     6 (fixed)
  2791                           ;	Chosen strategy is simple_byte
  2792  0148  3A00               	xorlw	0	; case 0
  2793  0149  1903               	skipnz
  2794  014A  28A4               	goto	l2014
  2795  014B  3A01               	xorlw	1	; case 1
  2796  014C  1903               	skipnz
  2797  014D  291F               	goto	l301
  2798  014E  294F               	goto	l2058
  2799  014F                     l2058:	
  2800                           
  2801                           ;PIC_I2C1.c: 150: return result;
  2802  014F  0020               	movlb	0	; select bank0
  2803  0150  0832               	movf	I2C1_Receive@result,w
  2804  0151  0008               	return
  2805  0152                     __end_of_I2C1_Receive:	
  2806                           
  2807                           	psect	text11
  2808  02F8                     __ptext11:	
  2809 ;; *************** function _I2C1_Init *****************
  2810 ;; Defined at:
  2811 ;;		line 8 in file "PIC_I2C1.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  I2C1_Init_PO    2   14[BANK0 ] PTR FTN()void 
  2814 ;;		 -> I2C_InitPort(1), 
  2815 ;;  address         1   16[BANK0 ] unsigned char 
  2816 ;;  mode            1   17[BANK0 ] enum E2424
  2817 ;;  Speed           1   18[BANK0 ] enum E2428
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1
  2829 ;;      Params:         0       5       0
  2830 ;;      Locals:         0       0       0
  2831 ;;      Temps:          0       1       0
  2832 ;;      Totals:         0       6       0
  2833 ;;Total ram usage:        6 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    5
  2836 ;; This function calls:
  2837 ;;		_I2C_InitPort
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _I2C1_Init
  2845  02F8                     _I2C1_Init:	
  2846                           
  2847                           ;PIC_I2C1.c: 10: I2C1_Init_PORT();
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _I2C1_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2851  02F8  0020               	movlb	0	; select bank0
  2852  02F9  082F               	movf	I2C1_Init@I2C1_Init_PORT+1,w
  2853  02FA  008A               	movwf	10
  2854  02FB  082E               	movf	I2C1_Init@I2C1_Init_PORT,w
  2855  02FC  000A               	callw
  2856  02FD  3182               	pagesel	$
  2857                           
  2858                           ;PIC_I2C1.c: 11: I2C1_Config.Mode = mode;
  2859  02FE  0020               	movlb	0	; select bank0
  2860  02FF  0831               	movf	I2C1_Init@mode,w
  2861  0300  00B3               	movwf	??_I2C1_Init
  2862  0301  0833               	movf	??_I2C1_Init,w
  2863  0302  0021               	movlb	1	; select bank1
  2864  0303  00B2               	movwf	(_I2C1_Config^(0+128)+18)
  2865                           
  2866                           ;PIC_I2C1.c: 13: switch(mode)
  2867  0304  2B3D               	goto	l1770
  2868  0305                     l224:	
  2869                           ;PIC_I2C1.c: 14: {
  2870                           ;PIC_I2C1.c: 15: case I2C_MODE_MASTER:
  2871                           
  2872                           
  2873                           ;PIC_I2C1.c: 16: SSPCON1 |= (0x08<<0);
  2874  0305  0024               	movlb	4	; select bank4
  2875  0306  1595               	bsf	21,3	;volatile
  2876                           
  2877                           ;PIC_I2C1.c: 17: if(Speed==I2C_SPEED_STANDARD)
  2878  0307  0020               	movlb	0	; select bank0
  2879  0308  0832               	movf	I2C1_Init@Speed,w
  2880  0309  1D03               	btfss	3,2
  2881  030A  2B0F               	goto	l1744
  2882                           
  2883                           ;PIC_I2C1.c: 18: {
  2884                           ;PIC_I2C1.c: 19: SSPSTAT |= (1<<7);
  2885  030B  0024               	movlb	4	; select bank4
  2886  030C  1794               	bsf	20,7	;volatile
  2887                           
  2888                           ;PIC_I2C1.c: 20: SSPADD = 0x4F;
  2889  030D  304F               	movlw	79
  2890  030E  2B19               	goto	L1
  2891  030F                     l1744:	
  2892                           ;PIC_I2C1.c: 21: }
  2893                           
  2894                           
  2895                           ;PIC_I2C1.c: 22: else if(Speed==I2C_SPEED_HIGH)
  2896  030F  0020               	movlb	0	; select bank0
  2897  0310  0332               	decf	I2C1_Init@Speed,w
  2898  0311  1D03               	btfss	3,2
  2899  0312  2B1A               	goto	l1750
  2900                           
  2901                           ;PIC_I2C1.c: 23: {
  2902                           ;PIC_I2C1.c: 24: SSPSTAT &= ~(1<<7);
  2903  0313  307F               	movlw	127
  2904  0314  00B3               	movwf	??_I2C1_Init
  2905  0315  0833               	movf	??_I2C1_Init,w
  2906  0316  0024               	movlb	4	; select bank4
  2907  0317  0594               	andwf	20,f	;volatile
  2908                           
  2909                           ;PIC_I2C1.c: 25: SSPADD = 0x13;
  2910  0318  3013               	movlw	19
  2911  0319                     L1:	
  2912  0319  0092               	movwf	18	;volatile
  2913  031A                     l1750:	
  2914                           
  2915                           ;PIC_I2C1.c: 26: }
  2916                           ;PIC_I2C1.c: 27: SSPCON1bits.SSPEN = 1;
  2917  031A  0024               	movlb	4	; select bank4
  2918  031B  2B3B               	goto	l1766
  2919  031C                     l1752:	
  2920                           ;PIC_I2C1.c: 30: case I2C_MODE_SLAVE:
  2921                           
  2922                           ;PIC_I2C1.c: 28: break;
  2923                           
  2924                           
  2925                           ;PIC_I2C1.c: 31: SSPSTAT = 0x00;
  2926  031C  0024               	movlb	4	; select bank4
  2927  031D  0194               	clrf	20	;volatile
  2928                           
  2929                           ;PIC_I2C1.c: 32: if(Speed==I2C_SPEED_STANDARD)
  2930  031E  0020               	movlb	0	; select bank0
  2931  031F  0832               	movf	I2C1_Init@Speed,w
  2932  0320  1D03               	btfss	3,2
  2933  0321  2B25               	goto	l1758
  2934                           
  2935                           ;PIC_I2C1.c: 33: SSPSTAT |= (1<<7);
  2936  0322  0024               	movlb	4	; select bank4
  2937  0323  1794               	bsf	20,7	;volatile
  2938  0324  2B2E               	goto	l231
  2939  0325                     l1758:	
  2940                           
  2941                           ;PIC_I2C1.c: 34: else if(Speed==I2C_SPEED_HIGH)
  2942  0325  0020               	movlb	0	; select bank0
  2943  0326  0332               	decf	I2C1_Init@Speed,w
  2944  0327  1D03               	btfss	3,2
  2945  0328  2B2E               	goto	l231
  2946                           
  2947                           ;PIC_I2C1.c: 35: SSPSTAT &= ~(1<<7);
  2948  0329  307F               	movlw	127
  2949  032A  00B3               	movwf	??_I2C1_Init
  2950  032B  0833               	movf	??_I2C1_Init,w
  2951  032C  0024               	movlb	4	; select bank4
  2952  032D  0594               	andwf	20,f	;volatile
  2953  032E                     l231:	
  2954                           
  2955                           ;PIC_I2C1.c: 37: SSPCON1 |= (0x06<<0);
  2956  032E  3006               	movlw	6
  2957  032F  0020               	movlb	0	; select bank0
  2958  0330  00B3               	movwf	??_I2C1_Init
  2959  0331  0833               	movf	??_I2C1_Init,w
  2960  0332  0024               	movlb	4	; select bank4
  2961  0333  0495               	iorwf	21,f	;volatile
  2962                           
  2963                           ;PIC_I2C1.c: 38: SSPCON2bits.SEN= 1;
  2964  0334  1416               	bsf	22,0	;volatile
  2965                           
  2966                           ;PIC_I2C1.c: 39: SSPADD = address << 1;
  2967  0335  0020               	movlb	0	; select bank0
  2968  0336  3530               	lslf	I2C1_Init@address,w
  2969  0337  0024               	movlb	4	; select bank4
  2970  0338  0092               	movwf	18	;volatile
  2971                           
  2972                           ;PIC_I2C1.c: 40: SSPMSK = 0xFE;
  2973  0339  30FE               	movlw	254
  2974  033A  0093               	movwf	19	;volatile
  2975  033B                     l1766:	
  2976                           
  2977                           ;PIC_I2C1.c: 41: SSPCON1bits.SSPEN = 1;
  2978  033B  1695               	bsf	21,5	;volatile
  2979                           
  2980                           ;PIC_I2C1.c: 43: }
  2981                           
  2982                           ;PIC_I2C1.c: 42: break;
  2983  033C  2B46               	goto	l228
  2984  033D                     l1770:	
  2985  033D  0020               	movlb	0	; select bank0
  2986  033E  0831               	movf	I2C1_Init@mode,w
  2987                           
  2988                           ; Switch size 1, requested type "space"
  2989                           ; Number of cases is 2, Range of values is 0 to 1
  2990                           ; switch strategies available:
  2991                           ; Name         Instructions Cycles
  2992                           ; simple_byte            7     4 (average)
  2993                           ; direct_byte           10     6 (fixed)
  2994                           ; jumptable            260     6 (fixed)
  2995                           ;	Chosen strategy is simple_byte
  2996  033F  3A00               	xorlw	0	; case 0
  2997  0340  1903               	skipnz
  2998  0341  2B05               	goto	l224
  2999  0342  3A01               	xorlw	1	; case 1
  3000  0343  1903               	skipnz
  3001  0344  2B1C               	goto	l1752
  3002  0345  2B46               	goto	l228
  3003  0346                     l228:	
  3004                           
  3005                           ;PIC_I2C1.c: 44: SSP1IE = 1;
  3006  0346  0021               	movlb	1	; select bank1
  3007  0347  1591               	bsf	17,3	;volatile
  3008                           
  3009                           ;PIC_I2C1.c: 45: BCL1IE = 1;
  3010  0348  1592               	bsf	18,3	;volatile
  3011                           
  3012                           ;PIC_I2C1.c: 46: SSP1IF = 0;
  3013  0349  0020               	movlb	0	; select bank0
  3014  034A  1191               	bcf	17,3	;volatile
  3015                           
  3016                           ;PIC_I2C1.c: 47: BCL1IF = 0;
  3017  034B  1192               	bcf	18,3	;volatile
  3018                           
  3019                           ;PIC_I2C1.c: 49: PEIE = 1;
  3020  034C  170B               	bsf	11,6	;volatile
  3021                           
  3022                           ;PIC_I2C1.c: 50: GIE = 1;
  3023  034D  178B               	bsf	11,7	;volatile
  3024  034E  0008               	return
  3025  034F                     __end_of_I2C1_Init:	
  3026                           
  3027                           	psect	text12
  3028  0594                     __ptext12:	
  3029 ;; *************** function _I2C_InitPort *****************
  3030 ;; Defined at:
  3031 ;;		line 114 in file "main.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1
  3045 ;;      Params:         0       0       0
  3046 ;;      Locals:         0       0       0
  3047 ;;      Temps:          0       1       0
  3048 ;;      Totals:         0       1       0
  3049 ;;Total ram usage:        1 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    4
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;;		_I2C1_Init
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _I2C_InitPort
  3062  0594                     _I2C_InitPort:	
  3063                           
  3064                           ;main.c: 116: TRISA |= (1<<1);
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _I2C_InitPort: [wreg+status,2+status,0]
  3068  0594  0021               	movlb	1	; select bank1
  3069  0595  148C               	bsf	12,1	;volatile
  3070                           
  3071                           ;main.c: 117: TRISA |= (1<<2);
  3072  0596  150C               	bsf	12,2	;volatile
  3073                           
  3074                           ;main.c: 119: ANSELA &= ~(1<<1);
  3075  0597  30FD               	movlw	253
  3076  0598  0020               	movlb	0	; select bank0
  3077  0599  00AD               	movwf	??_I2C_InitPort
  3078  059A  082D               	movf	??_I2C_InitPort,w
  3079  059B  0023               	movlb	3	; select bank3
  3080  059C  058C               	andwf	12,f	;volatile
  3081                           
  3082                           ;main.c: 120: ANSELA &= ~(1<<2);
  3083  059D  30FB               	movlw	251
  3084  059E  0020               	movlb	0	; select bank0
  3085  059F  00AD               	movwf	??_I2C_InitPort
  3086  05A0  082D               	movf	??_I2C_InitPort,w
  3087  05A1  0023               	movlb	3	; select bank3
  3088  05A2  058C               	andwf	12,f	;volatile
  3089  05A3  0008               	return
  3090  05A4                     __end_of_I2C_InitPort:	
  3091                           
  3092                           	psect	text13
  3093  05A4                     __ptext13:	
  3094 ;; *************** function _Basic_Init *****************
  3095 ;; Defined at:
  3096 ;;		line 91 in file "main.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1
  3110 ;;      Params:         0       0       0
  3111 ;;      Locals:         0       0       0
  3112 ;;      Temps:          0       0       0
  3113 ;;      Totals:         0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    4
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _Basic_Init
  3126  05A4                     _Basic_Init:	
  3127                           
  3128                           ;main.c: 93: OSCCON = 0xF0;
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _Basic_Init: [wreg+status,2]
  3132  05A4  30F0               	movlw	240
  3133  05A5  0021               	movlb	1	; select bank1
  3134  05A6  0099               	movwf	25	;volatile
  3135                           
  3136                           ;main.c: 97: TRISA = 0x00;
  3137  05A7  018C               	clrf	12	;volatile
  3138                           
  3139                           ;main.c: 98: ANSELA = 0x00;
  3140  05A8  0023               	movlb	3	; select bank3
  3141  05A9  018C               	clrf	12	;volatile
  3142                           
  3143                           ;main.c: 99: WPUA = 0x00;
  3144  05AA  0024               	movlb	4	; select bank4
  3145  05AB  018C               	clrf	12	;volatile
  3146                           
  3147                           ;main.c: 102: APFCON = 0x00;
  3148  05AC  0022               	movlb	2	; select bank2
  3149  05AD  019D               	clrf	29	;volatile
  3150                           
  3151                           ;main.c: 104: PORTA = 0x00;
  3152  05AE  0020               	movlb	0	; select bank0
  3153  05AF  018C               	clrf	12	;volatile
  3154  05B0  0008               	return
  3155  05B1                     __end_of_Basic_Init:	
  3156                           
  3157                           	psect	intentry
  3158  0004                     __pintentry:	
  3159 ;; *************** function _Handle *****************
  3160 ;; Defined at:
  3161 ;;		line 39 in file "main.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1
  3175 ;;      Params:         0       0       0
  3176 ;;      Locals:         0       0       0
  3177 ;;      Temps:          0       3       0
  3178 ;;      Totals:         0       3       0
  3179 ;;Total ram usage:        3 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    3
  3182 ;; This function calls:
  3183 ;;		_I2C_Interrupt
  3184 ;;		_MPU6050_Read_MultiData
  3185 ;;		_SWAP
  3186 ;;		_Timer0_CheckFlag
  3187 ;;		_UART_Interrupt
  3188 ;;		_UART_Transmit
  3189 ;; This function is called by:
  3190 ;;		Interrupt level 1
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194  0004                     _Handle:	
  3195                           
  3196                           ;incstack = 0
  3197  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3198                           
  3199                           ; Regs used in _Handle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3200  0005  3180               	pagesel	$
  3201  0006  0020               	movlb	0	; select bank0
  3202  0007  087F               	movf	127,w
  3203  0008  00AC               	movwf	??_Handle+2
  3204                           
  3205                           ;main.c: 41: static accel_t_gyro_union accel_t_gyro;
  3206                           ;main.c: 42: static uint16_t count = 0;
  3207                           ;main.c: 44: if(Timer0_CheckFlag())
  3208  0009  25B1               	fcall	_Timer0_CheckFlag
  3209  000A  3A00               	xorlw	0
  3210  000B  1903               	skipnz
  3211  000C  288A               	goto	i1l2264
  3212                           
  3213                           ;main.c: 45: {
  3214                           ;main.c: 46: count++;
  3215  000D  3001               	movlw	1
  3216  000E  0020               	movlb	0	; select bank0
  3217  000F  07D0               	addwf	Handle@count,f
  3218  0010  3000               	movlw	0
  3219  0011  3DD1               	addwfc	Handle@count+1,f
  3220                           
  3221                           ;main.c: 47: if(count>500)
  3222  0012  3001               	movlw	1
  3223  0013  0251               	subwf	Handle@count+1,w
  3224  0014  30F5               	movlw	245
  3225  0015  1903               	skipnz
  3226  0016  0250               	subwf	Handle@count,w
  3227  0017  1C03               	skipc
  3228  0018  288A               	goto	i1l2264
  3229                           
  3230                           ;main.c: 48: {
  3231                           ;main.c: 49: count = 0;
  3232  0019  01D0               	clrf	Handle@count
  3233  001A  01D1               	clrf	Handle@count+1
  3234                           
  3235                           ;main.c: 50: MPU6050_Read_MultiData(0x3B,(uint8_t *)&accel_t_gyro,sizeof(accel_t_gyro));
  3236  001B  3055               	movlw	(low (Handle@accel_t_gyro| 0))& (0+255)
  3237  001C  00AA               	movwf	??_Handle
  3238  001D  082A               	movf	??_Handle,w
  3239  001E  00A2               	movwf	MPU6050_Read_MultiData@pData
  3240  001F  300E               	movlw	14
  3241  0020  00AB               	movwf	??_Handle+1
  3242  0021  082B               	movf	??_Handle+1,w
  3243  0022  00A3               	movwf	MPU6050_Read_MultiData@size
  3244  0023  303B               	movlw	59
  3245  0024  2466               	fcall	_MPU6050_Read_MultiData
  3246                           
  3247                           ;main.c: 52: SWAP(&accel_t_gyro.reg.x_accel_h, &accel_t_gyro.reg.x_accel_l);
  3248  0025  3056               	movlw	(low ((Handle@accel_t_gyro| 0+1)))& (0+255)
  3249  0026  0020               	movlb	0	; select bank0
  3250  0027  00AA               	movwf	??_Handle
  3251  0028  082A               	movf	??_Handle,w
  3252  0029  00F0               	movwf	SWAP@y
  3253  002A  3055               	movlw	(low (Handle@accel_t_gyro| 0))& (0+255)
  3254  002B  255A               	fcall	_SWAP
  3255                           
  3256                           ;main.c: 53: SWAP(&accel_t_gyro.reg.y_accel_h, &accel_t_gyro.reg.y_accel_l);
  3257  002C  3058               	movlw	(low ((Handle@accel_t_gyro| 0+3)))& (0+255)
  3258  002D  0020               	movlb	0	; select bank0
  3259  002E  00AA               	movwf	??_Handle
  3260  002F  082A               	movf	??_Handle,w
  3261  0030  00F0               	movwf	SWAP@y
  3262  0031  3057               	movlw	(low ((Handle@accel_t_gyro| 0+2)))& (0+255)
  3263  0032  255A               	fcall	_SWAP
  3264                           
  3265                           ;main.c: 54: SWAP(&accel_t_gyro.reg.z_accel_h, &accel_t_gyro.reg.z_accel_l);
  3266  0033  305A               	movlw	(low ((Handle@accel_t_gyro| 0+5)))& (0+255)
  3267  0034  0020               	movlb	0	; select bank0
  3268  0035  00AA               	movwf	??_Handle
  3269  0036  082A               	movf	??_Handle,w
  3270  0037  00F0               	movwf	SWAP@y
  3271  0038  3059               	movlw	(low ((Handle@accel_t_gyro| 0+4)))& (0+255)
  3272  0039  255A               	fcall	_SWAP
  3273                           
  3274                           ;main.c: 55: SWAP(&accel_t_gyro.reg.t_h, &accel_t_gyro.reg.t_l);
  3275  003A  305C               	movlw	(low ((Handle@accel_t_gyro| 0+7)))& (0+255)
  3276  003B  0020               	movlb	0	; select bank0
  3277  003C  00AA               	movwf	??_Handle
  3278  003D  082A               	movf	??_Handle,w
  3279  003E  00F0               	movwf	SWAP@y
  3280  003F  305B               	movlw	(low ((Handle@accel_t_gyro| 0+6)))& (0+255)
  3281  0040  255A               	fcall	_SWAP
  3282                           
  3283                           ;main.c: 56: SWAP(&accel_t_gyro.reg.x_gyro_h, &accel_t_gyro.reg.x_gyro_l);
  3284  0041  305E               	movlw	(low ((Handle@accel_t_gyro| 0+9)))& (0+255)
  3285  0042  0020               	movlb	0	; select bank0
  3286  0043  00AA               	movwf	??_Handle
  3287  0044  082A               	movf	??_Handle,w
  3288  0045  00F0               	movwf	SWAP@y
  3289  0046  305D               	movlw	(low ((Handle@accel_t_gyro| 0+8)))& (0+255)
  3290  0047  255A               	fcall	_SWAP
  3291                           
  3292                           ;main.c: 57: SWAP(&accel_t_gyro.reg.y_gyro_h, &accel_t_gyro.reg.y_gyro_l);
  3293  0048  3060               	movlw	(low ((Handle@accel_t_gyro| 0+11)))& (0+255)
  3294  0049  0020               	movlb	0	; select bank0
  3295  004A  00AA               	movwf	??_Handle
  3296  004B  082A               	movf	??_Handle,w
  3297  004C  00F0               	movwf	SWAP@y
  3298  004D  305F               	movlw	(low ((Handle@accel_t_gyro| 0+10)))& (0+255)
  3299  004E  255A               	fcall	_SWAP
  3300                           
  3301                           ;main.c: 58: SWAP(&accel_t_gyro.reg.z_gyro_h, &accel_t_gyro.reg.z_gyro_l);
  3302  004F  3062               	movlw	(low ((Handle@accel_t_gyro| 0+13)))& (0+255)
  3303  0050  0020               	movlb	0	; select bank0
  3304  0051  00AA               	movwf	??_Handle
  3305  0052  082A               	movf	??_Handle,w
  3306  0053  00F0               	movwf	SWAP@y
  3307  0054  3061               	movlw	(low ((Handle@accel_t_gyro| 0+12)))& (0+255)
  3308  0055  255A               	fcall	_SWAP
  3309                           
  3310                           ;main.c: 60: UART_Transmit(0xFF);
  3311  0056  30FF               	movlw	255
  3312  0057  25BC               	fcall	_UART_Transmit
  3313                           
  3314                           ;main.c: 61: UART_Transmit(0xFF);
  3315  0058  30FF               	movlw	255
  3316  0059  25BC               	fcall	_UART_Transmit
  3317                           
  3318                           ;main.c: 62: UART_Transmit(0xFF);
  3319  005A  30FF               	movlw	255
  3320  005B  25BC               	fcall	_UART_Transmit
  3321                           
  3322                           ;main.c: 63: UART_Transmit(0xFF);
  3323  005C  30FF               	movlw	255
  3324  005D  25BC               	fcall	_UART_Transmit
  3325                           
  3326                           ;main.c: 64: UART_Transmit(0xFF);
  3327  005E  30FF               	movlw	255
  3328  005F  25BC               	fcall	_UART_Transmit
  3329                           
  3330                           ;main.c: 66: UART_Transmit(accel_t_gyro.reg.x_accel_h);
  3331  0060  0020               	movlb	0	; select bank0
  3332  0061  0855               	movf	Handle@accel_t_gyro,w
  3333  0062  25BC               	fcall	_UART_Transmit
  3334                           
  3335                           ;main.c: 67: UART_Transmit(accel_t_gyro.reg.x_accel_l);
  3336  0063  0020               	movlb	0	; select bank0
  3337  0064  0856               	movf	Handle@accel_t_gyro+1,w
  3338  0065  25BC               	fcall	_UART_Transmit
  3339                           
  3340                           ;main.c: 68: UART_Transmit(accel_t_gyro.reg.y_accel_h);
  3341  0066  0020               	movlb	0	; select bank0
  3342  0067  0857               	movf	Handle@accel_t_gyro+2,w
  3343  0068  25BC               	fcall	_UART_Transmit
  3344                           
  3345                           ;main.c: 69: UART_Transmit(accel_t_gyro.reg.y_accel_l);
  3346  0069  0020               	movlb	0	; select bank0
  3347  006A  0858               	movf	Handle@accel_t_gyro+3,w
  3348  006B  25BC               	fcall	_UART_Transmit
  3349                           
  3350                           ;main.c: 70: UART_Transmit(accel_t_gyro.reg.z_accel_h);
  3351  006C  0020               	movlb	0	; select bank0
  3352  006D  0859               	movf	Handle@accel_t_gyro+4,w
  3353  006E  25BC               	fcall	_UART_Transmit
  3354                           
  3355                           ;main.c: 71: UART_Transmit(accel_t_gyro.reg.z_accel_l);
  3356  006F  0020               	movlb	0	; select bank0
  3357  0070  085A               	movf	Handle@accel_t_gyro+5,w
  3358  0071  25BC               	fcall	_UART_Transmit
  3359                           
  3360                           ;main.c: 73: UART_Transmit(accel_t_gyro.reg.t_h);
  3361  0072  0020               	movlb	0	; select bank0
  3362  0073  085B               	movf	Handle@accel_t_gyro+6,w
  3363  0074  25BC               	fcall	_UART_Transmit
  3364                           
  3365                           ;main.c: 74: UART_Transmit(accel_t_gyro.reg.t_l);
  3366  0075  0020               	movlb	0	; select bank0
  3367  0076  085C               	movf	Handle@accel_t_gyro+7,w
  3368  0077  25BC               	fcall	_UART_Transmit
  3369                           
  3370                           ;main.c: 76: UART_Transmit(accel_t_gyro.reg.x_gyro_h);
  3371  0078  0020               	movlb	0	; select bank0
  3372  0079  085D               	movf	Handle@accel_t_gyro+8,w
  3373  007A  25BC               	fcall	_UART_Transmit
  3374                           
  3375                           ;main.c: 77: UART_Transmit(accel_t_gyro.reg.x_gyro_l);
  3376  007B  0020               	movlb	0	; select bank0
  3377  007C  085E               	movf	Handle@accel_t_gyro+9,w
  3378  007D  25BC               	fcall	_UART_Transmit
  3379                           
  3380                           ;main.c: 78: UART_Transmit(accel_t_gyro.reg.y_gyro_h);
  3381  007E  0020               	movlb	0	; select bank0
  3382  007F  085F               	movf	Handle@accel_t_gyro+10,w
  3383  0080  25BC               	fcall	_UART_Transmit
  3384                           
  3385                           ;main.c: 79: UART_Transmit(accel_t_gyro.reg.y_gyro_l);
  3386  0081  0020               	movlb	0	; select bank0
  3387  0082  0860               	movf	Handle@accel_t_gyro+11,w
  3388  0083  25BC               	fcall	_UART_Transmit
  3389                           
  3390                           ;main.c: 80: UART_Transmit(accel_t_gyro.reg.z_gyro_h);
  3391  0084  0020               	movlb	0	; select bank0
  3392  0085  0861               	movf	Handle@accel_t_gyro+12,w
  3393  0086  25BC               	fcall	_UART_Transmit
  3394                           
  3395                           ;main.c: 81: UART_Transmit(accel_t_gyro.reg.z_gyro_l);
  3396  0087  0020               	movlb	0	; select bank0
  3397  0088  0862               	movf	Handle@accel_t_gyro+13,w
  3398  0089  25BC               	fcall	_UART_Transmit
  3399  008A                     i1l2264:	
  3400                           
  3401                           ;main.c: 85: }
  3402                           ;main.c: 86: }
  3403                           ;main.c: 87: UART_Interrupt();
  3404  008A  2416               	fcall	_UART_Interrupt
  3405                           
  3406                           ;main.c: 88: I2C_Interrupt();
  3407  008B  25CA               	fcall	_I2C_Interrupt
  3408  008C  0020               	movlb	0	; select bank0
  3409  008D  082C               	movf	??_Handle+2,w
  3410  008E  00FF               	movwf	127
  3411  008F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3412  0090  0009               	retfie
  3413  0091                     __end_of_Handle:	
  3414                           
  3415                           	psect	text15
  3416  05BC                     __ptext15:	
  3417 ;; *************** function _UART_Transmit *****************
  3418 ;; Defined at:
  3419 ;;		line 70 in file "PIC_UART.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;  dt              1    wreg     unsigned char 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  dt              1    0[COMMON] unsigned char 
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 0/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1
  3433 ;;      Params:         0       0       0
  3434 ;;      Locals:         1       0       0
  3435 ;;      Temps:          0       0       0
  3436 ;;      Totals:         1       0       0
  3437 ;;Total ram usage:        1 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_Handle
  3443 ;;		_putch
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           
  3448                           ;psect for function _UART_Transmit
  3449  05BC                     _UART_Transmit:	
  3450                           
  3451                           ;incstack = 0
  3452                           ; Regs used in _UART_Transmit: [wreg]
  3453                           ;UART_Transmit@dt stored from wreg
  3454  05BC  00F0               	movwf	UART_Transmit@dt
  3455  05BD                     i1l123:	
  3456                           ;PIC_UART.c: 72: while (TXIF == 0);
  3457                           
  3458  05BD  0020               	movlb	0	; select bank0
  3459  05BE  1E11               	btfss	17,4	;volatile
  3460  05BF  2DBD               	goto	i1l123
  3461                           
  3462                           ;PIC_UART.c: 73: TXREG = dt;
  3463  05C0  0870               	movf	UART_Transmit@dt,w
  3464  05C1  0023               	movlb	3	; select bank3
  3465  05C2  009A               	movwf	26	;volatile
  3466  05C3  0008               	return
  3467  05C4                     __end_of_UART_Transmit:	
  3468                           
  3469                           	psect	text16
  3470  0416                     __ptext16:	
  3471 ;; *************** function _UART_Interrupt *****************
  3472 ;; Defined at:
  3473 ;;		line 107 in file "PIC_UART.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  x               1    2[COMMON] unsigned char 
  3478 ;;  dt              1    1[COMMON] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1
  3488 ;;      Params:         0       0       0
  3489 ;;      Locals:         2       0       0
  3490 ;;      Temps:          1       0       0
  3491 ;;      Totals:         3       0       0
  3492 ;;Total ram usage:        3 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_Handle
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           
  3502                           ;psect for function _UART_Interrupt
  3503  0416                     _UART_Interrupt:	
  3504                           
  3505                           ;PIC_UART.c: 109: uint8_t x;
  3506                           ;PIC_UART.c: 110: uint8_t dt;
  3507                           ;PIC_UART.c: 112: if (RCIF == 1)
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3511  0416  0020               	movlb	0	; select bank0
  3512  0417  1E91               	btfss	17,5	;volatile
  3513  0418  0008               	return
  3514                           
  3515                           ;PIC_UART.c: 113: {
  3516                           ;PIC_UART.c: 114: dt = RCREG;
  3517  0419  0023               	movlb	3	; select bank3
  3518  041A  0819               	movf	25,w	;volatile
  3519  041B  00F0               	movwf	??_UART_Interrupt
  3520  041C  0870               	movf	??_UART_Interrupt,w
  3521  041D  00F1               	movwf	UART_Interrupt@dt
  3522                           
  3523                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 8;
  3524  041E  0020               	movlb	0	; select bank0
  3525  041F  0853               	movf	_UART_Buffer_outptr,w
  3526  0420  3E01               	addlw	1
  3527  0421  3907               	andlw	7
  3528  0422  00F0               	movwf	??_UART_Interrupt
  3529  0423  0870               	movf	??_UART_Interrupt,w
  3530  0424  00F2               	movwf	UART_Interrupt@x
  3531                           
  3532                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  3533  0425  0872               	movf	UART_Interrupt@x,w
  3534  0426  0654               	xorwf	_UART_Buffer_inptr,w
  3535  0427  1903               	skipnz
  3536  0428  2C35               	goto	i1l1862
  3537                           
  3538                           ;PIC_UART.c: 117: {
  3539                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  3540  0429  0871               	movf	UART_Interrupt@dt,w
  3541  042A  00F0               	movwf	??_UART_Interrupt
  3542  042B  0853               	movf	_UART_Buffer_outptr,w
  3543  042C  3E48               	addlw	(low (_UART_Buffer| 0))& (0+255)
  3544  042D  0086               	movwf	6
  3545  042E  0187               	clrf	7
  3546  042F  0870               	movf	??_UART_Interrupt,w
  3547  0430  0081               	movwf	1
  3548                           
  3549                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  3550  0431  0872               	movf	UART_Interrupt@x,w
  3551  0432  00F0               	movwf	??_UART_Interrupt
  3552  0433  0870               	movf	??_UART_Interrupt,w
  3553  0434  00D3               	movwf	_UART_Buffer_outptr
  3554  0435                     i1l1862:	
  3555                           
  3556                           ;PIC_UART.c: 120: }
  3557                           ;PIC_UART.c: 122: if (OERR == 1)
  3558  0435  0023               	movlb	3	; select bank3
  3559  0436  1C9D               	btfss	29,1	;volatile
  3560  0437  2C3C               	goto	i1l144
  3561                           
  3562                           ;PIC_UART.c: 123: {
  3563                           ;PIC_UART.c: 124: CREN = 0;
  3564  0438  121D               	bcf	29,4	;volatile
  3565  0439                     i1l145:	
  3566                           ;PIC_UART.c: 125: while (OERR);
  3567                           
  3568  0439  189D               	btfsc	29,1	;volatile
  3569  043A  2C39               	goto	i1l145
  3570                           
  3571                           ;PIC_UART.c: 126: CREN = 1;
  3572  043B  161D               	bsf	29,4	;volatile
  3573  043C                     i1l144:	
  3574                           
  3575                           ;PIC_UART.c: 127: }
  3576                           ;PIC_UART.c: 128: RCIF = 0;
  3577  043C  0020               	movlb	0	; select bank0
  3578  043D  1291               	bcf	17,5	;volatile
  3579  043E  0008               	return
  3580  043F                     __end_of_UART_Interrupt:	
  3581                           
  3582                           	psect	text17
  3583  05B1                     __ptext17:	
  3584 ;; *************** function _Timer0_CheckFlag *****************
  3585 ;; Defined at:
  3586 ;;		line 21 in file "PIC_Timer0.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;		None
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;		None
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  1    wreg      unsigned char 
  3593 ;; Registers used:
  3594 ;;		wreg
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1
  3600 ;;      Params:         0       0       0
  3601 ;;      Locals:         0       0       0
  3602 ;;      Temps:          0       0       0
  3603 ;;      Totals:         0       0       0
  3604 ;;Total ram usage:        0 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_Handle
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _Timer0_CheckFlag
  3615  05B1                     _Timer0_CheckFlag:	
  3616                           
  3617                           ;PIC_Timer0.c: 23: if(TMR0IE&&TMR0IF)
  3618                           
  3619                           ;incstack = 0
  3620                           ; Regs used in _Timer0_CheckFlag: [wreg]
  3621  05B1  1A8B               	btfsc	11,5	;volatile
  3622  05B2  1D0B               	btfss	11,2	;volatile
  3623  05B3  2DBA               	goto	i1l1834
  3624                           
  3625                           ;PIC_Timer0.c: 24: {
  3626                           ;PIC_Timer0.c: 25: TMR0 = TMR0_ReloadTemp;
  3627  05B4  0020               	movlb	0	; select bank0
  3628  05B5  0852               	movf	_TMR0_ReloadTemp,w
  3629  05B6  0095               	movwf	21	;volatile
  3630                           
  3631                           ;PIC_Timer0.c: 26: TMR0IF = 0;
  3632  05B7  110B               	bcf	11,2	;volatile
  3633                           
  3634                           ;PIC_Timer0.c: 27: return 1;
  3635  05B8  3001               	movlw	1
  3636  05B9  0008               	return
  3637  05BA                     i1l1834:	
  3638                           
  3639                           ;PIC_Timer0.c: 28: }
  3640                           ;PIC_Timer0.c: 29: return 0;
  3641  05BA  3000               	movlw	0
  3642  05BB  0008               	return
  3643  05BC                     __end_of_Timer0_CheckFlag:	
  3644                           
  3645                           	psect	text18
  3646  055A                     __ptext18:	
  3647 ;; *************** function _SWAP *****************
  3648 ;; Defined at:
  3649 ;;		line 32 in file "main.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  x               1    wreg     PTR unsigned char 
  3652 ;;		 -> Handle@accel_t_gyro(14), 
  3653 ;;  y               1    0[COMMON] PTR unsigned char 
  3654 ;;		 -> Handle@accel_t_gyro(14), 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  x               1    3[COMMON] PTR unsigned char 
  3657 ;;		 -> Handle@accel_t_gyro(14), 
  3658 ;;  swap            1    2[COMMON] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  1    wreg      void 
  3661 ;; Registers used:
  3662 ;;		wreg, fsr1l, fsr1h
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1
  3668 ;;      Params:         1       0       0
  3669 ;;      Locals:         2       0       0
  3670 ;;      Temps:          1       0       0
  3671 ;;      Totals:         4       0       0
  3672 ;;Total ram usage:        4 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_Handle
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function _SWAP
  3683  055A                     _SWAP:	
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in _SWAP: [wregfsr1]
  3687                           ;SWAP@x stored from wreg
  3688  055A  00F3               	movwf	SWAP@x
  3689                           
  3690                           ;main.c: 34: uint8_t swap = *x;
  3691  055B  0873               	movf	SWAP@x,w
  3692  055C  0086               	movwf	6
  3693  055D  0187               	clrf	7
  3694  055E  0801               	movf	1,w
  3695  055F  00F1               	movwf	??_SWAP
  3696  0560  0871               	movf	??_SWAP,w
  3697  0561  00F2               	movwf	SWAP@swap
  3698                           
  3699                           ;main.c: 35: *x = *y;
  3700  0562  0870               	movf	SWAP@y,w
  3701  0563  0086               	movwf	6
  3702  0564  0187               	clrf	7
  3703  0565  0801               	movf	1,w
  3704  0566  00F1               	movwf	??_SWAP
  3705  0567  0873               	movf	SWAP@x,w
  3706  0568  0086               	movwf	6
  3707  0569  0187               	clrf	7
  3708  056A  0871               	movf	??_SWAP,w
  3709  056B  0081               	movwf	1
  3710                           
  3711                           ;main.c: 36: *y = swap;
  3712  056C  0872               	movf	SWAP@swap,w
  3713  056D  00F1               	movwf	??_SWAP
  3714  056E  0870               	movf	SWAP@y,w
  3715  056F  0086               	movwf	6
  3716  0570  0187               	clrf	7
  3717  0571  0871               	movf	??_SWAP,w
  3718  0572  0081               	movwf	1
  3719  0573  0008               	return
  3720  0574                     __end_of_SWAP:	
  3721                           
  3722                           	psect	text19
  3723  0466                     __ptext19:	
  3724 ;; *************** function _MPU6050_Read_MultiData *****************
  3725 ;; Defined at:
  3726 ;;		line 27 in file "MPU6050.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  reg             1    wreg     unsigned char 
  3729 ;;  pData           1    2[BANK0 ] PTR unsigned char 
  3730 ;;		 -> Handle@accel_t_gyro(14), 
  3731 ;;  size            1    3[BANK0 ] unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  reg             1    9[BANK0 ] unsigned char 
  3734 ;;  result          1    8[BANK0 ] char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      char 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1
  3744 ;;      Params:         0       2       0
  3745 ;;      Locals:         0       2       0
  3746 ;;      Temps:          0       4       0
  3747 ;;      Totals:         0       8       0
  3748 ;;Total ram usage:        8 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    2
  3751 ;; This function calls:
  3752 ;;		i1_I2C_Receive
  3753 ;;		i1_I2C_Transmit
  3754 ;; This function is called by:
  3755 ;;		_Handle
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           
  3760                           ;psect for function _MPU6050_Read_MultiData
  3761  0466                     _MPU6050_Read_MultiData:	
  3762                           
  3763                           ;incstack = 0
  3764                           ; Regs used in _MPU6050_Read_MultiData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3765                           ;MPU6050_Read_MultiData@reg stored from wreg
  3766  0466  0020               	movlb	0	; select bank0
  3767  0467  00A9               	movwf	MPU6050_Read_MultiData@reg
  3768                           
  3769                           ;MPU6050.c: 29: int8_t result = 0;
  3770  0468  01A8               	clrf	MPU6050_Read_MultiData@result
  3771                           
  3772                           ;MPU6050.c: 31: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  3773  0469  3068               	movlw	104
  3774  046A  00A4               	movwf	??_MPU6050_Read_MultiData
  3775  046B  0824               	movf	??_MPU6050_Read_MultiData,w
  3776  046C  00F8               	movwf	i1I2C_Transmit@address
  3777  046D  3029               	movlw	(low (MPU6050_Read_MultiData@reg| 0))& (0+255)
  3778  046E  00A5               	movwf	??_MPU6050_Read_MultiData+1
  3779  046F  0825               	movf	??_MPU6050_Read_MultiData+1,w
  3780  0470  00F9               	movwf	i1I2C_Transmit@pData
  3781  0471  01FA               	clrf	i1I2C_Transmit@size
  3782  0472  0AFA               	incf	i1I2C_Transmit@size,f
  3783  0473  3000               	movlw	0
  3784  0474  2524               	fcall	i1_I2C_Transmit
  3785  0475  0020               	movlb	0	; select bank0
  3786  0476  00A6               	movwf	??_MPU6050_Read_MultiData+2
  3787  0477  0826               	movf	??_MPU6050_Read_MultiData+2,w
  3788  0478  07A8               	addwf	MPU6050_Read_MultiData@result,f
  3789                           
  3790                           ;MPU6050.c: 32: result += I2C_Receive(I2C1_MODULE,0x68,pData,size);
  3791  0479  3068               	movlw	104
  3792  047A  00A4               	movwf	??_MPU6050_Read_MultiData
  3793  047B  0824               	movf	??_MPU6050_Read_MultiData,w
  3794  047C  00F8               	movwf	i1I2C_Receive@address
  3795  047D  0822               	movf	MPU6050_Read_MultiData@pData,w
  3796  047E  00A5               	movwf	??_MPU6050_Read_MultiData+1
  3797  047F  0825               	movf	??_MPU6050_Read_MultiData+1,w
  3798  0480  00F9               	movwf	i1I2C_Receive@pData
  3799  0481  0823               	movf	MPU6050_Read_MultiData@size,w
  3800  0482  00A6               	movwf	??_MPU6050_Read_MultiData+2
  3801  0483  0826               	movf	??_MPU6050_Read_MultiData+2,w
  3802  0484  00FA               	movwf	i1I2C_Receive@size
  3803  0485  3000               	movlw	0
  3804  0486  253F               	fcall	i1_I2C_Receive
  3805  0487  0020               	movlb	0	; select bank0
  3806  0488  00A7               	movwf	??_MPU6050_Read_MultiData+3
  3807  0489  0827               	movf	??_MPU6050_Read_MultiData+3,w
  3808  048A  07A8               	addwf	MPU6050_Read_MultiData@result,f
  3809  048B  0008               	return
  3810  048C                     __end_of_MPU6050_Read_MultiData:	
  3811                           ;MPU6050.c: 34: return result;
  3812                           ;	Return value of _MPU6050_Read_MultiData is never used
  3813                           
  3814                           
  3815                           	psect	text20
  3816  0524                     __ptext20:	
  3817 ;; *************** function i1_I2C_Transmit *****************
  3818 ;; Defined at:
  3819 ;;		line 5 in file "PIC_I2C.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;  I2Cx            1    wreg     enum E2432
  3822 ;;  address         1    8[COMMON] unsigned char 
  3823 ;;  pData           1    9[COMMON] PTR unsigned char 
  3824 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  3825 ;;  size            1   10[COMMON] unsigned char 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;  I2Cx            1    0[BANK0 ] enum E2432
  3828 ;;  I2C_Transmit    1    1[BANK0 ] char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      char 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1
  3838 ;;      Params:         3       0       0
  3839 ;;      Locals:         0       2       0
  3840 ;;      Temps:          3       0       0
  3841 ;;      Totals:         6       2       0
  3842 ;;Total ram usage:        8 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    1
  3845 ;; This function calls:
  3846 ;;		i1_I2C1_Transmit
  3847 ;; This function is called by:
  3848 ;;		_MPU6050_Read_MultiData
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           
  3853                           ;psect for function i1_I2C_Transmit
  3854  0524                     i1_I2C_Transmit:	
  3855                           
  3856                           ;incstack = 0
  3857                           ; Regs used in i1_I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3858                           ;i1I2C_Transmit@I2Cx stored from wreg
  3859  0524  0020               	movlb	0	; select bank0
  3860  0525  00A0               	movwf	i1I2C_Transmit@I2Cx
  3861                           
  3862                           ;PIC_I2C.c: 7: int8_t result = -1;
  3863  0526  01A1               	clrf	i1I2C_Transmit@result
  3864  0527  03A1               	decf	i1I2C_Transmit@result,f
  3865                           
  3866                           ;PIC_I2C.c: 9: switch(I2Cx)
  3867  0528  2D38               	goto	i1l1704
  3868  0529                     i1l1700:	
  3869                           ;PIC_I2C.c: 10: {
  3870                           ;PIC_I2C.c: 11: case I2C1_MODULE:
  3871                           
  3872                           
  3873                           ;PIC_I2C.c: 12: result = I2C1_Transmit(address,pData,size);
  3874  0529  0879               	movf	i1I2C_Transmit@pData,w
  3875  052A  00FB               	movwf	??i1_I2C_Transmit
  3876  052B  087B               	movf	??i1_I2C_Transmit,w
  3877  052C  00F0               	movwf	i1I2C1_Transmit@pData
  3878  052D  087A               	movf	i1I2C_Transmit@size,w
  3879  052E  00FC               	movwf	??i1_I2C_Transmit+1
  3880  052F  087C               	movf	??i1_I2C_Transmit+1,w
  3881  0530  00F1               	movwf	i1I2C1_Transmit@size
  3882  0531  0878               	movf	i1I2C_Transmit@address,w
  3883  0532  227A               	fcall	i1_I2C1_Transmit
  3884  0533  00FD               	movwf	??i1_I2C_Transmit+2
  3885  0534  087D               	movf	??i1_I2C_Transmit+2,w
  3886  0535  0020               	movlb	0	; select bank0
  3887  0536  00A1               	movwf	i1I2C_Transmit@result
  3888                           
  3889                           ;PIC_I2C.c: 14: }
  3890                           
  3891                           ;PIC_I2C.c: 13: break;
  3892  0537  2D3D               	goto	i1l1706
  3893  0538                     i1l1704:	
  3894  0538  0820               	movf	i1I2C_Transmit@I2Cx,w
  3895                           
  3896                           ; Switch size 1, requested type "space"
  3897                           ; Number of cases is 1, Range of values is 0 to 0
  3898                           ; switch strategies available:
  3899                           ; Name         Instructions Cycles
  3900                           ; simple_byte            4     3 (average)
  3901                           ; direct_byte            8     6 (fixed)
  3902                           ; jumptable            260     6 (fixed)
  3903                           ;	Chosen strategy is simple_byte
  3904  0539  3A00               	xorlw	0	; case 0
  3905  053A  1903               	skipnz
  3906  053B  2D29               	goto	i1l1700
  3907  053C  2D3D               	goto	i1l1706
  3908  053D                     i1l1706:	
  3909                           
  3910                           ;PIC_I2C.c: 15: return result;
  3911  053D  0821               	movf	i1I2C_Transmit@result,w
  3912  053E  0008               	return
  3913  053F                     __end_ofi1_I2C_Transmit:	
  3914                           
  3915                           	psect	text21
  3916  027A                     __ptext21:	
  3917 ;; *************** function i1_I2C1_Transmit *****************
  3918 ;; Defined at:
  3919 ;;		line 53 in file "PIC_I2C1.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  address         1    wreg     unsigned char 
  3922 ;;  pData           1    0[COMMON] PTR unsigned char 
  3923 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@senddata(2), 
  3924 ;;  size            1    1[COMMON] unsigned char 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  address         1    4[COMMON] unsigned char 
  3927 ;;  I2C1_Transmi    1    7[COMMON] char 
  3928 ;;  I2C1_Transmi    1    6[COMMON] unsigned char 
  3929 ;;  I2C1_Transmi    1    5[COMMON] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      char 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1
  3939 ;;      Params:         2       0       0
  3940 ;;      Locals:         4       0       0
  3941 ;;      Temps:          2       0       0
  3942 ;;      Totals:         8       0       0
  3943 ;;Total ram usage:        8 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		i1_I2C_Transmit
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function i1_I2C1_Transmit
  3954  027A                     i1_I2C1_Transmit:	
  3955                           
  3956                           ;incstack = 0
  3957                           ; Regs used in i1_I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  3958                           ;i1I2C1_Transmit@address stored from wreg
  3959  027A  00F4               	movwf	i1I2C1_Transmit@address
  3960                           
  3961                           ;PIC_I2C1.c: 55: int8_t result;
  3962                           ;PIC_I2C1.c: 57: switch(I2C1_Config.Mode)
  3963  027B  2AED               	goto	i1l1560
  3964  027C                     i1l1516:	
  3965                           ;PIC_I2C1.c: 60: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3966                           
  3967                           ;PIC_I2C1.c: 58: {
  3968                           ;PIC_I2C1.c: 59: case I2C_MODE_MASTER:
  3969                           
  3970  027C  3005               	movlw	5
  3971  027D  0024               	movlb	4	; select bank4
  3972  027E  0514               	andwf	20,w	;volatile
  3973  027F  00F2               	movwf	??i1_I2C1_Transmit
  3974  0280  0816               	movf	22,w	;volatile
  3975  0281  391F               	andlw	31
  3976  0282  0472               	iorwf	??i1_I2C1_Transmit,w
  3977  0283  1D03               	btfss	3,2
  3978  0284  2A7C               	goto	i1l1516
  3979                           
  3980                           ;PIC_I2C1.c: 61: SSPCON2bits.SEN = 1;
  3981  0285  1416               	bsf	22,0	;volatile
  3982  0286                     i1l1518:	
  3983                           ;PIC_I2C1.c: 63: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3984                           
  3985  0286  3005               	movlw	5
  3986  0287  0514               	andwf	20,w	;volatile
  3987  0288  00F2               	movwf	??i1_I2C1_Transmit
  3988  0289  0816               	movf	22,w	;volatile
  3989  028A  391F               	andlw	31
  3990  028B  0472               	iorwf	??i1_I2C1_Transmit,w
  3991  028C  1D03               	btfss	3,2
  3992  028D  2A86               	goto	i1l1518
  3993                           
  3994                           ;PIC_I2C1.c: 64: SSPBUF = address << 1;
  3995  028E  3574               	lslf	i1I2C1_Transmit@address,w
  3996  028F  0091               	movwf	17	;volatile
  3997  0290                     i1l244:	
  3998                           ;PIC_I2C1.c: 65: while(SSPSTATbits.R_nW);
  3999                           
  4000  0290  1914               	btfsc	20,2	;volatile
  4001  0291  2A90               	goto	i1l244
  4002                           
  4003                           ;PIC_I2C1.c: 67: result = SSPCON2bits.ACKSTAT;
  4004  0292  3000               	movlw	0
  4005  0293  1B16               	btfsc	22,6	;volatile
  4006  0294  3001               	movlw	1
  4007  0295  00F7               	movwf	i1I2C1_Transmit@result
  4008                           
  4009                           ;PIC_I2C1.c: 68: if (!result)
  4010  0296  0877               	movf	i1I2C1_Transmit@result,w
  4011  0297  1D03               	btfss	3,2
  4012  0298  2AC0               	goto	i1l1542
  4013                           
  4014                           ;PIC_I2C1.c: 69: {
  4015                           ;PIC_I2C1.c: 70: for(uint8_t i=0;i<size;i++)
  4016  0299  01F5               	clrf	i1I2C1_Transmit@i
  4017  029A  2A9F               	goto	i1l1540
  4018  029B                     i1l1538:	
  4019                           ;PIC_I2C1.c: 80: break;
  4020                           
  4021  029B  3001               	movlw	1
  4022  029C  00F2               	movwf	??i1_I2C1_Transmit
  4023  029D  0872               	movf	??i1_I2C1_Transmit,w
  4024  029E  07F5               	addwf	i1I2C1_Transmit@i,f
  4025  029F                     i1l1540:	
  4026  029F  0871               	movf	i1I2C1_Transmit@size,w
  4027  02A0  0275               	subwf	i1I2C1_Transmit@i,w
  4028  02A1  1803               	btfsc	3,0
  4029  02A2  2AC0               	goto	i1l1542
  4030  02A3                     i1l1528:	
  4031                           ;PIC_I2C1.c: 71: {
  4032                           ;PIC_I2C1.c: 72: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  4033                           
  4034  02A3  3005               	movlw	5
  4035  02A4  0514               	andwf	20,w	;volatile
  4036  02A5  00F2               	movwf	??i1_I2C1_Transmit
  4037  02A6  0816               	movf	22,w	;volatile
  4038  02A7  391F               	andlw	31
  4039  02A8  0472               	iorwf	??i1_I2C1_Transmit,w
  4040  02A9  1D03               	btfss	3,2
  4041  02AA  2AA3               	goto	i1l1528
  4042                           
  4043                           ;PIC_I2C1.c: 73: SSPBUF = *(pData+i);
  4044  02AB  0875               	movf	i1I2C1_Transmit@i,w
  4045  02AC  0770               	addwf	i1I2C1_Transmit@pData,w
  4046  02AD  00F2               	movwf	??i1_I2C1_Transmit
  4047  02AE  0872               	movf	??i1_I2C1_Transmit,w
  4048  02AF  0086               	movwf	6
  4049  02B0  0187               	clrf	7
  4050  02B1  0801               	movf	1,w
  4051  02B2  0091               	movwf	17	;volatile
  4052  02B3                     i1l253:	
  4053                           ;PIC_I2C1.c: 74: while(SSPSTATbits.R_nW);
  4054                           
  4055  02B3  1914               	btfsc	20,2	;volatile
  4056  02B4  2AB3               	goto	i1l253
  4057                           
  4058                           ;PIC_I2C1.c: 76: result = SSPCON2bits.ACKSTAT;
  4059  02B5  3000               	movlw	0
  4060  02B6  1B16               	btfsc	22,6	;volatile
  4061  02B7  3001               	movlw	1
  4062  02B8  00F7               	movwf	i1I2C1_Transmit@result
  4063                           
  4064                           ;PIC_I2C1.c: 77: if (result)
  4065  02B9  0877               	movf	i1I2C1_Transmit@result,w
  4066  02BA  1903               	btfsc	3,2
  4067  02BB  2A9B               	goto	i1l1538
  4068                           
  4069                           ;PIC_I2C1.c: 78: {
  4070                           ;PIC_I2C1.c: 79: result = 2;
  4071  02BC  3002               	movlw	2
  4072  02BD  00F2               	movwf	??i1_I2C1_Transmit
  4073  02BE  0872               	movf	??i1_I2C1_Transmit,w
  4074  02BF  00F7               	movwf	i1I2C1_Transmit@result
  4075  02C0                     i1l1542:	
  4076                           ;PIC_I2C1.c: 81: }
  4077                           ;PIC_I2C1.c: 82: }
  4078                           ;PIC_I2C1.c: 83: }
  4079                           ;PIC_I2C1.c: 85: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  4080                           
  4081  02C0  3005               	movlw	5
  4082  02C1  0514               	andwf	20,w	;volatile
  4083  02C2  00F2               	movwf	??i1_I2C1_Transmit
  4084  02C3  0816               	movf	22,w	;volatile
  4085  02C4  391F               	andlw	31
  4086  02C5  0472               	iorwf	??i1_I2C1_Transmit,w
  4087  02C6  1D03               	btfss	3,2
  4088  02C7  2AC0               	goto	i1l1542
  4089                           
  4090                           ;PIC_I2C1.c: 86: SSPCON2bits.PEN = 1;
  4091  02C8  1516               	bsf	22,2	;volatile
  4092                           
  4093                           ;PIC_I2C1.c: 87: break;
  4094  02C9  2AF6               	goto	i1l1562
  4095  02CA                     i1l262:	
  4096                           ;PIC_I2C1.c: 89: case I2C_MODE_SLAVE:
  4097                           
  4098                           
  4099                           ;PIC_I2C1.c: 90: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  4100  02CA  0024               	movlb	4	; select bank4
  4101  02CB  1D94               	btfss	20,3	;volatile
  4102  02CC  1E14               	btfss	20,4	;volatile
  4103  02CD  2AEB               	goto	i1l1556
  4104                           
  4105                           ;PIC_I2C1.c: 91: {
  4106                           ;PIC_I2C1.c: 92: for(uint8_t i = 0;i<size;i++)
  4107  02CE  01F6               	clrf	i1I2C1_Transmit@i_465
  4108  02CF                     i1l1552:	
  4109  02CF  0871               	movf	i1I2C1_Transmit@size,w
  4110  02D0  0276               	subwf	i1I2C1_Transmit@i_465,w
  4111  02D1  1803               	btfsc	3,0
  4112  02D2  2AE6               	goto	i1l1554
  4113                           
  4114                           ;PIC_I2C1.c: 93: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  4115  02D3  0876               	movf	i1I2C1_Transmit@i_465,w
  4116  02D4  0770               	addwf	i1I2C1_Transmit@pData,w
  4117  02D5  00F2               	movwf	??i1_I2C1_Transmit
  4118  02D6  0872               	movf	??i1_I2C1_Transmit,w
  4119  02D7  0086               	movwf	6
  4120  02D8  0187               	clrf	7
  4121  02D9  0801               	movf	1,w
  4122  02DA  00F3               	movwf	??i1_I2C1_Transmit+1
  4123  02DB  0876               	movf	i1I2C1_Transmit@i_465,w
  4124  02DC  3EA0               	addlw	(low (_I2C1_Config| 0))& (0+255)
  4125  02DD  0086               	movwf	6
  4126  02DE  0187               	clrf	7
  4127  02DF  0873               	movf	??i1_I2C1_Transmit+1,w
  4128  02E0  0081               	movwf	1
  4129  02E1  3001               	movlw	1
  4130  02E2  00F2               	movwf	??i1_I2C1_Transmit
  4131  02E3  0872               	movf	??i1_I2C1_Transmit,w
  4132  02E4  07F6               	addwf	i1I2C1_Transmit@i_465,f
  4133  02E5  2ACF               	goto	i1l1552
  4134  02E6                     i1l1554:	
  4135                           
  4136                           ;PIC_I2C1.c: 94: result = size;
  4137  02E6  0871               	movf	i1I2C1_Transmit@size,w
  4138  02E7  00F2               	movwf	??i1_I2C1_Transmit
  4139  02E8  0872               	movf	??i1_I2C1_Transmit,w
  4140  02E9  00F7               	movwf	i1I2C1_Transmit@result
  4141                           
  4142                           ;PIC_I2C1.c: 95: }
  4143  02EA  2AF6               	goto	i1l1562
  4144  02EB                     i1l1556:	
  4145                           
  4146                           ;PIC_I2C1.c: 96: else
  4147                           ;PIC_I2C1.c: 97: result = 0;
  4148  02EB  01F7               	clrf	i1I2C1_Transmit@result
  4149                           
  4150                           ;PIC_I2C1.c: 99: }
  4151                           
  4152                           ;PIC_I2C1.c: 98: break;
  4153  02EC  2AF6               	goto	i1l1562
  4154  02ED                     i1l1560:	
  4155  02ED  0021               	movlb	1	; select bank1
  4156  02EE  0832               	movf	(_I2C1_Config^(0+128)+18),w
  4157                           
  4158                           ; Switch size 1, requested type "space"
  4159                           ; Number of cases is 2, Range of values is 0 to 1
  4160                           ; switch strategies available:
  4161                           ; Name         Instructions Cycles
  4162                           ; simple_byte            7     4 (average)
  4163                           ; direct_byte           10     6 (fixed)
  4164                           ; jumptable            260     6 (fixed)
  4165                           ;	Chosen strategy is simple_byte
  4166  02EF  3A00               	xorlw	0	; case 0
  4167  02F0  1903               	skipnz
  4168  02F1  2A7C               	goto	i1l1516
  4169  02F2  3A01               	xorlw	1	; case 1
  4170  02F3  1903               	skipnz
  4171  02F4  2ACA               	goto	i1l262
  4172  02F5  2AF6               	goto	i1l1562
  4173  02F6                     i1l1562:	
  4174                           
  4175                           ;PIC_I2C1.c: 101: return result;
  4176  02F6  0877               	movf	i1I2C1_Transmit@result,w
  4177  02F7  0008               	return
  4178  02F8                     __end_ofi1_I2C1_Transmit:	
  4179                           
  4180                           	psect	text22
  4181  053F                     __ptext22:	
  4182 ;; *************** function i1_I2C_Receive *****************
  4183 ;; Defined at:
  4184 ;;		line 18 in file "PIC_I2C.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  I2Cx            1    wreg     enum E2432
  4187 ;;  address         1    8[COMMON] unsigned char 
  4188 ;;  pData           1    9[COMMON] PTR unsigned char 
  4189 ;;		 -> MPU6050_Init@addr(1), Handle@accel_t_gyro(14), 
  4190 ;;  size            1   10[COMMON] unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  I2Cx            1    0[BANK0 ] enum E2432
  4193 ;;  I2C_Receive     1    1[BANK0 ] char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      char 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1
  4203 ;;      Params:         3       0       0
  4204 ;;      Locals:         0       2       0
  4205 ;;      Temps:          3       0       0
  4206 ;;      Totals:         6       2       0
  4207 ;;Total ram usage:        8 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    1
  4210 ;; This function calls:
  4211 ;;		i1_I2C1_Receive
  4212 ;; This function is called by:
  4213 ;;		_MPU6050_Read_MultiData
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           
  4218                           ;psect for function i1_I2C_Receive
  4219  053F                     i1_I2C_Receive:	
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in i1_I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4223                           ;i1I2C_Receive@I2Cx stored from wreg
  4224  053F  0020               	movlb	0	; select bank0
  4225  0540  00A0               	movwf	i1I2C_Receive@I2Cx
  4226                           
  4227                           ;PIC_I2C.c: 20: int8_t result = -1;
  4228  0541  01A1               	clrf	i1I2C_Receive@result
  4229  0542  03A1               	decf	i1I2C_Receive@result,f
  4230                           
  4231                           ;PIC_I2C.c: 22: switch(I2Cx)
  4232  0543  2D53               	goto	i1l2164
  4233  0544                     i1l2160:	
  4234                           ;PIC_I2C.c: 23: {
  4235                           ;PIC_I2C.c: 24: case I2C1_MODULE:
  4236                           
  4237                           
  4238                           ;PIC_I2C.c: 25: result = I2C1_Receive(address,pData,size);
  4239  0544  0879               	movf	i1I2C_Receive@pData,w
  4240  0545  00FB               	movwf	??i1_I2C_Receive
  4241  0546  087B               	movf	??i1_I2C_Receive,w
  4242  0547  00F0               	movwf	i1I2C1_Receive@pData
  4243  0548  087A               	movf	i1I2C_Receive@size,w
  4244  0549  00FC               	movwf	??i1_I2C_Receive+1
  4245  054A  087C               	movf	??i1_I2C_Receive+1,w
  4246  054B  00F1               	movwf	i1I2C1_Receive@size
  4247  054C  0878               	movf	i1I2C_Receive@address,w
  4248  054D  21E9               	fcall	i1_I2C1_Receive
  4249  054E  00FD               	movwf	??i1_I2C_Receive+2
  4250  054F  087D               	movf	??i1_I2C_Receive+2,w
  4251  0550  0020               	movlb	0	; select bank0
  4252  0551  00A1               	movwf	i1I2C_Receive@result
  4253                           
  4254                           ;PIC_I2C.c: 27: }
  4255                           
  4256                           ;PIC_I2C.c: 26: break;
  4257  0552  2D58               	goto	i1l2166
  4258  0553                     i1l2164:	
  4259  0553  0820               	movf	i1I2C_Receive@I2Cx,w
  4260                           
  4261                           ; Switch size 1, requested type "space"
  4262                           ; Number of cases is 1, Range of values is 0 to 0
  4263                           ; switch strategies available:
  4264                           ; Name         Instructions Cycles
  4265                           ; simple_byte            4     3 (average)
  4266                           ; direct_byte            8     6 (fixed)
  4267                           ; jumptable            260     6 (fixed)
  4268                           ;	Chosen strategy is simple_byte
  4269  0554  3A00               	xorlw	0	; case 0
  4270  0555  1903               	skipnz
  4271  0556  2D44               	goto	i1l2160
  4272  0557  2D58               	goto	i1l2166
  4273  0558                     i1l2166:	
  4274                           
  4275                           ;PIC_I2C.c: 28: return result;
  4276  0558  0821               	movf	i1I2C_Receive@result,w
  4277  0559  0008               	return
  4278  055A                     __end_ofi1_I2C_Receive:	
  4279                           
  4280                           	psect	text23
  4281  01E9                     __ptext23:	
  4282 ;; *************** function i1_I2C1_Receive *****************
  4283 ;; Defined at:
  4284 ;;		line 104 in file "PIC_I2C1.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  address         1    wreg     unsigned char 
  4287 ;;  pData           1    0[COMMON] PTR unsigned char 
  4288 ;;		 -> MPU6050_Init@addr(1), Handle@accel_t_gyro(14), 
  4289 ;;  size            1    1[COMMON] unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  address         1    4[COMMON] unsigned char 
  4292 ;;  I2C1_Receive    1    7[COMMON] unsigned char 
  4293 ;;  I2C1_Receive    1    6[COMMON] unsigned char 
  4294 ;;  I2C1_Receive    1    5[COMMON] char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      char 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1
  4304 ;;      Params:         2       0       0
  4305 ;;      Locals:         4       0       0
  4306 ;;      Temps:          2       0       0
  4307 ;;      Totals:         8       0       0
  4308 ;;Total ram usage:        8 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		i1_I2C_Receive
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           
  4318                           ;psect for function i1_I2C1_Receive
  4319  01E9                     i1_I2C1_Receive:	
  4320                           
  4321                           ;incstack = 0
  4322                           ; Regs used in i1_I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  4323                           ;i1I2C1_Receive@address stored from wreg
  4324  01E9  00F4               	movwf	i1I2C1_Receive@address
  4325                           
  4326                           ;PIC_I2C1.c: 106: int8_t result;
  4327                           ;PIC_I2C1.c: 108: switch(I2C1_Config.Mode)
  4328  01EA  2A6F               	goto	i1l2130
  4329  01EB                     i1l2088:	
  4330                           ;PIC_I2C1.c: 111: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  4331                           
  4332                           ;PIC_I2C1.c: 109: {
  4333                           ;PIC_I2C1.c: 110: case I2C_MODE_MASTER:
  4334                           
  4335  01EB  3005               	movlw	5
  4336  01EC  0024               	movlb	4	; select bank4
  4337  01ED  0514               	andwf	20,w	;volatile
  4338  01EE  00F2               	movwf	??i1_I2C1_Receive
  4339  01EF  0816               	movf	22,w	;volatile
  4340  01F0  391F               	andlw	31
  4341  01F1  0472               	iorwf	??i1_I2C1_Receive,w
  4342  01F2  1D03               	btfss	3,2
  4343  01F3  29EB               	goto	i1l2088
  4344                           
  4345                           ;PIC_I2C1.c: 112: SSPCON2bits.SEN = 1;
  4346  01F4  1416               	bsf	22,0	;volatile
  4347  01F5                     i1l2090:	
  4348                           ;PIC_I2C1.c: 114: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  4349                           
  4350  01F5  3005               	movlw	5
  4351  01F6  0514               	andwf	20,w	;volatile
  4352  01F7  00F2               	movwf	??i1_I2C1_Receive
  4353  01F8  0816               	movf	22,w	;volatile
  4354  01F9  391F               	andlw	31
  4355  01FA  0472               	iorwf	??i1_I2C1_Receive,w
  4356  01FB  1D03               	btfss	3,2
  4357  01FC  29F5               	goto	i1l2090
  4358                           
  4359                           ;PIC_I2C1.c: 115: SSPBUF = ((address << 1)|0x01);
  4360  01FD  1403               	setc
  4361  01FE  0D74               	rlf	i1I2C1_Receive@address,w
  4362  01FF  0091               	movwf	17	;volatile
  4363  0200                     i1l279:	
  4364                           ;PIC_I2C1.c: 116: while(SSPSTATbits.R_nW);
  4365                           
  4366  0200  1914               	btfsc	20,2	;volatile
  4367  0201  2A00               	goto	i1l279
  4368                           
  4369                           ;PIC_I2C1.c: 118: result = SSPCON2bits.ACKSTAT;
  4370  0202  3000               	movlw	0
  4371  0203  1B16               	btfsc	22,6	;volatile
  4372  0204  3001               	movlw	1
  4373  0205  00F5               	movwf	i1I2C1_Receive@result
  4374                           
  4375                           ;PIC_I2C1.c: 119: if (!result)
  4376  0206  0875               	movf	i1I2C1_Receive@result,w
  4377  0207  1D03               	btfss	3,2
  4378  0208  2A40               	goto	i1l2114
  4379                           
  4380                           ;PIC_I2C1.c: 120: {
  4381                           ;PIC_I2C1.c: 121: for (uint8_t i=0;i<size;i++)
  4382  0209  01F6               	clrf	i1I2C1_Receive@i
  4383  020A                     i1l2112:	
  4384  020A  0871               	movf	i1I2C1_Receive@size,w
  4385  020B  0276               	subwf	i1I2C1_Receive@i,w
  4386  020C  1803               	btfsc	3,0
  4387  020D  2A40               	goto	i1l2114
  4388  020E                     i1l2100:	
  4389                           ;PIC_I2C1.c: 122: {
  4390                           ;PIC_I2C1.c: 123: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  4391                           
  4392  020E  3005               	movlw	5
  4393  020F  0514               	andwf	20,w	;volatile
  4394  0210  00F2               	movwf	??i1_I2C1_Receive
  4395  0211  0816               	movf	22,w	;volatile
  4396  0212  391F               	andlw	31
  4397  0213  0472               	iorwf	??i1_I2C1_Receive,w
  4398  0214  1D03               	btfss	3,2
  4399  0215  2A0E               	goto	i1l2100
  4400                           
  4401                           ;PIC_I2C1.c: 124: SSPCON2bits.RCEN = 1;
  4402  0216  1596               	bsf	22,3	;volatile
  4403  0217                     i1l288:	
  4404                           ;PIC_I2C1.c: 125: while(SSPCON2bits.RCEN);
  4405                           
  4406  0217  1996               	btfsc	22,3	;volatile
  4407  0218  2A17               	goto	i1l288
  4408                           
  4409                           ;PIC_I2C1.c: 126: *(pData+i) = SSPBUF;
  4410  0219  0811               	movf	17,w	;volatile
  4411  021A  00F2               	movwf	??i1_I2C1_Receive
  4412  021B  0876               	movf	i1I2C1_Receive@i,w
  4413  021C  0770               	addwf	i1I2C1_Receive@pData,w
  4414  021D  00F3               	movwf	??i1_I2C1_Receive+1
  4415  021E  0873               	movf	??i1_I2C1_Receive+1,w
  4416  021F  0086               	movwf	6
  4417  0220  0187               	clrf	7
  4418  0221  0872               	movf	??i1_I2C1_Receive,w
  4419  0222  0081               	movwf	1
  4420  0223                     i1l2104:	
  4421                           ;PIC_I2C1.c: 127: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  4422                           
  4423  0223  3005               	movlw	5
  4424  0224  0514               	andwf	20,w	;volatile
  4425  0225  00F2               	movwf	??i1_I2C1_Receive
  4426  0226  0816               	movf	22,w	;volatile
  4427  0227  391F               	andlw	31
  4428  0228  0472               	iorwf	??i1_I2C1_Receive,w
  4429  0229  1D03               	btfss	3,2
  4430  022A  2A23               	goto	i1l2104
  4431                           
  4432                           ;PIC_I2C1.c: 128: if (i == size-1)
  4433  022B  0871               	movf	i1I2C1_Receive@size,w
  4434  022C  3EFF               	addlw	255
  4435  022D  00F2               	movwf	??i1_I2C1_Receive
  4436  022E  30FF               	movlw	255
  4437  022F  1803               	skipnc
  4438  0230  3000               	movlw	0
  4439  0231  00F3               	movwf	??i1_I2C1_Receive+1
  4440  0232  0876               	movf	i1I2C1_Receive@i,w
  4441  0233  0672               	xorwf	??i1_I2C1_Receive,w
  4442  0234  0473               	iorwf	??i1_I2C1_Receive+1,w
  4443  0235  1D03               	skipz
  4444  0236  2A39               	goto	i1l294
  4445                           
  4446                           ;PIC_I2C1.c: 129: SSPCON2bits.ACKDT = 1;
  4447  0237  1696               	bsf	22,5	;volatile
  4448  0238  2A3A               	goto	i1l295
  4449  0239                     i1l294:	
  4450                           
  4451                           ;PIC_I2C1.c: 130: else
  4452                           ;PIC_I2C1.c: 131: SSPCON2bits.ACKDT = 0;
  4453  0239  1296               	bcf	22,5	;volatile
  4454  023A                     i1l295:	
  4455                           
  4456                           ;PIC_I2C1.c: 132: SSPCON2bits.ACKEN = 1;
  4457  023A  1616               	bsf	22,4	;volatile
  4458  023B  3001               	movlw	1
  4459  023C  00F2               	movwf	??i1_I2C1_Receive
  4460  023D  0872               	movf	??i1_I2C1_Receive,w
  4461  023E  07F6               	addwf	i1I2C1_Receive@i,f
  4462  023F  2A0A               	goto	i1l2112
  4463  0240                     i1l2114:	
  4464                           ;PIC_I2C1.c: 133: }
  4465                           ;PIC_I2C1.c: 134: }
  4466                           ;PIC_I2C1.c: 136: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  4467                           
  4468  0240  3005               	movlw	5
  4469  0241  0514               	andwf	20,w	;volatile
  4470  0242  00F2               	movwf	??i1_I2C1_Receive
  4471  0243  0816               	movf	22,w	;volatile
  4472  0244  391F               	andlw	31
  4473  0245  0472               	iorwf	??i1_I2C1_Receive,w
  4474  0246  1D03               	btfss	3,2
  4475  0247  2A40               	goto	i1l2114
  4476                           
  4477                           ;PIC_I2C1.c: 137: SSPCON2bits.PEN = 1;
  4478  0248  1516               	bsf	22,2	;volatile
  4479                           
  4480                           ;PIC_I2C1.c: 138: break;
  4481  0249  2A78               	goto	i1l2132
  4482  024A                     i1l301:	
  4483                           ;PIC_I2C1.c: 140: case I2C_MODE_SLAVE:
  4484                           
  4485                           
  4486                           ;PIC_I2C1.c: 141: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  4487  024A  0024               	movlb	4	; select bank4
  4488  024B  1D94               	btfss	20,3	;volatile
  4489  024C  1E14               	btfss	20,4	;volatile
  4490  024D  2A78               	goto	i1l2132
  4491                           
  4492                           ;PIC_I2C1.c: 142: {
  4493                           ;PIC_I2C1.c: 143: for(uint8_t i = 0;i<size;i++)
  4494  024E  01F7               	clrf	i1I2C1_Receive@i_472
  4495  024F                     i1l2124:	
  4496  024F  0871               	movf	i1I2C1_Receive@size,w
  4497  0250  0277               	subwf	i1I2C1_Receive@i_472,w
  4498  0251  1803               	btfsc	3,0
  4499  0252  2A66               	goto	i1l2126
  4500                           
  4501                           ;PIC_I2C1.c: 144: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  4502  0253  0877               	movf	i1I2C1_Receive@i_472,w
  4503  0254  3EA8               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  4504  0255  0086               	movwf	6
  4505  0256  0187               	clrf	7
  4506  0257  0801               	movf	1,w
  4507  0258  00F2               	movwf	??i1_I2C1_Receive
  4508  0259  0877               	movf	i1I2C1_Receive@i_472,w
  4509  025A  0770               	addwf	i1I2C1_Receive@pData,w
  4510  025B  00F3               	movwf	??i1_I2C1_Receive+1
  4511  025C  0873               	movf	??i1_I2C1_Receive+1,w
  4512  025D  0086               	movwf	6
  4513  025E  0187               	clrf	7
  4514  025F  0872               	movf	??i1_I2C1_Receive,w
  4515  0260  0081               	movwf	1
  4516  0261  3001               	movlw	1
  4517  0262  00F2               	movwf	??i1_I2C1_Receive
  4518  0263  0872               	movf	??i1_I2C1_Receive,w
  4519  0264  07F7               	addwf	i1I2C1_Receive@i_472,f
  4520  0265  2A4F               	goto	i1l2124
  4521  0266                     i1l2126:	
  4522                           
  4523                           ;PIC_I2C1.c: 145: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  4524  0266  30A8               	movlw	(low (_I2C1_Config+8))& (0+255)
  4525  0267  3AFF               	xorlw	255
  4526  0268  3E01               	addlw	1
  4527  0269  0021               	movlb	1	; select bank1
  4528  026A  0731               	addwf	(_I2C1_Config^(0+128)+17),w
  4529  026B  00F2               	movwf	??i1_I2C1_Receive
  4530  026C  0872               	movf	??i1_I2C1_Receive,w
  4531  026D  00F5               	movwf	i1I2C1_Receive@result
  4532                           
  4533                           ;PIC_I2C1.c: 148: }
  4534                           
  4535                           ;PIC_I2C1.c: 146: }
  4536                           ;PIC_I2C1.c: 147: break;
  4537  026E  2A78               	goto	i1l2132
  4538  026F                     i1l2130:	
  4539  026F  0021               	movlb	1	; select bank1
  4540  0270  0832               	movf	(_I2C1_Config^(0+128)+18),w
  4541                           
  4542                           ; Switch size 1, requested type "space"
  4543                           ; Number of cases is 2, Range of values is 0 to 1
  4544                           ; switch strategies available:
  4545                           ; Name         Instructions Cycles
  4546                           ; simple_byte            7     4 (average)
  4547                           ; direct_byte           10     6 (fixed)
  4548                           ; jumptable            260     6 (fixed)
  4549                           ;	Chosen strategy is simple_byte
  4550  0271  3A00               	xorlw	0	; case 0
  4551  0272  1903               	skipnz
  4552  0273  29EB               	goto	i1l2088
  4553  0274  3A01               	xorlw	1	; case 1
  4554  0275  1903               	skipnz
  4555  0276  2A4A               	goto	i1l301
  4556  0277  2A78               	goto	i1l2132
  4557  0278                     i1l2132:	
  4558                           
  4559                           ;PIC_I2C1.c: 150: return result;
  4560  0278  0875               	movf	i1I2C1_Receive@result,w
  4561  0279  0008               	return
  4562  027A                     __end_ofi1_I2C1_Receive:	
  4563                           
  4564                           	psect	text24
  4565  05CA                     __ptext24:	
  4566 ;; *************** function _I2C_Interrupt *****************
  4567 ;; Defined at:
  4568 ;;		line 31 in file "PIC_I2C.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMMON   BANK0   BANK1
  4582 ;;      Params:         0       0       0
  4583 ;;      Locals:         0       0       0
  4584 ;;      Temps:          0       0       0
  4585 ;;      Totals:         0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    1
  4589 ;; This function calls:
  4590 ;;		_I2C1_Interrupt
  4591 ;; This function is called by:
  4592 ;;		_Handle
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           
  4597                           ;psect for function _I2C_Interrupt
  4598  05CA                     _I2C_Interrupt:	
  4599                           
  4600                           ;PIC_I2C.c: 33: I2C1_Interrupt();
  4601                           
  4602                           ;incstack = 0
  4603                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4604  05CA  234F               	fcall	_I2C1_Interrupt
  4605  05CB  0008               	return
  4606  05CC                     __end_of_I2C_Interrupt:	
  4607                           
  4608                           	psect	text25
  4609  034F                     __ptext25:	
  4610 ;; *************** function _I2C1_Interrupt *****************
  4611 ;; Defined at:
  4612 ;;		line 153 in file "PIC_I2C1.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1
  4626 ;;      Params:         0       0       0
  4627 ;;      Locals:         0       0       0
  4628 ;;      Temps:          1       0       0
  4629 ;;      Totals:         1       0       0
  4630 ;;Total ram usage:        1 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_I2C_Interrupt
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function _I2C1_Interrupt
  4641  034F                     _I2C1_Interrupt:	
  4642                           
  4643                           ;PIC_I2C1.c: 155: if(SSP1IF&&SSP1IE)
  4644                           
  4645                           ;incstack = 0
  4646                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  4647  034F  0020               	movlb	0	; select bank0
  4648  0350  1D91               	btfss	17,3	;volatile
  4649  0351  2B9B               	goto	i1l1692
  4650  0352  0021               	movlb	1	; select bank1
  4651  0353  1D91               	btfss	17,3	;volatile
  4652  0354  2B9B               	goto	i1l1692
  4653                           
  4654                           ;PIC_I2C1.c: 156: {
  4655                           ;PIC_I2C1.c: 157: if(SSPSTATbits.D_nA)
  4656  0355  0024               	movlb	4	; select bank4
  4657  0356  1E94               	btfss	20,5	;volatile
  4658  0357  2B72               	goto	i1l310
  4659                           
  4660                           ;PIC_I2C1.c: 158: {
  4661                           ;PIC_I2C1.c: 159: if(SSPSTATbits.R_nW)
  4662  0358  1D14               	btfss	20,2	;volatile
  4663  0359  2B65               	goto	i1l1668
  4664                           
  4665                           ;PIC_I2C1.c: 160: {
  4666                           ;PIC_I2C1.c: 161: if(!SSPCON2bits.ACKSTAT)
  4667  035A  1B16               	btfsc	22,6	;volatile
  4668  035B  2B99               	goto	i1l1690
  4669  035C                     i1l1660:	
  4670                           ;PIC_I2C1.c: 162: {
  4671                           ;PIC_I2C1.c: 163: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  4672                           
  4673  035C  0814               	movf	20,w	;volatile
  4674  035D  3901               	andlw	1
  4675  035E  00F0               	movwf	??_I2C1_Interrupt
  4676  035F  0E15               	swapf	21,w	;volatile
  4677  0360  3901               	andlw	1
  4678  0361  0470               	iorwf	??_I2C1_Interrupt,w
  4679  0362  1D03               	btfss	3,2
  4680  0363  2B5C               	goto	i1l1660
  4681  0364  2B85               	goto	L2
  4682  0365                     i1l1668:	
  4683                           ;PIC_I2C1.c: 167: }
  4684                           ;PIC_I2C1.c: 168: }
  4685                           
  4686                           ;PIC_I2C1.c: 166: SSPCON1bits.CKP = 1;
  4687                           
  4688                           ;PIC_I2C1.c: 165: I2C1_Config.TransmitPoint++;
  4689                           
  4690                           ;PIC_I2C1.c: 164: SSPBUF = *I2C1_Config.TransmitPoint;
  4691                           
  4692                           
  4693                           ;PIC_I2C1.c: 169: else
  4694                           ;PIC_I2C1.c: 170: {
  4695                           ;PIC_I2C1.c: 171: *I2C1_Config.ReceivePoint = SSPBUF;
  4696  0365  0811               	movf	17,w	;volatile
  4697  0366  00F0               	movwf	??_I2C1_Interrupt
  4698  0367  0021               	movlb	1	; select bank1
  4699  0368  0831               	movf	(low ((_I2C1_Config| 0+17)))^(0+128),w
  4700  0369  0086               	movwf	6
  4701  036A  0187               	clrf	7
  4702  036B  0870               	movf	??_I2C1_Interrupt,w
  4703  036C  0081               	movwf	1
  4704                           
  4705                           ;PIC_I2C1.c: 172: I2C1_Config.ReceivePoint++;
  4706  036D  3001               	movlw	1
  4707  036E  00F0               	movwf	??_I2C1_Interrupt
  4708  036F  0870               	movf	??_I2C1_Interrupt,w
  4709  0370  07B1               	addwf	(low ((_I2C1_Config| 0+17)))^(0+128),f
  4710  0371  2B97               	goto	i1l1688
  4711  0372                     i1l310:	
  4712                           ;PIC_I2C1.c: 174: }
  4713                           ;PIC_I2C1.c: 175: }
  4714                           
  4715                           ;PIC_I2C1.c: 173: SSPCON1bits.CKP = 1;
  4716                           
  4717                           
  4718                           ;PIC_I2C1.c: 176: else if(!SSPSTATbits.D_nA)
  4719  0372  1A94               	btfsc	20,5	;volatile
  4720  0373  2B99               	goto	i1l1690
  4721                           
  4722                           ;PIC_I2C1.c: 177: {
  4723                           ;PIC_I2C1.c: 178: SSPBUF;
  4724  0374  0811               	movf	17,w	;volatile
  4725                           
  4726                           ;PIC_I2C1.c: 180: if(SSPSTATbits.R_nW)
  4727  0375  1D14               	btfss	20,2	;volatile
  4728  0376  2B92               	goto	i1l1686
  4729                           
  4730                           ;PIC_I2C1.c: 181: {
  4731                           ;PIC_I2C1.c: 182: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  4732  0377  30A0               	movlw	(low (_I2C1_Config| 0))& (0+255)
  4733  0378  00F0               	movwf	??_I2C1_Interrupt
  4734  0379  0870               	movf	??_I2C1_Interrupt,w
  4735  037A  0021               	movlb	1	; select bank1
  4736  037B  00B0               	movwf	(low ((_I2C1_Config| 0+16)))^(0+128)
  4737  037C                     i1l1680:	
  4738                           ;PIC_I2C1.c: 184: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  4739                           
  4740  037C  0024               	movlb	4	; select bank4
  4741  037D  0814               	movf	20,w	;volatile
  4742  037E  3901               	andlw	1
  4743  037F  00F0               	movwf	??_I2C1_Interrupt
  4744  0380  0E15               	swapf	21,w	;volatile
  4745  0381  3901               	andlw	1
  4746  0382  0470               	iorwf	??_I2C1_Interrupt,w
  4747  0383  1D03               	btfss	3,2
  4748  0384  2B7C               	goto	i1l1680
  4749  0385                     L2:	
  4750                           
  4751                           ;PIC_I2C1.c: 185: SSPBUF = *I2C1_Config.TransmitPoint;
  4752  0385  0021               	movlb	1	; select bank1
  4753  0386  0830               	movf	(low ((_I2C1_Config| 0+16)))^(0+128),w
  4754  0387  0086               	movwf	6
  4755  0388  0187               	clrf	7
  4756  0389  0801               	movf	1,w
  4757  038A  0024               	movlb	4	; select bank4
  4758  038B  0091               	movwf	17	;volatile
  4759                           
  4760                           ;PIC_I2C1.c: 186: I2C1_Config.TransmitPoint++;
  4761  038C  3001               	movlw	1
  4762  038D  00F0               	movwf	??_I2C1_Interrupt
  4763  038E  0870               	movf	??_I2C1_Interrupt,w
  4764  038F  0021               	movlb	1	; select bank1
  4765  0390  07B0               	addwf	(low ((_I2C1_Config| 0+16)))^(0+128),f
  4766                           
  4767                           ;PIC_I2C1.c: 187: }
  4768  0391  2B97               	goto	i1l1688
  4769  0392                     i1l1686:	
  4770                           
  4771                           ;PIC_I2C1.c: 188: else
  4772                           ;PIC_I2C1.c: 189: {
  4773                           ;PIC_I2C1.c: 190: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  4774  0392  30A8               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  4775  0393  00F0               	movwf	??_I2C1_Interrupt
  4776  0394  0870               	movf	??_I2C1_Interrupt,w
  4777  0395  0021               	movlb	1	; select bank1
  4778  0396  00B1               	movwf	(low ((_I2C1_Config| 0+17)))^(0+128)
  4779  0397                     i1l1688:	
  4780                           
  4781                           ;PIC_I2C1.c: 191: }
  4782                           ;PIC_I2C1.c: 192: SSPCON1bits.CKP = 1;
  4783  0397  0024               	movlb	4	; select bank4
  4784  0398  1615               	bsf	21,4	;volatile
  4785  0399                     i1l1690:	
  4786                           
  4787                           ;PIC_I2C1.c: 193: }
  4788                           ;PIC_I2C1.c: 194: SSP1IF = 0;
  4789  0399  0020               	movlb	0	; select bank0
  4790  039A  1191               	bcf	17,3	;volatile
  4791  039B                     i1l1692:	
  4792                           
  4793                           ;PIC_I2C1.c: 195: }
  4794                           ;PIC_I2C1.c: 197: if(BCL1IE&&BCL1IF)
  4795  039B  0021               	movlb	1	; select bank1
  4796  039C  1D92               	btfss	18,3	;volatile
  4797  039D  0008               	return
  4798  039E  0020               	movlb	0	; select bank0
  4799  039F  1D92               	btfss	18,3	;volatile
  4800  03A0  0008               	return
  4801                           
  4802                           ;PIC_I2C1.c: 198: BCL1IF = 0;
  4803  03A1  1192               	bcf	18,3	;volatile
  4804  03A2  0008               	return
  4805  03A3                     __end_of_I2C1_Interrupt:	
  4806  007E                     btemp	set	126	;btemp
  4807  007E                     int$flags	set	126
  4808  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      67
    BANK1            32      5      24

Pointer List with Targets:

    I2C1_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK1[1]), Handle@accel_t_gyro(BANK0[14]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@senddata(BANK0[2]), 

    I2C1_Init@I2C1_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_InitPort(), 

    I2C_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK1[1]), Handle@accel_t_gyro(BANK0[14]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 2
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@senddata(BANK0[2]), 

    S289$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    S289$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK1[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK1[8]), I2C1_Config(BANK1[19]), 

    MPU6050_Read_MultiData@pData	PTR unsigned char  size(1) Largest target is 14
		 -> Handle@accel_t_gyro(BANK0[14]), 

    MPU6050_Read_Data@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Init@addr(BANK1[1]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 

    SWAP@y	PTR unsigned char  size(1) Largest target is 14
		 -> Handle@accel_t_gyro(BANK0[14]), 

    SWAP@x	PTR unsigned char  size(1) Largest target is 14
		 -> Handle@accel_t_gyro(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handle in COMMON

    _MPU6050_Read_MultiData->i1_I2C_Receive
    _MPU6050_Read_MultiData->i1_I2C_Transmit
    i1_I2C_Transmit->i1_I2C1_Transmit
    i1_I2C_Receive->i1_I2C1_Receive
    _I2C_Interrupt->_I2C1_Interrupt

Critical Paths under _main in BANK0

    _main->_MPU6050_Init
    _UART_Init->_UART_InitPort
    _MPU6050_Init->_MPU6050_Write_Data
    _MPU6050_Write_Data->_I2C_Transmit
    _MPU6050_Read_Data->_I2C_Receive
    _MPU6050_Read_Data->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive
    _I2C1_Init->_I2C_InitPort

Critical Paths under _Handle in BANK0

    _Handle->_MPU6050_Read_MultiData
    _MPU6050_Read_MultiData->i1_I2C_Receive
    _MPU6050_Read_MultiData->i1_I2C_Transmit

Critical Paths under _main in BANK1

    _main->_MPU6050_Init

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4708
                                              3 BANK1      2     2      0
                         _Basic_Init
                          _I2C1_Init
                       _MPU6050_Init
                        _Timer0_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     172
                                             14 BANK0      7     4      3
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          3     2      1      97
                                             13 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         5     5      0    4051
                                             38 BANK0      2     2      0
                                              0 BANK1      3     3      0
                  _MPU6050_Read_Data
                 _MPU6050_Write_Data
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write_Data                                   9     8      1    1479
                                             29 BANK0      9     8      1
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read_Data                                    6     5      1    2439
                                             29 BANK0      6     5      1
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C_Transmit                                         8     5      3    1232
                                             21 BANK0      8     5      3
                      _I2C1_Transmit
 ---------------------------------------------------------------------------------
 (4) _I2C1_Transmit                                        8     6      2     591
                                             13 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (3) _I2C_Receive                                          8     5      3    1028
                                             21 BANK0      8     5      3
                       _I2C1_Receive
 ---------------------------------------------------------------------------------
 (4) _I2C1_Receive                                         8     6      2     582
                                             13 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _I2C1_Init                                            6     1      5     388
                                             14 BANK0      6     1      5
                       _I2C_InitPort *
 ---------------------------------------------------------------------------------
 (2) _I2C_InitPort                                         1     1      0       0
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handle                                               3     3      0    2359
                                             10 BANK0      3     3      0
                      _I2C_Interrupt
             _MPU6050_Read_MultiData
                               _SWAP
                   _Timer0_CheckFlag
                     _UART_Interrupt
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (6) _UART_Transmit                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _UART_Interrupt                                       3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _Timer0_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SWAP                                                 4     3      1     671
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _MPU6050_Read_MultiData                               8     6      2    1598
                                              2 BANK0      8     6      2
                      i1_I2C_Receive
                     i1_I2C_Transmit
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Transmit                                       8     5      3     559
                                              8 COMMON     6     3      3
                                              0 BANK0      2     2      0
                    i1_I2C1_Transmit
 ---------------------------------------------------------------------------------
 (8) i1_I2C1_Transmit                                      8     6      2     369
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Receive                                        8     5      3     788
                                              8 COMMON     6     3      3
                                              0 BANK0      2     2      0
                     i1_I2C1_Receive
 ---------------------------------------------------------------------------------
 (8) i1_I2C1_Receive                                       8     6      2     522
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _I2C_Interrupt                                        0     0      0       0
                     _I2C1_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C1_Init
     _I2C_InitPort *
   _MPU6050_Init
     _MPU6050_Read_Data
       _I2C_Receive
         _I2C1_Receive
       _I2C_Transmit
         _I2C1_Transmit
     _MPU6050_Write_Data
       _I2C_Transmit
         _I2C1_Transmit
   _Timer0_Init
   _UART_Init
     _UART_InitPort *

 _Handle (ROOT)
   _I2C_Interrupt
     _I2C1_Interrupt
   _MPU6050_Read_MultiData
     i1_I2C_Receive
       i1_I2C1_Receive
     i1_I2C_Transmit
       i1_I2C1_Transmit
   _SWAP
   _Timer0_CheckFlag
   _UART_Interrupt
   _UART_Transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      69       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      43       6       83.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      5      18       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      69       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Jan 14 14:17:55 2018

        __size_ofi1_I2C_Transmit 001B                  i1_I2C1_Transmit 027A                      __CFG_CP$OFF 0000  
                    _SSPSTATbits 0214                               l43 0415             i1I2C_Receive@address 0078  
                            l301 011F                              l231 032E                              l224 0305  
                            l228 0346                              l244 0172                              l253 019B  
                            l262 01B8                              l294 0107                              l295 0109  
                            l279 00C2                              l288 00DF                              _GIE 005F  
                   __CFG_CPD$OFF 0000             __size_of_I2C_Receive 001B                     __CFG_BORV$LO 0000  
                            wreg 0009                       _Basic_Init 05A4               MPU6050_Init@result 00B3  
                   __CFG_LVP$OFF 0000                             l2000 01D5                             l2002 01DA  
                           l2030 00EC                             l2014 00A4                             l2006 01DD  
                           l2040 0110                             l2016 00B2                             l2008 01E6  
                           l2050 0125                             l2026 00D1                             l2052 013C  
                           l2038 00CD                             l2070 0507                             l2056 0146  
                           l2080 051D                             l2064 04F3                             l2058 014F  
                           l2082 0522                             l2076 050E                             l2068 0502  
                           l1750 031A                             l1752 031C                             l1744 030F  
                           l1770 033D                             l1766 033B                             l1758 0325  
                           l1962 0155                             l1964 0163                             l1974 0186  
                           l1984 017E                             l1986 0182                             l1988 01A9  
                           l1998 01BE                             _CREN 0CEC                             _PEIE 005E  
                           u1967 03FA                             u1977 0407                             _RCIE 048D  
                           _RCIF 008D                             _OERR 0CE9                             _TMR0 0015  
                           _SPEN 0CEF                             _SWAP 055A                             _TXIF 008C  
                           _WPUA 020C                  ??_I2C1_Transmit 002F                     __CFG_WRT$OFF 0000  
         __end_ofi1_I2C1_Receive 027A            __size_of_I2C_InitPort 0010                             _main 03DD  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                 ??_I2C1_Interrupt 0070                             start 0091  
           i1I2C1_Receive@result 0075                    __CFG_IESO$OFF 0000            __size_of_I2C_Transmit 001B  
                  __CFG_PLLEN$ON 0000                            ?_SWAP 0070                __end_of_I2C1_Init 034F  
                          ?_main 0070                            SWAP@x 0073                            SWAP@y 0070  
                          _BRG16 0CFB                    __CFG_WDTE$OFF 0000                            i1l123 05BD  
                          i1l301 024A                            i1l310 0372                            i1l144 043C  
                          i1l145 0439                            i1l244 0290                            i1l253 02B3  
                          i1l262 02CA                            i1l294 0239                            i1l295 023A  
                          i1l279 0200                            i1l288 0217                    i1_I2C_Receive 053F  
                          _RCREG 0199                            _RCSTA 019D                            _PORTA 000C  
                          _TRISA 008C                            _TXREG 019A                            _TXSTA 019E  
                i1I2C1_Receive@i 0076            i1I2C1_Receive@address 0074                   __CFG_FCMEN$OFF 0000  
             __size_of_UART_Init 003A                     _I2C_InitPort 0594                _UART_Buffer_inptr 0054  
                  ?_MPU6050_Init 0070                   __CFG_BOREN$OFF 0000                            pclath 000A  
       ??_MPU6050_Read_MultiData 0024           __size_of_I2C_Interrupt 0002                            status 0003  
                ?i1_I2C1_Receive 0070                            wtemp0 007E          __end_ofi1_I2C1_Transmit 02F8  
                   _I2C_Transmit 04EE                     __end_of_SWAP 0574                   __CFG_MCLRE$OFF 0000  
                __initialization 0092                     __end_of_main 0416                           ??_SWAP 0071  
                         ??_main 00B6                ?_Timer0_CheckFlag 0070                I2C_Receive@result 003C  
              I2C1_Receive@i_472 0034                   ?i1_I2C_Receive 0078                I2C1_Receive@pData 002D  
             ??_Timer0_CheckFlag 0070                      ?_Basic_Init 0070                   ??_MPU6050_Init 0046  
                         _BCL1IE 0493                           _BCL1IF 0093                           _APFCON 011D  
                         _ANSELA 018C                           i1l2100 020E                           i1l2104 0223  
                         i1l2112 020A                           i1l2114 0240                           i1l2130 026F  
                         i1l2124 024F                           i1l2132 0278                           i1l2126 0266  
                         i1l2160 0544                           i1l2090 01F5                           i1l2164 0553  
                         i1l1540 029F                           i1l1516 027C                           i1l1700 0529  
                         i1l2166 0558                           i1l1542 02C0                           i1l1518 0286  
                         i1l2088 01EB                           i1l1552 02CF                           i1l1528 02A3  
                         i1l1560 02ED                           i1l1704 0538                           i1l2264 008A  
                         i1l1554 02E6                           i1l1562 02F6                           i1l1538 029B  
                         i1l1706 053D                           i1l1660 035C                           i1l1556 02EB  
                         i1l1680 037C                           i1l1690 0399                           i1l1834 05BA  
                         i1l1668 0365                           i1l1692 039B                           i1l1686 0392  
                         i1l1862 0435                           i1l1688 0397                           _OSCCON 0099  
                         _TMR0IE 005D                           _TMR0IF 005A                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IE 048B                           _SSP1IF 008B  
                         _SSPADD 0212                           _SSPBUF 0211                           _SSPMSK 0213  
            i1I2C1_Transmit@size 0071                           _Handle 0004                    ??_Timer0_Init 002E  
                 __CFG_PWRTE$OFF 0000             MPU6050_Read_Data@reg 0042                   i1_I2C_Transmit 0524  
              __end_of_UART_Init 03DD               Timer0_Init@pre_val 002F               _UART_Buffer_outptr 0053  
                  _I2C_Interrupt 05CA      __size_of_MPU6050_Write_Data 001F          __size_of_UART_Interrupt 0029  
               I2C_Transmit@I2Cx 003B            __end_of_UART_InitPort 0594                 I2C_Transmit@size 0037  
        UART_Init@UART_Init_PORT 002E          __end_of__initialization 009E  __size_of_MPU6050_Read_MultiData 0026  
          __end_of_UART_Transmit 05C4                 ?i1_I2C1_Transmit 0070           __end_ofi1_I2C_Transmit 053F  
                 __pcstackCOMMON 0070              __size_of_Basic_Init 000D                 i1I2C1_Transmit@i 0075  
            __end_of_Timer0_Init 0466                  ??i1_I2C_Receive 007B                   ?_I2C_Interrupt 0070  
             I2C_Receive@address 0035              I2C1_Transmit@result 0034                       __pbssBANK0 0048  
                     __pbssBANK1 00A0       MPU6050_Write_Data@senddata 0044                          ?_Handle 0070  
                ?i1_I2C_Transmit 0078               I2C1_Receive@result 0032                       __pmaintext 03DD  
           __end_of_MPU6050_Init 04EE            i1I2C_Transmit@address 0078                       __pintentry 0004  
         _MPU6050_Read_MultiData 0466                    ??_I2C_Receive 0038                _MPU6050_Read_Data 048C  
             ?_MPU6050_Read_Data 003D                        _I2C1_Init 02F8                i1I2C_Receive@I2Cx 0020  
           i1I2C1_Transmit@i_465 0076                 ??i1_I2C1_Receive 0072                          _SSPCON1 0215  
                        _SSPCON2 0216             i1I2C1_Transmit@pData 0070                          _SSPSTAT 0214  
            ??_MPU6050_Read_Data 003E                __end_of_baudtable 0584                i1I2C_Receive@size 007A  
        MPU6050_Write_Data@pData 003D            __end_of_I2C1_Transmit 01E9                  __size_of_Handle 008D  
                    _Timer0_Init 043F                  ??_I2C_Interrupt 0071               i1I2C_Transmit@I2Cx 0020  
      __end_of_MPU6050_Read_Data 04B1        MPU6050_Read_MultiData@reg 0029                  __CFG_STVREN$OFF 0000  
                        __ptext1 03A3                          __ptext2 0584                          __ptext3 043F  
                        __ptext4 04D0                          __ptext5 04B1                          __ptext6 048C  
                        __ptext7 04EE                          __ptext8 0152                          __ptext9 0509  
             i1I2C_Transmit@size 007A                   _UART_Interrupt 0416                       ?_I2C1_Init 002E  
                   ??_Basic_Init 002D              __end_of_I2C_Receive 0524                          clrloop0 05C5  
           end_of_initialization 009E                 I2C1_Init@address 0030        __size_of_Timer0_CheckFlag 000B  
                  ?_I2C1_Receive 002D               Handle@accel_t_gyro 0055                      _I2C1_Config 00A0  
              I2C_Transmit@pData 0036               __end_of_Basic_Init 05B1           __end_of_UART_Interrupt 043F  
                      _UART_Init 03A3          __size_of_I2C1_Interrupt 0054                 __CFG_FOSC$INTOSC 0000  
         i1I2C1_Transmit@address 0074                 MPU6050_Init@addr 00B5                 MPU6050_Init@data 00B4  
                 ??_I2C1_Receive 002F              i1I2C_Receive@result 0021              i1I2C1_Receive@i_472 0077  
            i1I2C1_Receive@pData 0070            __size_of_MPU6050_Init 001E                   __end_of_Handle 0091  
               UART_Interrupt@dt 0071       __size_of_MPU6050_Read_Data 0025                  ?_UART_Interrupt 0070  
                     ?_UART_Init 002E       __end_of_MPU6050_Write_Data 04D0                      _I2C_Receive 0509  
            start_initialization 0092                      ??_I2C1_Init 0033                 I2C_Receive@pData 0036  
           I2C1_Transmit@address 0031                     _MPU6050_Init 04D0                 ??i1_I2C_Transmit 007B  
               I2C1_Receive@size 002E                         ??_Handle 002A            MPU6050_Write_Data@reg 0042  
        ?_MPU6050_Read_MultiData 0022           __size_of_UART_InitPort 0010            Timer0_Init@reload_val 002D  
        MPU6050_Read_Data@result 0041         __size_ofi1_I2C1_Transmit 007E            __end_ofi1_I2C_Receive 055A  
                      ___latbits 0000           __size_of_UART_Transmit 0008                    __pcstackBANK0 0020  
                  __pcstackBANK1 00B3              I2C1_Receive@address 0031                    ?_I2C_InitPort 0070  
             I2C1_Transmit@i_465 0033      MPU6050_Read_MultiData@pData 0022               I2C1_Transmit@pData 002D  
               _Timer0_CheckFlag 05B1                        _baudtable 0574                    ?_I2C_Transmit 0035  
                   ?_Timer0_Init 002D   __end_of_MPU6050_Read_MultiData 048C                      ??_UART_Init 0031  
                 _I2C1_Interrupt 034F             i1I2C_Transmit@result 0021             __end_of_I2C1_Receive 0152  
                       SWAP@swap 0072                   ??_I2C_InitPort 002D                    _UART_InitPort 0584  
        I2C1_Init@I2C1_Init_PORT 002E                   ??_I2C_Transmit 0038                        clear_ram0 05C4  
                  _UART_Transmit 05BC           __end_of_I2C1_Interrupt 03A3            __end_of_I2C_Interrupt 05CC  
             i1I2C_Receive@pData 0079           __size_of_I2C1_Transmit 0097            i1I2C1_Transmit@result 0077  
              ??i1_I2C1_Transmit 0072               i1I2C1_Receive@size 0071                   ?_UART_InitPort 0070  
                UART_Interrupt@x 0072                  I2C_Receive@I2Cx 003B         MPU6050_Write_Data@result 0043  
                I2C_Receive@size 0037                   ?_UART_Transmit 0070          __size_ofi1_I2C1_Receive 0091  
         MPU6050_Read_Data@pData 003D                 ??_UART_Interrupt 0070                  ?_I2C1_Interrupt 0070  
                   ?_I2C_Receive 0035       MPU6050_Read_MultiData@size 0023                I2C1_Transmit@size 002E  
            i1I2C_Transmit@pData 0079                     UART_Init@brg 0030                         __ptext10 00A1  
                       __ptext11 02F8                         __ptext20 0524                         __ptext12 0594  
                       __ptext21 027A                         __ptext13 05A4                         __ptext22 053F  
                       __ptext23 01E9                         __ptext15 05BC                         __ptext24 05CA  
                       __ptext16 0416                         __ptext25 034F                         __ptext17 05B1  
                       __ptext18 055A                         __ptext19 0466               _MPU6050_Write_Data 04B1  
                  __size_of_SWAP 001A                    __size_of_main 0039              ?_MPU6050_Write_Data 003D  
                 I2C1_Init@Speed 0032                      Handle@count 0050                    _I2C1_Transmit 0152  
           __end_of_I2C_InitPort 05A4            __size_of_I2C1_Receive 00B1             __size_of_Timer0_Init 0027  
                       int$flags 007E              I2C_Transmit@address 0035         __end_of_Timer0_CheckFlag 05BC  
   MPU6050_Read_MultiData@result 0028             ??_MPU6050_Write_Data 003E             __end_of_I2C_Transmit 0509  
                ??_UART_InitPort 002D                         intlevel1 0000                  ??_UART_Transmit 0070  
                   _I2C1_Receive 00A1                  UART_Transmit@dt 0070                   ?_I2C1_Transmit 002D  
              __CFG_CLKOUTEN$OFF 0000                      _UART_Buffer 0048                    I2C1_Init@mode 0031  
                  I2C1_Receive@i 0033               I2C_Transmit@result 003C                    __pstringtext1 0574  
                     _OPTION_REG 0095                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
                 I2C1_Transmit@i 0032               __size_of_I2C1_Init 0057           __size_ofi1_I2C_Receive 001B  
                _TMR0_ReloadTemp 0052                   i1_I2C1_Receive 01E9  
