

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Jan 10 14:22:58 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.43
    39                           ; Generated 25/07/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC12F1822 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0115                     	;# 
   116  0116                     	;# 
   117  0117                     	;# 
   118  0118                     	;# 
   119  0119                     	;# 
   120  011A                     	;# 
   121  011B                     	;# 
   122  011D                     	;# 
   123  011D                     	;# 
   124  018C                     	;# 
   125  0191                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0199                     	;# 
   135  019A                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  0211                     	;# 
   147  0211                     	;# 
   148  0212                     	;# 
   149  0212                     	;# 
   150  0213                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0214                     	;# 
   154  0215                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0216                     	;# 
   158  0216                     	;# 
   159  0217                     	;# 
   160  0217                     	;# 
   161  0291                     	;# 
   162  0291                     	;# 
   163  0292                     	;# 
   164  0293                     	;# 
   165  0294                     	;# 
   166  0295                     	;# 
   167  0295                     	;# 
   168  0296                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0016                     	;# 
   206  0017                     	;# 
   207  0018                     	;# 
   208  0019                     	;# 
   209  001A                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  008C                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  0111                     	;# 
   230  0112                     	;# 
   231  0115                     	;# 
   232  0116                     	;# 
   233  0117                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011D                     	;# 
   239  011D                     	;# 
   240  018C                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0291                     	;# 
   278  0291                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0294                     	;# 
   282  0295                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  039A                     	;# 
   289  039C                     	;# 
   290  039D                     	;# 
   291  039E                     	;# 
   292  039F                     	;# 
   293  0FE4                     	;# 
   294  0FE5                     	;# 
   295  0FE6                     	;# 
   296  0FE7                     	;# 
   297  0FE8                     	;# 
   298  0FE9                     	;# 
   299  0FEA                     	;# 
   300  0FEB                     	;# 
   301  0FED                     	;# 
   302  0FEE                     	;# 
   303  0FEF                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  008C                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0095                     	;# 
   334  0096                     	;# 
   335  0097                     	;# 
   336  0098                     	;# 
   337  0099                     	;# 
   338  009A                     	;# 
   339  009B                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  010C                     	;# 
   345  0111                     	;# 
   346  0112                     	;# 
   347  0115                     	;# 
   348  0116                     	;# 
   349  0117                     	;# 
   350  0118                     	;# 
   351  0119                     	;# 
   352  011A                     	;# 
   353  011B                     	;# 
   354  011D                     	;# 
   355  011D                     	;# 
   356  018C                     	;# 
   357  0191                     	;# 
   358  0191                     	;# 
   359  0192                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0193                     	;# 
   363  0194                     	;# 
   364  0195                     	;# 
   365  0196                     	;# 
   366  0199                     	;# 
   367  019A                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019B                     	;# 
   372  019C                     	;# 
   373  019C                     	;# 
   374  019D                     	;# 
   375  019E                     	;# 
   376  019F                     	;# 
   377  020C                     	;# 
   378  0211                     	;# 
   379  0211                     	;# 
   380  0212                     	;# 
   381  0212                     	;# 
   382  0213                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0214                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0216                     	;# 
   390  0216                     	;# 
   391  0217                     	;# 
   392  0217                     	;# 
   393  0291                     	;# 
   394  0291                     	;# 
   395  0292                     	;# 
   396  0293                     	;# 
   397  0294                     	;# 
   398  0295                     	;# 
   399  0295                     	;# 
   400  0296                     	;# 
   401  0391                     	;# 
   402  0392                     	;# 
   403  0393                     	;# 
   404  039A                     	;# 
   405  039C                     	;# 
   406  039D                     	;# 
   407  039E                     	;# 
   408  039F                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0015                     	;# 
   436  0016                     	;# 
   437  0016                     	;# 
   438  0017                     	;# 
   439  0018                     	;# 
   440  0019                     	;# 
   441  001A                     	;# 
   442  001B                     	;# 
   443  001C                     	;# 
   444  001E                     	;# 
   445  001F                     	;# 
   446  008C                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  010C                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0115                     	;# 
   464  0116                     	;# 
   465  0117                     	;# 
   466  0118                     	;# 
   467  0119                     	;# 
   468  011A                     	;# 
   469  011B                     	;# 
   470  011D                     	;# 
   471  011D                     	;# 
   472  018C                     	;# 
   473  0191                     	;# 
   474  0191                     	;# 
   475  0192                     	;# 
   476  0193                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0194                     	;# 
   480  0195                     	;# 
   481  0196                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019C                     	;# 
   489  019C                     	;# 
   490  019D                     	;# 
   491  019E                     	;# 
   492  019F                     	;# 
   493  020C                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  0212                     	;# 
   497  0212                     	;# 
   498  0213                     	;# 
   499  0213                     	;# 
   500  0214                     	;# 
   501  0214                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0215                     	;# 
   505  0216                     	;# 
   506  0216                     	;# 
   507  0217                     	;# 
   508  0217                     	;# 
   509  0291                     	;# 
   510  0291                     	;# 
   511  0292                     	;# 
   512  0293                     	;# 
   513  0294                     	;# 
   514  0295                     	;# 
   515  0295                     	;# 
   516  0296                     	;# 
   517  0391                     	;# 
   518  0392                     	;# 
   519  0393                     	;# 
   520  039A                     	;# 
   521  039C                     	;# 
   522  039D                     	;# 
   523  039E                     	;# 
   524  039F                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  0011                     	;# 
   550  0012                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001E                     	;# 
   561  001F                     	;# 
   562  008C                     	;# 
   563  0091                     	;# 
   564  0092                     	;# 
   565  0095                     	;# 
   566  0096                     	;# 
   567  0097                     	;# 
   568  0098                     	;# 
   569  0099                     	;# 
   570  009A                     	;# 
   571  009B                     	;# 
   572  009B                     	;# 
   573  009C                     	;# 
   574  009D                     	;# 
   575  009E                     	;# 
   576  010C                     	;# 
   577  0111                     	;# 
   578  0112                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  011A                     	;# 
   585  011B                     	;# 
   586  011D                     	;# 
   587  011D                     	;# 
   588  018C                     	;# 
   589  0191                     	;# 
   590  0191                     	;# 
   591  0192                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0193                     	;# 
   595  0194                     	;# 
   596  0195                     	;# 
   597  0196                     	;# 
   598  0199                     	;# 
   599  019A                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019B                     	;# 
   603  019B                     	;# 
   604  019C                     	;# 
   605  019C                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  020C                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  0291                     	;# 
   626  0291                     	;# 
   627  0292                     	;# 
   628  0293                     	;# 
   629  0294                     	;# 
   630  0295                     	;# 
   631  0295                     	;# 
   632  0296                     	;# 
   633  0391                     	;# 
   634  0392                     	;# 
   635  0393                     	;# 
   636  039A                     	;# 
   637  039C                     	;# 
   638  039D                     	;# 
   639  039E                     	;# 
   640  039F                     	;# 
   641  0FE4                     	;# 
   642  0FE5                     	;# 
   643  0FE6                     	;# 
   644  0FE7                     	;# 
   645  0FE8                     	;# 
   646  0FE9                     	;# 
   647  0FEA                     	;# 
   648  0FEB                     	;# 
   649  0FED                     	;# 
   650  0FEE                     	;# 
   651  0FEF                     	;# 
   652                           
   653                           	psect	stringtext1
   654  0481                     __pstringtext1:	
   655  0481                     _baudtable:	
   656  0481  340A               	retlw	10
   657  0482  341A               	retlw	26
   658  0483  3404               	retlw	4
   659  0484  340D               	retlw	13
   660  0485  3440               	retlw	64
   661  0486  3403               	retlw	3
   662  0487  34CF               	retlw	207
   663  0488  3400               	retlw	0
   664  0489  34BF               	retlw	191
   665  048A  3400               	retlw	0
   666  048B  3467               	retlw	103
   667  048C  3400               	retlw	0
   668  048D  3422               	retlw	34
   669  048E  3400               	retlw	0
   670  048F  3410               	retlw	16
   671  0490  3400               	retlw	0
   672  0491                     __end_of_baudtable:	
   673                           
   674                           	psect	stringtext2
   675  0468                     __pstringtext2:	
   676  0468                     _hexpowers:	
   677  0468  3401               	retlw	1
   678  0469  3400               	retlw	0
   679  046A  3410               	retlw	16
   680  046B  3400               	retlw	0
   681  046C  3400               	retlw	0
   682  046D  3401               	retlw	1
   683  046E  3400               	retlw	0
   684  046F  3410               	retlw	16
   685  0470                     __end_of_hexpowers:	
   686  000C                     _PORTA	set	12
   687  0093                     _BCL1IF	set	147
   688  008B                     _SSP1IF	set	139
   689  008C                     _TXIF	set	140
   690  005F                     _GIE	set	95
   691  005E                     _PEIE	set	94
   692  008D                     _RCIF	set	141
   693  008C                     _TRISA	set	140
   694  0099                     _OSCCON	set	153
   695  0493                     _BCL1IE	set	1171
   696  048B                     _SSP1IE	set	1163
   697  048D                     _RCIE	set	1165
   698  011D                     _APFCON	set	285
   699  0199                     _RCREG	set	409
   700  019A                     _TXREG	set	410
   701  019C                     _SPBRGH	set	412
   702  019B                     _SPBRGL	set	411
   703  019D                     _RCSTA	set	413
   704  019E                     _TXSTA	set	414
   705  018C                     _ANSELA	set	396
   706  0CEC                     _CREN	set	3308
   707  0CE9                     _OERR	set	3305
   708  0CEF                     _SPEN	set	3311
   709  0CFB                     _BRG16	set	3323
   710  0214                     _SSPSTATbits	set	532
   711  0211                     _SSPBUF	set	529
   712  0216                     _SSPCON2	set	534
   713  0213                     _SSPMSK	set	531
   714  0216                     _SSPCON2bits	set	534
   715  0215                     _SSPCON1bits	set	533
   716  0212                     _SSPADD	set	530
   717  0214                     _SSPSTAT	set	532
   718  0215                     _SSPCON1	set	533
   719  020C                     _WPUA	set	524
   720  0470                     STR_2:	
   721  0470  3430               	retlw	48	;'0'
   722  0471  3431               	retlw	49	;'1'
   723  0472  3432               	retlw	50	;'2'
   724  0473  3433               	retlw	51	;'3'
   725  0474  3434               	retlw	52	;'4'
   726  0475  3435               	retlw	53	;'5'
   727  0476  3436               	retlw	54	;'6'
   728  0477  3437               	retlw	55	;'7'
   729  0478  3438               	retlw	56	;'8'
   730  0479  3439               	retlw	57	;'9'
   731  047A  3461               	retlw	97	;'a'
   732  047B  3462               	retlw	98	;'b'
   733  047C  3463               	retlw	99	;'c'
   734  047D  3464               	retlw	100	;'d'
   735  047E  3465               	retlw	101	;'e'
   736  047F  3466               	retlw	102	;'f'
   737  0480  3400               	retlw	0
   738                           
   739                           	psect	stringtext3
   740  04B9                     __pstringtext3:	
   741  04B9                     STR_1:	
   742  04B9  3425               	retlw	37	;'%'
   743  04BA  3478               	retlw	120	;'x'
   744  04BB  3420               	retlw	32	;' '
   745  04BC  3425               	retlw	37	;'%'
   746  04BD  3478               	retlw	120	;'x'
   747  04BE  3420               	retlw	32	;' '
   748  04BF  3425               	retlw	37	;'%'
   749  04C0  3478               	retlw	120	;'x'
   750  04C1  3420               	retlw	32	;' '
   751  04C2  340A               	retlw	10
   752  04C3  3400               	retlw	0
   753                           
   754                           	psect	stringtext4
   755  0000                     __pstringtext4:	
   756                           
   757                           ; #config settings
   758  0000                     
   759                           	psect	cinit
   760  0011                     start_initialization:	
   761  0011                     __initialization:	
   762                           
   763                           ; Clear objects allocated to COMMON
   764  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   765  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   766                           
   767                           ; Clear objects allocated to BANK0
   768  0013  304E               	movlw	low __pbssBANK0
   769  0014  0084               	movwf	4
   770  0015  3000               	movlw	high __pbssBANK0
   771  0016  0085               	movwf	5
   772  0017  301B               	movlw	27
   773  0018  24CC               	fcall	clear_ram0
   774  0019                     end_of_initialization:	
   775                           ;End of C runtime variable initialization code
   776                           
   777  0019                     __end_of__initialization:	
   778  0019  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   779  001A  0020               	movlb	0
   780  001B  29DC               	ljmp	_main	;jump to C main() function
   781                           
   782                           	psect	bssCOMMON
   783  0078                     __pbssCOMMON:	
   784  0078                     _UART_Buffer_outptr:	
   785  0078                     	ds	1
   786  0079                     _UART_Buffer_inptr:	
   787  0079                     	ds	1
   788                           
   789                           	psect	bssBANK0
   790  004E                     __pbssBANK0:	
   791  004E                     _UART_Buffer:	
   792  004E                     	ds	8
   793  0056                     _I2C1_Config:	
   794  0056                     	ds	19
   795                           
   796                           	psect	clrtext
   797  04CC                     clear_ram0:	
   798                           ;	Called with FSR0 containing the base address, and
   799                           ;	WREG with the size to clear
   800                           
   801  04CC  0064               	clrwdt	;clear the watchdog before getting into this loop
   802  04CD                     clrloop0:	
   803  04CD  0180               	clrf	0	;clear RAM location pointed to by FSR
   804  04CE  3101               	addfsr 0,1
   805  04CF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   806  04D0  2CCD               	goto	clrloop0	;have we reached the end yet?
   807  04D1  3400               	retlw	0	;all done for this memory range, return
   808                           
   809                           	psect	cstackCOMMON
   810  0070                     __pcstackCOMMON:	
   811  0070                     ?_Basic_Init:	
   812  0070                     ?_UART_InitPort:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_I2C_InitPort:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_MPU6050_Init:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_UART_Interrupt:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ??_UART_Interrupt:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_I2C_Interrupt:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_I2C1_Interrupt:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ??_I2C1_Interrupt:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_main:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_Handle:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_UART_Transmit:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_putch:	
   846                           ; 1 bytes @ 0x0
   847                           
   848                           
   849                           ; 1 bytes @ 0x0
   850  0070                     	ds	1
   851  0071                     ??_I2C_Interrupt:	
   852  0071                     UART_Interrupt@dt:	
   853                           ; 1 bytes @ 0x1
   854                           
   855                           
   856                           ; 1 bytes @ 0x1
   857  0071                     	ds	1
   858  0072                     UART_Interrupt@x:	
   859                           
   860                           ; 1 bytes @ 0x2
   861  0072                     	ds	1
   862  0073                     ??_Handle:	
   863                           
   864                           ; 1 bytes @ 0x3
   865  0073                     	ds	1
   866  0074                     ??_Basic_Init:	
   867  0074                     ??_UART_InitPort:	
   868                           ; 1 bytes @ 0x4
   869                           
   870  0074                     ??_I2C_InitPort:	
   871                           ; 1 bytes @ 0x4
   872                           
   873  0074                     ?_I2C1_Transmit:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0074                     ?_I2C1_Receive:	
   877                           ; 1 bytes @ 0x4
   878                           
   879  0074                     ??_UART_Transmit:	
   880                           ; 1 bytes @ 0x4
   881                           
   882  0074                     ?___lwdiv:	
   883                           ; 1 bytes @ 0x4
   884                           
   885  0074                     UART_Transmit@dt:	
   886                           ; 2 bytes @ 0x4
   887                           
   888  0074                     I2C1_Transmit@pData:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     I2C1_Receive@pData:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     ___lwdiv@divisor:	
   895                           ; 1 bytes @ 0x4
   896                           
   897                           
   898                           ; 2 bytes @ 0x4
   899  0074                     	ds	1
   900  0075                     ?_UART_Init:	
   901  0075                     ??_I2C1_Init:	
   902                           ; 1 bytes @ 0x5
   903                           
   904  0075                     ??_putch:	
   905                           ; 1 bytes @ 0x5
   906                           
   907  0075                     putch@c:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     I2C1_Transmit@size:	
   911                           ; 1 bytes @ 0x5
   912                           
   913  0075                     I2C1_Receive@size:	
   914                           ; 1 bytes @ 0x5
   915                           
   916  0075                     UART_Init@UART_Init_PORT:	
   917                           ; 1 bytes @ 0x5
   918                           
   919                           
   920                           ; 2 bytes @ 0x5
   921  0075                     	ds	1
   922  0076                     ??_I2C1_Transmit:	
   923  0076                     ??_I2C1_Receive:	
   924                           ; 1 bytes @ 0x6
   925                           
   926  0076                     ___lwdiv@dividend:	
   927                           ; 1 bytes @ 0x6
   928                           
   929                           
   930                           ; 2 bytes @ 0x6
   931  0076                     	ds	1
   932  0077                     UART_Init@brg:	
   933                           
   934                           ; 1 bytes @ 0x7
   935  0077                     	ds	1
   936                           
   937                           	psect	cstackBANK0
   938  0020                     __pcstackBANK0:	
   939  0020                     ??_UART_Init:	
   940  0020                     ?_I2C1_Init:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0020                     ??___lwdiv:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0020                     I2C1_Transmit@address:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0020                     I2C1_Receive@address:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0020                     I2C1_Init@I2C1_Init_PORT:	
   953                           ; 1 bytes @ 0x0
   954                           
   955                           
   956                           ; 2 bytes @ 0x0
   957  0020                     	ds	1
   958  0021                     I2C1_Transmit@i:	
   959  0021                     I2C1_Receive@result:	
   960                           ; 1 bytes @ 0x1
   961                           
   962  0021                     ___lwdiv@counter:	
   963                           ; 1 bytes @ 0x1
   964                           
   965                           
   966                           ; 1 bytes @ 0x1
   967  0021                     	ds	1
   968  0022                     I2C1_Init@address:	
   969  0022                     I2C1_Transmit@i_449:	
   970                           ; 1 bytes @ 0x2
   971                           
   972  0022                     I2C1_Receive@i:	
   973                           ; 1 bytes @ 0x2
   974                           
   975  0022                     ___lwdiv@quotient:	
   976                           ; 1 bytes @ 0x2
   977                           
   978                           
   979                           ; 2 bytes @ 0x2
   980  0022                     	ds	1
   981  0023                     I2C1_Init@mode:	
   982  0023                     I2C1_Transmit@result:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0023                     I2C1_Receive@i_456:	
   986                           ; 1 bytes @ 0x3
   987                           
   988                           
   989                           ; 1 bytes @ 0x3
   990  0023                     	ds	1
   991  0024                     ?_I2C_Transmit:	
   992  0024                     ?_I2C_Receive:	
   993                           ; 1 bytes @ 0x4
   994                           
   995  0024                     ?_printf:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0024                     I2C_Transmit@address:	
   999                           ; 2 bytes @ 0x4
  1000                           
  1001  0024                     I2C_Receive@address:	
  1002                           ; 1 bytes @ 0x4
  1003                           
  1004  0024                     I2C1_Init@Speed:	
  1005                           ; 1 bytes @ 0x4
  1006                           
  1007  0024                     printf@f:	
  1008                           ; 1 bytes @ 0x4
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x4
  1012  0024                     	ds	1
  1013  0025                     I2C_Transmit@pData:	
  1014  0025                     I2C_Receive@pData:	
  1015                           ; 1 bytes @ 0x5
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019  0025                     	ds	1
  1020  0026                     I2C_Transmit@size:	
  1021  0026                     I2C_Receive@size:	
  1022                           ; 1 bytes @ 0x6
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x6
  1026  0026                     	ds	1
  1027  0027                     ??_I2C_Transmit:	
  1028  0027                     ??_I2C_Receive:	
  1029                           ; 1 bytes @ 0x7
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x7
  1033  0027                     	ds	3
  1034  002A                     I2C_Transmit@I2Cx:	
  1035  002A                     I2C_Receive@I2Cx:	
  1036                           ; 1 bytes @ 0xA
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0xA
  1040  002A                     	ds	1
  1041  002B                     I2C_Transmit@result:	
  1042  002B                     I2C_Receive@result:	
  1043                           ; 1 bytes @ 0xB
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0xB
  1047  002B                     	ds	1
  1048  002C                     ?_MPU6050_Read_MultiData:	
  1049  002C                     ??_printf:	
  1050                           ; 1 bytes @ 0xC
  1051                           
  1052  002C                     ?_MPU6050_Write_Data:	
  1053                           ; 1 bytes @ 0xC
  1054                           
  1055  002C                     ?_MPU6050_Read_Data:	
  1056                           ; 1 bytes @ 0xC
  1057                           
  1058  002C                     MPU6050_Write_Data@pData:	
  1059                           ; 1 bytes @ 0xC
  1060                           
  1061  002C                     MPU6050_Read_Data@pData:	
  1062                           ; 1 bytes @ 0xC
  1063                           
  1064  002C                     MPU6050_Read_MultiData@pData:	
  1065                           ; 1 bytes @ 0xC
  1066                           
  1067                           
  1068                           ; 1 bytes @ 0xC
  1069  002C                     	ds	1
  1070  002D                     ??_MPU6050_Write_Data:	
  1071  002D                     ??_MPU6050_Read_Data:	
  1072                           ; 1 bytes @ 0xD
  1073                           
  1074  002D                     MPU6050_Read_MultiData@size:	
  1075                           ; 1 bytes @ 0xD
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0xD
  1079  002D                     	ds	1
  1080  002E                     ??_MPU6050_Read_MultiData:	
  1081                           
  1082                           ; 1 bytes @ 0xE
  1083  002E                     	ds	2
  1084  0030                     MPU6050_Write_Data@reg:	
  1085  0030                     MPU6050_Read_Data@reg:	
  1086                           ; 1 bytes @ 0x10
  1087                           
  1088  0030                     printf@flag:	
  1089                           ; 1 bytes @ 0x10
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0x10
  1093  0030                     	ds	1
  1094  0031                     MPU6050_Write_Data@result:	
  1095  0031                     MPU6050_Read_Data@result:	
  1096                           ; 1 bytes @ 0x11
  1097                           
  1098  0031                     printf@idx:	
  1099                           ; 1 bytes @ 0x11
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x11
  1103  0031                     	ds	1
  1104  0032                     ??_MPU6050_Init:	
  1105  0032                     MPU6050_Read_MultiData@result:	
  1106                           ; 1 bytes @ 0x12
  1107                           
  1108  0032                     printf@ap:	
  1109                           ; 1 bytes @ 0x12
  1110                           
  1111                           
  1112                           ; 1 bytes @ 0x12
  1113  0032                     	ds	1
  1114  0033                     MPU6050_Read_MultiData@reg:	
  1115  0033                     printf@val:	
  1116                           ; 1 bytes @ 0x13
  1117                           
  1118                           
  1119                           ; 2 bytes @ 0x13
  1120  0033                     	ds	1
  1121  0034                     MPU6050_Init@result:	
  1122                           
  1123                           ; 1 bytes @ 0x14
  1124  0034                     	ds	1
  1125  0035                     MPU6050_Init@data:	
  1126  0035                     printf@prec:	
  1127                           ; 1 bytes @ 0x15
  1128                           
  1129                           
  1130                           ; 1 bytes @ 0x15
  1131  0035                     	ds	1
  1132  0036                     MPU6050_Init@addr:	
  1133  0036                     printf@c:	
  1134                           ; 1 bytes @ 0x16
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0x16
  1138  0036                     	ds	1
  1139  0037                     ??_main:	
  1140                           
  1141                           ; 1 bytes @ 0x17
  1142  0037                     	ds	2
  1143  0039                     main@swap:	
  1144                           
  1145                           ; 1 bytes @ 0x19
  1146  0039                     	ds	1
  1147  003A                     main@swap_162:	
  1148                           
  1149                           ; 1 bytes @ 0x1A
  1150  003A                     	ds	1
  1151  003B                     main@swap_163:	
  1152                           
  1153                           ; 1 bytes @ 0x1B
  1154  003B                     	ds	1
  1155  003C                     main@swap_164:	
  1156                           
  1157                           ; 1 bytes @ 0x1C
  1158  003C                     	ds	1
  1159  003D                     main@swap_165:	
  1160                           
  1161                           ; 1 bytes @ 0x1D
  1162  003D                     	ds	1
  1163  003E                     main@swap_166:	
  1164                           
  1165                           ; 1 bytes @ 0x1E
  1166  003E                     	ds	1
  1167  003F                     main@swap_167:	
  1168                           
  1169                           ; 1 bytes @ 0x1F
  1170  003F                     	ds	1
  1171  0040                     main@accel_t_gyro:	
  1172                           
  1173                           ; 14 bytes @ 0x20
  1174  0040                     	ds	14
  1175                           
  1176                           	psect	maintext
  1177  01DC                     __pmaintext:	
  1178 ;;
  1179 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1180 ;;
  1181 ;; *************** function _main *****************
  1182 ;; Defined at:
  1183 ;;		line 10 in file "main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  swap            1   31[BANK0 ] unsigned char 
  1188 ;;  swap            1   30[BANK0 ] unsigned char 
  1189 ;;  swap            1   29[BANK0 ] unsigned char 
  1190 ;;  swap            1   28[BANK0 ] unsigned char 
  1191 ;;  swap            1   27[BANK0 ] unsigned char 
  1192 ;;  swap            1   26[BANK0 ] unsigned char 
  1193 ;;  swap            1   25[BANK0 ] unsigned char 
  1194 ;;  accel_t_gyro   14   32[BANK0 ] struct .
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : B1F/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1
  1204 ;;      Params:         0       0       0
  1205 ;;      Locals:         0      21       0
  1206 ;;      Temps:          0       2       0
  1207 ;;      Totals:         0      23       0
  1208 ;;Total ram usage:       23 bytes
  1209 ;; Hardware stack levels required when called:    7
  1210 ;; This function calls:
  1211 ;;		_Basic_Init
  1212 ;;		_I2C1_Init
  1213 ;;		_MPU6050_Init
  1214 ;;		_MPU6050_Read_MultiData
  1215 ;;		_UART_Init
  1216 ;;		_printf
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _main
  1224  01DC                     _main:	
  1225                           
  1226                           ;main.c: 12: accel_t_gyro_union accel_t_gyro;
  1227                           ;main.c: 14: Basic_Init();
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1231  01DC  24AC               	fcall	_Basic_Init
  1232                           
  1233                           ;main.c: 15: UART_Init(UART_InitPort,BAUD_9600);
  1234  01DD  3091               	movlw	low _UART_InitPort
  1235  01DE  00F5               	movwf	UART_Init@UART_Init_PORT
  1236  01DF  3004               	movlw	high _UART_InitPort
  1237  01E0  00F6               	movwf	UART_Init@UART_Init_PORT+1
  1238  01E1  3003               	movlw	3
  1239  01E2  0020               	movlb	0	; select bank0
  1240  01E3  00B7               	movwf	??_main
  1241  01E4  0837               	movf	??_main,w
  1242  01E5  00F7               	movwf	UART_Init@brg
  1243  01E6  230D               	fcall	_UART_Init
  1244                           
  1245                           ;main.c: 17: I2C1_Init(I2C_InitPort,0x00,I2C_MODE_MASTER,I2C_SPEED_HIGH);
  1246  01E7  309F               	movlw	low _I2C_InitPort
  1247  01E8  0020               	movlb	0	; select bank0
  1248  01E9  00A0               	movwf	I2C1_Init@I2C1_Init_PORT
  1249  01EA  3004               	movlw	high _I2C_InitPort
  1250  01EB  00A1               	movwf	I2C1_Init@I2C1_Init_PORT+1
  1251  01EC  01A2               	clrf	I2C1_Init@address
  1252  01ED  01A3               	clrf	I2C1_Init@mode
  1253  01EE  01A4               	clrf	I2C1_Init@Speed
  1254  01EF  0AA4               	incf	I2C1_Init@Speed,f
  1255  01F0  2264               	fcall	_I2C1_Init
  1256                           
  1257                           ;main.c: 19: MPU6050_Init();
  1258  01F1  2411               	fcall	_MPU6050_Init
  1259  01F2                     l1955:	
  1260                           ;main.c: 21: while(1)
  1261                           
  1262                           
  1263                           ;main.c: 22: {
  1264                           ;main.c: 23: MPU6050_Read_MultiData(0x3B,(uint8_t *)&accel_t_gyro,sizeof(accel_t_gyro));
  1265  01F2  3040               	movlw	(low (main@accel_t_gyro| 0))& (0+255)
  1266  01F3  0020               	movlb	0	; select bank0
  1267  01F4  00B7               	movwf	??_main
  1268  01F5  0837               	movf	??_main,w
  1269  01F6  00AC               	movwf	MPU6050_Read_MultiData@pData
  1270  01F7  300E               	movlw	14
  1271  01F8  00B8               	movwf	??_main+1
  1272  01F9  0838               	movf	??_main+1,w
  1273  01FA  00AD               	movwf	MPU6050_Read_MultiData@size
  1274  01FB  303B               	movlw	59
  1275  01FC  23A1               	fcall	_MPU6050_Read_MultiData
  1276                           
  1277                           ;main.c: 24: {uint8_t swap = accel_t_gyro.reg.x_accel_h; accel_t_gyro.reg.x_accel_h = ac
      +                          cel_t_gyro.reg.x_accel_l; accel_t_gyro.reg.x_accel_l = swap;};
  1278  01FD  0020               	movlb	0	; select bank0
  1279  01FE  0840               	movf	main@accel_t_gyro,w
  1280  01FF  00B7               	movwf	??_main
  1281  0200  0837               	movf	??_main,w
  1282  0201  00B9               	movwf	main@swap
  1283  0202  0841               	movf	main@accel_t_gyro+1,w
  1284  0203  00B7               	movwf	??_main
  1285  0204  0837               	movf	??_main,w
  1286  0205  00C0               	movwf	main@accel_t_gyro
  1287  0206  0839               	movf	main@swap,w
  1288  0207  00B7               	movwf	??_main
  1289  0208  0837               	movf	??_main,w
  1290  0209  00C1               	movwf	main@accel_t_gyro+1
  1291                           
  1292                           ;main.c: 25: {uint8_t swap = accel_t_gyro.reg.y_accel_h; accel_t_gyro.reg.y_accel_h = ac
      +                          cel_t_gyro.reg.y_accel_l; accel_t_gyro.reg.y_accel_l = swap;};
  1293  020A  0842               	movf	main@accel_t_gyro+2,w
  1294  020B  00B7               	movwf	??_main
  1295  020C  0837               	movf	??_main,w
  1296  020D  00BA               	movwf	main@swap_162
  1297  020E  0843               	movf	main@accel_t_gyro+3,w
  1298  020F  00B7               	movwf	??_main
  1299  0210  0837               	movf	??_main,w
  1300  0211  00C2               	movwf	main@accel_t_gyro+2
  1301  0212  083A               	movf	main@swap_162,w
  1302  0213  00B7               	movwf	??_main
  1303  0214  0837               	movf	??_main,w
  1304  0215  00C3               	movwf	main@accel_t_gyro+3
  1305                           
  1306                           ;main.c: 26: {uint8_t swap = accel_t_gyro.reg.z_accel_h; accel_t_gyro.reg.z_accel_h = ac
      +                          cel_t_gyro.reg.z_accel_l; accel_t_gyro.reg.z_accel_l = swap;};
  1307  0216  0844               	movf	main@accel_t_gyro+4,w
  1308  0217  00B7               	movwf	??_main
  1309  0218  0837               	movf	??_main,w
  1310  0219  00BB               	movwf	main@swap_163
  1311  021A  0845               	movf	main@accel_t_gyro+5,w
  1312  021B  00B7               	movwf	??_main
  1313  021C  0837               	movf	??_main,w
  1314  021D  00C4               	movwf	main@accel_t_gyro+4
  1315  021E  083B               	movf	main@swap_163,w
  1316  021F  00B7               	movwf	??_main
  1317  0220  0837               	movf	??_main,w
  1318  0221  00C5               	movwf	main@accel_t_gyro+5
  1319                           
  1320                           ;main.c: 27: {uint8_t swap = accel_t_gyro.reg.t_h; accel_t_gyro.reg.t_h = accel_t_gyro.r
      +                          eg.t_l; accel_t_gyro.reg.t_l = swap;};
  1321  0222  0846               	movf	main@accel_t_gyro+6,w
  1322  0223  00B7               	movwf	??_main
  1323  0224  0837               	movf	??_main,w
  1324  0225  00BC               	movwf	main@swap_164
  1325  0226  0847               	movf	main@accel_t_gyro+7,w
  1326  0227  00B7               	movwf	??_main
  1327  0228  0837               	movf	??_main,w
  1328  0229  00C6               	movwf	main@accel_t_gyro+6
  1329  022A  083C               	movf	main@swap_164,w
  1330  022B  00B7               	movwf	??_main
  1331  022C  0837               	movf	??_main,w
  1332  022D  00C7               	movwf	main@accel_t_gyro+7
  1333                           
  1334                           ;main.c: 28: {uint8_t swap = accel_t_gyro.reg.x_gyro_h; accel_t_gyro.reg.x_gyro_h = acce
      +                          l_t_gyro.reg.x_gyro_l; accel_t_gyro.reg.x_gyro_l = swap;};
  1335  022E  0848               	movf	main@accel_t_gyro+8,w
  1336  022F  00B7               	movwf	??_main
  1337  0230  0837               	movf	??_main,w
  1338  0231  00BD               	movwf	main@swap_165
  1339  0232  0849               	movf	main@accel_t_gyro+9,w
  1340  0233  00B7               	movwf	??_main
  1341  0234  0837               	movf	??_main,w
  1342  0235  00C8               	movwf	main@accel_t_gyro+8
  1343  0236  083D               	movf	main@swap_165,w
  1344  0237  00B7               	movwf	??_main
  1345  0238  0837               	movf	??_main,w
  1346  0239  00C9               	movwf	main@accel_t_gyro+9
  1347                           
  1348                           ;main.c: 29: {uint8_t swap = accel_t_gyro.reg.y_gyro_h; accel_t_gyro.reg.y_gyro_h = acce
      +                          l_t_gyro.reg.y_gyro_l; accel_t_gyro.reg.y_gyro_l = swap;};
  1349  023A  084A               	movf	main@accel_t_gyro+10,w
  1350  023B  00B7               	movwf	??_main
  1351  023C  0837               	movf	??_main,w
  1352  023D  00BE               	movwf	main@swap_166
  1353  023E  084B               	movf	main@accel_t_gyro+11,w
  1354  023F  00B7               	movwf	??_main
  1355  0240  0837               	movf	??_main,w
  1356  0241  00CA               	movwf	main@accel_t_gyro+10
  1357  0242  083E               	movf	main@swap_166,w
  1358  0243  00B7               	movwf	??_main
  1359  0244  0837               	movf	??_main,w
  1360  0245  00CB               	movwf	main@accel_t_gyro+11
  1361                           
  1362                           ;main.c: 30: {uint8_t swap = accel_t_gyro.reg.z_gyro_h; accel_t_gyro.reg.z_gyro_h = acce
      +                          l_t_gyro.reg.z_gyro_l; accel_t_gyro.reg.z_gyro_l = swap;};
  1363  0246  084C               	movf	main@accel_t_gyro+12,w
  1364  0247  00B7               	movwf	??_main
  1365  0248  0837               	movf	??_main,w
  1366  0249  00BF               	movwf	main@swap_167
  1367  024A  084D               	movf	main@accel_t_gyro+13,w
  1368  024B  00B7               	movwf	??_main
  1369  024C  0837               	movf	??_main,w
  1370  024D  00CC               	movwf	main@accel_t_gyro+12
  1371  024E  083F               	movf	main@swap_167,w
  1372  024F  00B7               	movwf	??_main
  1373  0250  0837               	movf	??_main,w
  1374  0251  00CD               	movwf	main@accel_t_gyro+13
  1375                           
  1376                           ;main.c: 31: printf("%x %x %x \n",accel_t_gyro.value.x_accel,accel_t_gyro.value.y_accel,
      +                          accel_t_gyro.value.z_accel);
  1377  0252  30B9               	movlw	low (STR_1| (0+32768))
  1378  0253  00A4               	movwf	printf@f
  1379  0254  3084               	movlw	high (STR_1| (0+32768))
  1380  0255  00A5               	movwf	printf@f+1
  1381  0256  0841               	movf	main@accel_t_gyro+1,w
  1382  0257  00A7               	movwf	?_printf+3
  1383  0258  0840               	movf	main@accel_t_gyro,w
  1384  0259  00A6               	movwf	?_printf+2
  1385  025A  0843               	movf	main@accel_t_gyro+3,w
  1386  025B  00A9               	movwf	?_printf+5
  1387  025C  0842               	movf	main@accel_t_gyro+2,w
  1388  025D  00A8               	movwf	?_printf+4
  1389  025E  0845               	movf	main@accel_t_gyro+5,w
  1390  025F  00AB               	movwf	?_printf+7
  1391  0260  0844               	movf	main@accel_t_gyro+4,w
  1392  0261  00AA               	movwf	?_printf+6
  1393  0262  20B9               	fcall	_printf
  1394  0263  29F2               	goto	l1955
  1395  0264                     __end_of_main:	
  1396                           
  1397                           	psect	text1
  1398  00B9                     __ptext1:	
  1399 ;; *************** function _printf *****************
  1400 ;; Defined at:
  1401 ;;		line 464 in file "/opt/microchip/xc8/v1.43/sources/common/doprnt.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  f               2    4[BANK0 ] PTR const unsigned char 
  1404 ;;		 -> STR_1(11), 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  idx             1   17[BANK0 ] unsigned char 
  1407 ;;  tmpval          4    0        struct .
  1408 ;;  val             2   19[BANK0 ] unsigned int 
  1409 ;;  cp              2    0        PTR const unsigned char 
  1410 ;;  len             2    0        unsigned int 
  1411 ;;  c               1   22[BANK0 ] char 
  1412 ;;  prec            1   21[BANK0 ] char 
  1413 ;;  ap              1   18[BANK0 ] PTR void [1]
  1414 ;;		 -> ?_printf(2), 
  1415 ;;  flag            1   16[BANK0 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  2    4[BANK0 ] int 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1
  1425 ;;      Params:         0       8       0
  1426 ;;      Locals:         0       7       0
  1427 ;;      Temps:          0       4       0
  1428 ;;      Totals:         0      19       0
  1429 ;;Total ram usage:       19 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    5
  1432 ;; This function calls:
  1433 ;;		___lwdiv
  1434 ;;		_putch
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _printf
  1442  00B9                     _printf:	
  1443                           
  1444                           ;doprnt.c: 466: va_list ap;
  1445                           ;doprnt.c: 499: signed char c;
  1446                           ;doprnt.c: 506: signed char prec;
  1447                           ;doprnt.c: 508: unsigned char flag;
  1448                           ;doprnt.c: 523: union {
  1449                           ;doprnt.c: 524: unsigned long vd;
  1450                           ;doprnt.c: 525: double integ;
  1451                           ;doprnt.c: 526: } tmpval;
  1452                           ;doprnt.c: 528: unsigned int val;
  1453                           ;doprnt.c: 529: unsigned len;
  1454                           ;doprnt.c: 530: const char * cp;
  1455                           ;doprnt.c: 533: *ap = __va_start();
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1459  00B9  3026               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1460  00BA  0020               	movlb	0	; select bank0
  1461  00BB  00AC               	movwf	??_printf
  1462  00BC  082C               	movf	??_printf,w
  1463  00BD  00B2               	movwf	printf@ap
  1464  00BE                     l1945:	
  1465                           ;doprnt.c: 536: while(c = *f++) {
  1466                           
  1467  00BE  0020               	movlb	0	; select bank0
  1468  00BF  0825               	movf	printf@f+1,w
  1469  00C0  00AD               	movwf	??_printf+1
  1470  00C1  0824               	movf	printf@f,w
  1471  00C2  00AC               	movwf	??_printf
  1472  00C3  0AA4               	incf	printf@f,f
  1473  00C4  1903               	skipnz
  1474  00C5  0AA5               	incf	printf@f+1,f
  1475  00C6  082C               	movf	??_printf,w
  1476  00C7  0084               	movwf	4
  1477  00C8  082D               	movf	??_printf+1,w
  1478  00C9  0085               	movwf	5
  1479  00CA  0800               	movf	0,w	;code access
  1480  00CB  00AE               	movwf	??_printf+2
  1481  00CC  082E               	movf	??_printf+2,w
  1482  00CD  00B6               	movwf	printf@c
  1483  00CE  0836               	movf	printf@c,w
  1484  00CF  1903               	btfsc	3,2
  1485  00D0  0008               	return
  1486                           
  1487                           ;doprnt.c: 538: if(c != '%')
  1488  00D1  3025               	movlw	37
  1489  00D2  0636               	xorwf	printf@c,w
  1490  00D3  1903               	btfsc	3,2
  1491  00D4  28D8               	goto	l1913
  1492                           
  1493                           ;doprnt.c: 540: {
  1494                           ;doprnt.c: 541: (putch(c) );
  1495  00D5  0836               	movf	printf@c,w
  1496  00D6  24D2               	fcall	_putch
  1497                           
  1498                           ;doprnt.c: 542: continue;
  1499  00D7  28BE               	goto	l1945
  1500  00D8                     l1913:	
  1501                           
  1502                           ;doprnt.c: 543: }
  1503                           ;doprnt.c: 548: flag = 0;
  1504  00D8  0020               	movlb	0	; select bank0
  1505  00D9  01B0               	clrf	printf@flag
  1506                           
  1507                           ;doprnt.c: 822: }
  1508                           
  1509                           ;doprnt.c: 813: continue;
  1510                           
  1511                           ;doprnt.c: 802: default:
  1512                           
  1513                           ;doprnt.c: 723: break;
  1514                           
  1515                           ;doprnt.c: 718: case 'x':
  1516                           
  1517                           ;doprnt.c: 638: goto alldone;
  1518                           
  1519                           ;doprnt.c: 637: case 0:
  1520                           
  1521                           ;doprnt.c: 635: switch(c = *f++) {
  1522  00DA  0825               	movf	printf@f+1,w
  1523  00DB  00AD               	movwf	??_printf+1
  1524  00DC  0824               	movf	printf@f,w
  1525  00DD  00AC               	movwf	??_printf
  1526  00DE  0AA4               	incf	printf@f,f
  1527  00DF  1903               	skipnz
  1528  00E0  0AA5               	incf	printf@f+1,f
  1529  00E1  082C               	movf	??_printf,w
  1530  00E2  0084               	movwf	4
  1531  00E3  082D               	movf	??_printf+1,w
  1532  00E4  0085               	movwf	5
  1533  00E5  0800               	movf	0,w	;code access
  1534  00E6  00B6               	movwf	printf@c
  1535                           
  1536                           ; Switch size 1, requested type "space"
  1537                           ; Number of cases is 2, Range of values is 0 to 120
  1538                           ; switch strategies available:
  1539                           ; Name         Instructions Cycles
  1540                           ; simple_byte            7     4 (average)
  1541                           ; direct_byte          248     6 (fixed)
  1542                           ; jumptable            260     6 (fixed)
  1543                           ;	Chosen strategy is simple_byte
  1544  00E7  3A00               	xorlw	0	; case 0
  1545  00E8  1903               	skipnz
  1546  00E9  2952               	goto	l337
  1547  00EA  3A78               	xorlw	120	; case 120
  1548  00EB  1903               	skipnz
  1549  00EC  28EE               	goto	l1919
  1550  00ED  28BE               	goto	l1945
  1551  00EE                     l1919:	
  1552                           
  1553                           ;doprnt.c: 1273: {
  1554                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1555  00EE  0832               	movf	printf@ap,w
  1556  00EF  0086               	movwf	6
  1557  00F0  0187               	clrf	7
  1558  00F1  3F40               	moviw [0]fsr1
  1559  00F2  00B3               	movwf	printf@val
  1560  00F3  3F41               	moviw [1]fsr1
  1561  00F4  00B4               	movwf	printf@val+1
  1562  00F5  3002               	movlw	2
  1563  00F6  00AC               	movwf	??_printf
  1564  00F7  082C               	movf	??_printf,w
  1565  00F8  07B2               	addwf	printf@ap,f
  1566                           
  1567                           ;doprnt.c: 1287: }
  1568                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1569  00F9  01B6               	clrf	printf@c
  1570  00FA  0AB6               	incf	printf@c,f
  1571  00FB  3004               	movlw	4
  1572  00FC  0636               	xorwf	printf@c,w
  1573  00FD  1903               	btfsc	3,2
  1574  00FE  291E               	goto	l1935
  1575  00FF                     l1929:	
  1576                           
  1577                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1578  00FF  0836               	movf	printf@c,w
  1579  0100  00AC               	movwf	??_printf
  1580  0101  01AD               	clrf	??_printf+1
  1581  0102  35AC               	lslf	??_printf,f
  1582  0103  0DAD               	rlf	??_printf+1,f
  1583  0104  3068               	movlw	low (_hexpowers| (0+32768))
  1584  0105  072C               	addwf	??_printf,w
  1585  0106  0084               	movwf	4
  1586  0107  3084               	movlw	high (_hexpowers| (0+32768))
  1587  0108  3D2D               	addwfc	??_printf+1,w
  1588  0109  0085               	movwf	5
  1589  010A  3F00               	moviw [0]fsr0
  1590  010B  00AE               	movwf	??_printf+2
  1591  010C  3F01               	moviw [1]fsr0
  1592  010D  00AF               	movwf	??_printf+3
  1593  010E  082F               	movf	??_printf+3,w
  1594  010F  0234               	subwf	printf@val+1,w
  1595  0110  1D03               	skipz
  1596  0111  2914               	goto	u1545
  1597  0112  082E               	movf	??_printf+2,w
  1598  0113  0233               	subwf	printf@val,w
  1599  0114                     u1545:	
  1600  0114  1C03               	btfss	3,0
  1601  0115  291E               	goto	l1935
  1602                           
  1603                           ;doprnt.c: 1318: break;
  1604  0116  3001               	movlw	1
  1605  0117  00AC               	movwf	??_printf
  1606  0118  082C               	movf	??_printf,w
  1607  0119  07B6               	addwf	printf@c,f
  1608  011A  3004               	movlw	4
  1609  011B  0636               	xorwf	printf@c,w
  1610  011C  1D03               	btfss	3,2
  1611  011D  28FF               	goto	l1929
  1612  011E                     l1935:	
  1613                           
  1614                           ;doprnt.c: 1422: {
  1615                           ;doprnt.c: 1469: }
  1616                           ;doprnt.c: 1472: prec = c;
  1617  011E  0836               	movf	printf@c,w
  1618  011F  00AC               	movwf	??_printf
  1619  0120  082C               	movf	??_printf,w
  1620  0121  00B5               	movwf	printf@prec
  1621  0122                     l1943:	
  1622                           ;doprnt.c: 1474: while(prec--) {
  1623                           
  1624  0122  30FF               	movlw	255
  1625  0123  0020               	movlb	0	; select bank0
  1626  0124  00AC               	movwf	??_printf
  1627  0125  082C               	movf	??_printf,w
  1628  0126  07B5               	addwf	printf@prec,f
  1629  0127  0A35               	incf	printf@prec,w
  1630  0128  1903               	btfsc	3,2
  1631  0129  28BE               	goto	l1945
  1632                           
  1633                           ;doprnt.c: 1478: {
  1634                           ;doprnt.c: 1499: {
  1635                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1636  012A  0835               	movf	printf@prec,w
  1637  012B  00AC               	movwf	??_printf
  1638  012C  01AD               	clrf	??_printf+1
  1639  012D  35AC               	lslf	??_printf,f
  1640  012E  0DAD               	rlf	??_printf+1,f
  1641  012F  3068               	movlw	low (_hexpowers| (0+32768))
  1642  0130  072C               	addwf	??_printf,w
  1643  0131  0084               	movwf	4
  1644  0132  3084               	movlw	high (_hexpowers| (0+32768))
  1645  0133  3D2D               	addwfc	??_printf+1,w
  1646  0134  0085               	movwf	5
  1647  0135  3F00               	moviw [0]fsr0
  1648  0136  00F4               	movwf	___lwdiv@divisor
  1649  0137  3F01               	moviw [1]fsr0
  1650  0138  00F5               	movwf	___lwdiv@divisor+1
  1651  0139  0834               	movf	printf@val+1,w
  1652  013A  00F7               	movwf	___lwdiv@dividend+1
  1653  013B  0833               	movf	printf@val,w
  1654  013C  00F6               	movwf	___lwdiv@dividend
  1655  013D  2345               	fcall	___lwdiv
  1656  013E  0874               	movf	?___lwdiv,w
  1657  013F  390F               	andlw	15
  1658  0140  0020               	movlb	0	; select bank0
  1659  0141  00AE               	movwf	??_printf+2
  1660  0142  082E               	movf	??_printf+2,w
  1661  0143  00B1               	movwf	printf@idx
  1662                           
  1663                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  1664  0144  0831               	movf	printf@idx,w
  1665  0145  3E70               	addlw	low (STR_2| (0+32768))
  1666  0146  0084               	movwf	4
  1667  0147  3084               	movlw	high (STR_2| (0+32768))
  1668  0148  1803               	skipnc
  1669  0149  3E01               	addlw	1
  1670  014A  0085               	movwf	5
  1671  014B  0800               	movf	0,w	;code access
  1672  014C  00AC               	movwf	??_printf
  1673  014D  082C               	movf	??_printf,w
  1674  014E  00B6               	movwf	printf@c
  1675                           
  1676                           ;doprnt.c: 1508: }
  1677                           ;doprnt.c: 1523: }
  1678                           ;doprnt.c: 1524: (putch(c) );
  1679  014F  0836               	movf	printf@c,w
  1680  0150  24D2               	fcall	_putch
  1681  0151  2922               	goto	l1943
  1682  0152                     l337:	
  1683                           ;doprnt.c: 1540: return 0;
  1684                           ;	Return value of _printf is never used
  1685                           
  1686                           ;doprnt.c: 1525: }
  1687                           ;doprnt.c: 1533: }
  1688                           ;doprnt.c: 1535: alldone:
  1689                           
  1690  0152  0008               	return
  1691  0153                     __end_of_printf:	
  1692                           
  1693                           	psect	text2
  1694  04D2                     __ptext2:	
  1695 ;; *************** function _putch *****************
  1696 ;; Defined at:
  1697 ;;		line 76 in file "PIC_UART.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  c               1    wreg     unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  c               1    5[COMMON] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, pclath, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1
  1711 ;;      Params:         0       0       0
  1712 ;;      Locals:         1       0       0
  1713 ;;      Temps:          0       0       0
  1714 ;;      Totals:         1       0       0
  1715 ;;Total ram usage:        1 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    4
  1718 ;; This function calls:
  1719 ;;		_UART_Transmit
  1720 ;; This function is called by:
  1721 ;;		_printf
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           
  1726                           ;psect for function _putch
  1727  04D2                     _putch:	
  1728                           
  1729                           ;incstack = 0
  1730                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  1731                           ;putch@c stored from wreg
  1732  04D2  00F5               	movwf	putch@c
  1733                           
  1734                           ;PIC_UART.c: 78: UART_Transmit(c);
  1735  04D3  0875               	movf	putch@c,w
  1736  04D4  24C4               	fcall	_UART_Transmit
  1737  04D5  0008               	return
  1738  04D6                     __end_of_putch:	
  1739                           
  1740                           	psect	text3
  1741  04C4                     __ptext3:	
  1742 ;; *************** function _UART_Transmit *****************
  1743 ;; Defined at:
  1744 ;;		line 70 in file "PIC_UART.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  dt              1    wreg     unsigned char 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  dt              1    4[COMMON] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1
  1758 ;;      Params:         0       0       0
  1759 ;;      Locals:         1       0       0
  1760 ;;      Temps:          0       0       0
  1761 ;;      Totals:         1       0       0
  1762 ;;Total ram usage:        1 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    3
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_putch
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _UART_Transmit
  1774  04C4                     _UART_Transmit:	
  1775                           
  1776                           ;incstack = 0
  1777                           ; Regs used in _UART_Transmit: [wreg]
  1778                           ;UART_Transmit@dt stored from wreg
  1779  04C4  00F4               	movwf	UART_Transmit@dt
  1780  04C5                     l108:	
  1781                           ;PIC_UART.c: 72: while (TXIF == 0);
  1782                           
  1783  04C5  0020               	movlb	0	; select bank0
  1784  04C6  1E11               	btfss	17,4	;volatile
  1785  04C7  2CC5               	goto	l108
  1786                           
  1787                           ;PIC_UART.c: 73: TXREG = dt;
  1788  04C8  0874               	movf	UART_Transmit@dt,w
  1789  04C9  0023               	movlb	3	; select bank3
  1790  04CA  009A               	movwf	26	;volatile
  1791  04CB  0008               	return
  1792  04CC                     __end_of_UART_Transmit:	
  1793                           
  1794                           	psect	text4
  1795  0345                     __ptext4:	
  1796 ;; *************** function ___lwdiv *****************
  1797 ;; Defined at:
  1798 ;;		line 6 in file "/opt/microchip/xc8/v1.43/sources/common/lwdiv.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  divisor         2    4[COMMON] unsigned int 
  1801 ;;  dividend        2    6[COMMON] unsigned int 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  quotient        2    2[BANK0 ] unsigned int 
  1804 ;;  counter         1    1[BANK0 ] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2    4[COMMON] unsigned int 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1
  1814 ;;      Params:         4       0       0
  1815 ;;      Locals:         0       3       0
  1816 ;;      Temps:          0       1       0
  1817 ;;      Totals:         4       4       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_printf
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function ___lwdiv
  1830  0345                     ___lwdiv:	
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1834  0345  0020               	movlb	0	; select bank0
  1835  0346  01A2               	clrf	___lwdiv@quotient
  1836  0347  01A3               	clrf	___lwdiv@quotient+1
  1837  0348  0874               	movf	___lwdiv@divisor,w
  1838  0349  0475               	iorwf	___lwdiv@divisor+1,w
  1839  034A  1903               	btfsc	3,2
  1840  034B  2B75               	goto	l1845
  1841  034C  01A1               	clrf	___lwdiv@counter
  1842  034D  0AA1               	incf	___lwdiv@counter,f
  1843  034E                     l1833:	
  1844  034E  1BF5               	btfsc	___lwdiv@divisor+1,7
  1845  034F  2B5A               	goto	l1835
  1846  0350  3001               	movlw	1
  1847  0351                     u1405:	
  1848  0351  35F4               	lslf	___lwdiv@divisor,f
  1849  0352  0DF5               	rlf	___lwdiv@divisor+1,f
  1850  0353  0B89               	decfsz	9,f
  1851  0354  2B51               	goto	u1405
  1852  0355  3001               	movlw	1
  1853  0356  00A0               	movwf	??___lwdiv
  1854  0357  0820               	movf	??___lwdiv,w
  1855  0358  07A1               	addwf	___lwdiv@counter,f
  1856  0359  2B4E               	goto	l1833
  1857  035A                     l1835:	
  1858  035A  3001               	movlw	1
  1859  035B                     u1425:	
  1860  035B  35A2               	lslf	___lwdiv@quotient,f
  1861  035C  0DA3               	rlf	___lwdiv@quotient+1,f
  1862  035D  0B89               	decfsz	9,f
  1863  035E  2B5B               	goto	u1425
  1864  035F  0875               	movf	___lwdiv@divisor+1,w
  1865  0360  0277               	subwf	___lwdiv@dividend+1,w
  1866  0361  1D03               	skipz
  1867  0362  2B65               	goto	u1435
  1868  0363  0874               	movf	___lwdiv@divisor,w
  1869  0364  0276               	subwf	___lwdiv@dividend,w
  1870  0365                     u1435:	
  1871  0365  1C03               	skipc
  1872  0366  2B6C               	goto	l1841
  1873  0367  0874               	movf	___lwdiv@divisor,w
  1874  0368  02F6               	subwf	___lwdiv@dividend,f
  1875  0369  0875               	movf	___lwdiv@divisor+1,w
  1876  036A  3BF7               	subwfb	___lwdiv@dividend+1,f
  1877  036B  1422               	bsf	___lwdiv@quotient,0
  1878  036C                     l1841:	
  1879  036C  3001               	movlw	1
  1880  036D                     u1445:	
  1881  036D  36F5               	lsrf	___lwdiv@divisor+1,f
  1882  036E  0CF4               	rrf	___lwdiv@divisor,f
  1883  036F  0B89               	decfsz	9,f
  1884  0370  2B6D               	goto	u1445
  1885  0371  3001               	movlw	1
  1886  0372  02A1               	subwf	___lwdiv@counter,f
  1887  0373  1D03               	btfss	3,2
  1888  0374  2B5A               	goto	l1835
  1889  0375                     l1845:	
  1890  0375  0823               	movf	___lwdiv@quotient+1,w
  1891  0376  00F5               	movwf	?___lwdiv+1
  1892  0377  0822               	movf	___lwdiv@quotient,w
  1893  0378  00F4               	movwf	?___lwdiv
  1894  0379  0008               	return
  1895  037A                     __end_of___lwdiv:	
  1896                           
  1897                           	psect	text5
  1898  030D                     __ptext5:	
  1899 ;; *************** function _UART_Init *****************
  1900 ;; Defined at:
  1901 ;;		line 37 in file "PIC_UART.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  UART_Init_PO    2    5[COMMON] PTR FTN()void 
  1904 ;;		 -> UART_InitPort(1), 
  1905 ;;  brg             1    7[COMMON] enum E2433
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1
  1917 ;;      Params:         3       0       0
  1918 ;;      Locals:         0       0       0
  1919 ;;      Temps:          0       4       0
  1920 ;;      Totals:         3       4       0
  1921 ;;Total ram usage:        7 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    4
  1924 ;; This function calls:
  1925 ;;		_UART_InitPort
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _UART_Init
  1933  030D                     _UART_Init:	
  1934                           
  1935                           ;PIC_UART.c: 39: UART_Init_PORT();
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1939  030D  0876               	movf	UART_Init@UART_Init_PORT+1,w
  1940  030E  008A               	movwf	10
  1941  030F  0875               	movf	UART_Init@UART_Init_PORT,w
  1942  0310  000A               	callw
  1943  0311  3183               	pagesel	$
  1944                           
  1945                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1946  0312  3020               	movlw	32
  1947  0313  0023               	movlb	3	; select bank3
  1948  0314  009E               	movwf	30	;volatile
  1949                           
  1950                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1951  0315  3010               	movlw	16
  1952  0316  009D               	movwf	29	;volatile
  1953                           
  1954                           ;PIC_UART.c: 44: BRG16 = 1;
  1955  0317  159F               	bsf	31,3	;volatile
  1956                           
  1957                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1958  0318  0877               	movf	UART_Init@brg,w
  1959  0319  0020               	movlb	0	; select bank0
  1960  031A  00A0               	movwf	??_UART_Init
  1961  031B  01A1               	clrf	??_UART_Init+1
  1962  031C  35A0               	lslf	??_UART_Init,f
  1963  031D  0DA1               	rlf	??_UART_Init+1,f
  1964  031E  3081               	movlw	low (_baudtable| (0+32768))
  1965  031F  0720               	addwf	??_UART_Init,w
  1966  0320  0084               	movwf	4
  1967  0321  3084               	movlw	high (_baudtable| (0+32768))
  1968  0322  3D21               	addwfc	??_UART_Init+1,w
  1969  0323  0085               	movwf	5
  1970  0324  0800               	movf	0,w	;code access
  1971  0325  0023               	movlb	3	; select bank3
  1972  0326  009B               	movwf	27	;volatile
  1973                           
  1974                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1975  0327  0877               	movf	UART_Init@brg,w
  1976  0328  0020               	movlb	0	; select bank0
  1977  0329  00A0               	movwf	??_UART_Init
  1978  032A  01A1               	clrf	??_UART_Init+1
  1979  032B  35A0               	lslf	??_UART_Init,f
  1980  032C  0DA1               	rlf	??_UART_Init+1,f
  1981  032D  3081               	movlw	low (_baudtable| (0+32768))
  1982  032E  0720               	addwf	??_UART_Init,w
  1983  032F  0084               	movwf	4
  1984  0330  3084               	movlw	high (_baudtable| (0+32768))
  1985  0331  3D21               	addwfc	??_UART_Init+1,w
  1986  0332  0085               	movwf	5
  1987  0333  3F00               	moviw [0]fsr0
  1988  0334  00A2               	movwf	??_UART_Init+2
  1989  0335  3F01               	moviw [1]fsr0
  1990  0336  00A3               	movwf	??_UART_Init+3
  1991  0337  0823               	movf	??_UART_Init+3,w
  1992  0338  0023               	movlb	3	; select bank3
  1993  0339  009C               	movwf	28	;volatile
  1994                           
  1995                           ;PIC_UART.c: 48: RCIF = 0;
  1996  033A  0020               	movlb	0	; select bank0
  1997  033B  1291               	bcf	17,5	;volatile
  1998                           
  1999                           ;PIC_UART.c: 49: RCIE = 1;
  2000  033C  0021               	movlb	1	; select bank1
  2001  033D  1691               	bsf	17,5	;volatile
  2002                           
  2003                           ;PIC_UART.c: 50: PEIE = 1;
  2004  033E  170B               	bsf	11,6	;volatile
  2005                           
  2006                           ;PIC_UART.c: 51: GIE = 1;
  2007  033F  178B               	bsf	11,7	;volatile
  2008                           
  2009                           ;PIC_UART.c: 53: SPEN = 1;
  2010  0340  0023               	movlb	3	; select bank3
  2011  0341  179D               	bsf	29,7	;volatile
  2012                           
  2013                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  2014  0342  01F9               	clrf	_UART_Buffer_inptr
  2015                           
  2016                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  2017  0343  01F8               	clrf	_UART_Buffer_outptr
  2018  0344  0008               	return
  2019  0345                     __end_of_UART_Init:	
  2020                           
  2021                           	psect	text6
  2022  0491                     __ptext6:	
  2023 ;; *************** function _UART_InitPort *****************
  2024 ;; Defined at:
  2025 ;;		line 57 in file "main.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1
  2039 ;;      Params:         0       0       0
  2040 ;;      Locals:         0       0       0
  2041 ;;      Temps:          1       0       0
  2042 ;;      Totals:         1       0       0
  2043 ;;Total ram usage:        1 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    3
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_main
  2050 ;;		_UART_Init
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _UART_InitPort
  2056  0491                     _UART_InitPort:	
  2057                           
  2058                           ;main.c: 59: TRISA &= ~(1<<4);
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in _UART_InitPort: [wreg+status,2+status,0]
  2062  0491  30EF               	movlw	239
  2063  0492  00F4               	movwf	??_UART_InitPort
  2064  0493  0874               	movf	??_UART_InitPort,w
  2065  0494  0021               	movlb	1	; select bank1
  2066  0495  058C               	andwf	12,f	;volatile
  2067                           
  2068                           ;main.c: 60: ANSELA &= ~(1<<4);
  2069  0496  30EF               	movlw	239
  2070  0497  00F4               	movwf	??_UART_InitPort
  2071  0498  0874               	movf	??_UART_InitPort,w
  2072  0499  0023               	movlb	3	; select bank3
  2073  049A  058C               	andwf	12,f	;volatile
  2074                           
  2075                           ;main.c: 61: APFCON |= (1<<2);
  2076  049B  0022               	movlb	2	; select bank2
  2077  049C  151D               	bsf	29,2	;volatile
  2078                           
  2079                           ;main.c: 62: APFCON |= (1<<7);
  2080  049D  179D               	bsf	29,7	;volatile
  2081  049E  0008               	return
  2082  049F                     __end_of_UART_InitPort:	
  2083                           
  2084                           	psect	text7
  2085  03A1                     __ptext7:	
  2086 ;; *************** function _MPU6050_Read_MultiData *****************
  2087 ;; Defined at:
  2088 ;;		line 27 in file "MPU6050.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  reg             1    wreg     unsigned char 
  2091 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  2092 ;;		 -> main@accel_t_gyro(14), 
  2093 ;;  size            1   13[BANK0 ] unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  reg             1   19[BANK0 ] unsigned char 
  2096 ;;  result          1   18[BANK0 ] char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      char 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1
  2106 ;;      Params:         0       2       0
  2107 ;;      Locals:         0       2       0
  2108 ;;      Temps:          0       4       0
  2109 ;;      Totals:         0       8       0
  2110 ;;Total ram usage:        8 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    5
  2113 ;; This function calls:
  2114 ;;		_I2C_Receive
  2115 ;;		_I2C_Transmit
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _MPU6050_Read_MultiData
  2123  03A1                     _MPU6050_Read_MultiData:	
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in _MPU6050_Read_MultiData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2127                           ;MPU6050_Read_MultiData@reg stored from wreg
  2128  03A1  0020               	movlb	0	; select bank0
  2129  03A2  00B3               	movwf	MPU6050_Read_MultiData@reg
  2130                           
  2131                           ;MPU6050.c: 29: int8_t result = 0;
  2132  03A3  01B2               	clrf	MPU6050_Read_MultiData@result
  2133                           
  2134                           ;MPU6050.c: 31: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  2135  03A4  3068               	movlw	104
  2136  03A5  00AE               	movwf	??_MPU6050_Read_MultiData
  2137  03A6  082E               	movf	??_MPU6050_Read_MultiData,w
  2138  03A7  00A4               	movwf	I2C_Transmit@address
  2139  03A8  3033               	movlw	(low (MPU6050_Read_MultiData@reg| 0))& (0+255)
  2140  03A9  00AF               	movwf	??_MPU6050_Read_MultiData+1
  2141  03AA  082F               	movf	??_MPU6050_Read_MultiData+1,w
  2142  03AB  00A5               	movwf	I2C_Transmit@pData
  2143  03AC  01A6               	clrf	I2C_Transmit@size
  2144  03AD  0AA6               	incf	I2C_Transmit@size,f
  2145  03AE  3000               	movlw	0
  2146  03AF  2432               	fcall	_I2C_Transmit
  2147  03B0  0020               	movlb	0	; select bank0
  2148  03B1  00B0               	movwf	??_MPU6050_Read_MultiData+2
  2149  03B2  0830               	movf	??_MPU6050_Read_MultiData+2,w
  2150  03B3  07B2               	addwf	MPU6050_Read_MultiData@result,f
  2151                           
  2152                           ;MPU6050.c: 33: result += I2C_Receive(I2C1_MODULE,0x68,pData,size);
  2153  03B4  3068               	movlw	104
  2154  03B5  00AE               	movwf	??_MPU6050_Read_MultiData
  2155  03B6  082E               	movf	??_MPU6050_Read_MultiData,w
  2156  03B7  00A4               	movwf	I2C_Receive@address
  2157  03B8  082C               	movf	MPU6050_Read_MultiData@pData,w
  2158  03B9  00AF               	movwf	??_MPU6050_Read_MultiData+1
  2159  03BA  082F               	movf	??_MPU6050_Read_MultiData+1,w
  2160  03BB  00A5               	movwf	I2C_Receive@pData
  2161  03BC  082D               	movf	MPU6050_Read_MultiData@size,w
  2162  03BD  00B0               	movwf	??_MPU6050_Read_MultiData+2
  2163  03BE  0830               	movf	??_MPU6050_Read_MultiData+2,w
  2164  03BF  00A6               	movwf	I2C_Receive@size
  2165  03C0  3000               	movlw	0
  2166  03C1  244D               	fcall	_I2C_Receive
  2167  03C2  0020               	movlb	0	; select bank0
  2168  03C3  00B1               	movwf	??_MPU6050_Read_MultiData+3
  2169  03C4  0831               	movf	??_MPU6050_Read_MultiData+3,w
  2170  03C5  07B2               	addwf	MPU6050_Read_MultiData@result,f
  2171  03C6  0008               	return
  2172  03C7                     __end_of_MPU6050_Read_MultiData:	
  2173                           ;MPU6050.c: 35: return result;
  2174                           ;	Return value of _MPU6050_Read_MultiData is never used
  2175                           
  2176                           
  2177                           	psect	text8
  2178  0411                     __ptext8:	
  2179 ;; *************** function _MPU6050_Init *****************
  2180 ;; Defined at:
  2181 ;;		line 38 in file "MPU6050.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  addr            1   22[BANK0 ] unsigned char 
  2186 ;;  data            1   21[BANK0 ] unsigned char 
  2187 ;;  result          1   20[BANK0 ] char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      char 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1
  2197 ;;      Params:         0       0       0
  2198 ;;      Locals:         0       3       0
  2199 ;;      Temps:          0       2       0
  2200 ;;      Totals:         0       5       0
  2201 ;;Total ram usage:        5 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    6
  2204 ;; This function calls:
  2205 ;;		_MPU6050_Read_Data
  2206 ;;		_MPU6050_Write_Data
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _MPU6050_Init
  2214  0411                     _MPU6050_Init:	
  2215                           
  2216                           ;MPU6050.c: 40: int8_t result;
  2217                           ;MPU6050.c: 42: uint8_t addr;
  2218                           ;MPU6050.c: 43: result = MPU6050_Read_Data(0x75,&addr);
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _MPU6050_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2222  0411  3036               	movlw	(low (MPU6050_Init@addr| 0))& (0+255)
  2223  0412  0020               	movlb	0	; select bank0
  2224  0413  00B2               	movwf	??_MPU6050_Init
  2225  0414  0832               	movf	??_MPU6050_Init,w
  2226  0415  00AC               	movwf	MPU6050_Read_Data@pData
  2227  0416  3075               	movlw	117
  2228  0417  23EC               	fcall	_MPU6050_Read_Data
  2229  0418  0020               	movlb	0	; select bank0
  2230  0419  00B3               	movwf	??_MPU6050_Init+1
  2231  041A  0833               	movf	??_MPU6050_Init+1,w
  2232  041B  00B4               	movwf	MPU6050_Init@result
  2233                           
  2234                           ;MPU6050.c: 44: if((addr>>1)!=0x68) return -1;
  2235  041C  0836               	movf	MPU6050_Init@addr,w
  2236  041D  00B2               	movwf	??_MPU6050_Init
  2237  041E  3001               	movlw	1
  2238  041F                     u1505:	
  2239  041F  36B2               	lsrf	??_MPU6050_Init,f
  2240  0420  0B89               	decfsz	9,f
  2241  0421  2C1F               	goto	u1505
  2242  0422  3068               	movlw	104
  2243  0423  0632               	xorwf	??_MPU6050_Init,w
  2244  0424  1D03               	btfss	3,2
  2245  0425  0008               	return
  2246                           
  2247                           ;MPU6050.c: 46: uint8_t data = 0x00;
  2248                           
  2249                           ;	Return value of _MPU6050_Init is never used
  2250  0426  01B5               	clrf	MPU6050_Init@data
  2251                           
  2252                           ;MPU6050.c: 47: result += MPU6050_Write_Data(0x6B,data);
  2253  0427  0835               	movf	MPU6050_Init@data,w
  2254  0428  00B2               	movwf	??_MPU6050_Init
  2255  0429  0832               	movf	??_MPU6050_Init,w
  2256  042A  00AC               	movwf	MPU6050_Write_Data@pData
  2257  042B  306B               	movlw	107
  2258  042C  23C7               	fcall	_MPU6050_Write_Data
  2259  042D  0020               	movlb	0	; select bank0
  2260  042E  00B3               	movwf	??_MPU6050_Init+1
  2261  042F  0833               	movf	??_MPU6050_Init+1,w
  2262  0430  07B4               	addwf	MPU6050_Init@result,f
  2263  0431  0008               	return
  2264  0432                     __end_of_MPU6050_Init:	
  2265                           ;MPU6050.c: 49: return result;
  2266                           ;	Return value of _MPU6050_Init is never used
  2267                           
  2268                           
  2269                           	psect	text9
  2270  03C7                     __ptext9:	
  2271 ;; *************** function _MPU6050_Write_Data *****************
  2272 ;; Defined at:
  2273 ;;		line 5 in file "MPU6050.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  reg             1    wreg     unsigned char 
  2276 ;;  pData           1   12[BANK0 ] unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  reg             1   16[BANK0 ] unsigned char 
  2279 ;;  result          1   17[BANK0 ] char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      char 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1
  2289 ;;      Params:         0       1       0
  2290 ;;      Locals:         0       2       0
  2291 ;;      Temps:          0       3       0
  2292 ;;      Totals:         0       6       0
  2293 ;;Total ram usage:        6 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    5
  2296 ;; This function calls:
  2297 ;;		_I2C_Transmit
  2298 ;; This function is called by:
  2299 ;;		_MPU6050_Init
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _MPU6050_Write_Data
  2305  03C7                     _MPU6050_Write_Data:	
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _MPU6050_Write_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2309                           ;MPU6050_Write_Data@reg stored from wreg
  2310  03C7  0020               	movlb	0	; select bank0
  2311  03C8  00B0               	movwf	MPU6050_Write_Data@reg
  2312                           
  2313                           ;MPU6050.c: 7: int8_t result = 0;
  2314  03C9  01B1               	clrf	MPU6050_Write_Data@result
  2315                           
  2316                           ;MPU6050.c: 9: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  2317  03CA  3068               	movlw	104
  2318  03CB  00AD               	movwf	??_MPU6050_Write_Data
  2319  03CC  082D               	movf	??_MPU6050_Write_Data,w
  2320  03CD  00A4               	movwf	I2C_Transmit@address
  2321  03CE  3030               	movlw	(low (MPU6050_Write_Data@reg| 0))& (0+255)
  2322  03CF  00AE               	movwf	??_MPU6050_Write_Data+1
  2323  03D0  082E               	movf	??_MPU6050_Write_Data+1,w
  2324  03D1  00A5               	movwf	I2C_Transmit@pData
  2325  03D2  01A6               	clrf	I2C_Transmit@size
  2326  03D3  0AA6               	incf	I2C_Transmit@size,f
  2327  03D4  3000               	movlw	0
  2328  03D5  2432               	fcall	_I2C_Transmit
  2329  03D6  0020               	movlb	0	; select bank0
  2330  03D7  00AF               	movwf	??_MPU6050_Write_Data+2
  2331  03D8  082F               	movf	??_MPU6050_Write_Data+2,w
  2332  03D9  07B1               	addwf	MPU6050_Write_Data@result,f
  2333                           
  2334                           ;MPU6050.c: 11: result += I2C_Transmit(I2C1_MODULE,0x68,&pData,1);
  2335  03DA  3068               	movlw	104
  2336  03DB  00AD               	movwf	??_MPU6050_Write_Data
  2337  03DC  082D               	movf	??_MPU6050_Write_Data,w
  2338  03DD  00A4               	movwf	I2C_Transmit@address
  2339  03DE  302C               	movlw	(low (MPU6050_Write_Data@pData| 0))& (0+255)
  2340  03DF  00AE               	movwf	??_MPU6050_Write_Data+1
  2341  03E0  082E               	movf	??_MPU6050_Write_Data+1,w
  2342  03E1  00A5               	movwf	I2C_Transmit@pData
  2343  03E2  01A6               	clrf	I2C_Transmit@size
  2344  03E3  0AA6               	incf	I2C_Transmit@size,f
  2345  03E4  3000               	movlw	0
  2346  03E5  2432               	fcall	_I2C_Transmit
  2347  03E6  0020               	movlb	0	; select bank0
  2348  03E7  00AF               	movwf	??_MPU6050_Write_Data+2
  2349  03E8  082F               	movf	??_MPU6050_Write_Data+2,w
  2350  03E9  07B1               	addwf	MPU6050_Write_Data@result,f
  2351                           
  2352                           ;MPU6050.c: 13: return result;
  2353  03EA  0831               	movf	MPU6050_Write_Data@result,w
  2354  03EB  0008               	return
  2355  03EC                     __end_of_MPU6050_Write_Data:	
  2356                           
  2357                           	psect	text10
  2358  03EC                     __ptext10:	
  2359 ;; *************** function _MPU6050_Read_Data *****************
  2360 ;; Defined at:
  2361 ;;		line 16 in file "MPU6050.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  reg             1    wreg     unsigned char 
  2364 ;;  pData           1   12[BANK0 ] PTR unsigned char 
  2365 ;;		 -> MPU6050_Init@addr(1), 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  reg             1   16[BANK0 ] unsigned char 
  2368 ;;  result          1   17[BANK0 ] char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      char 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1
  2378 ;;      Params:         0       1       0
  2379 ;;      Locals:         0       2       0
  2380 ;;      Temps:          0       3       0
  2381 ;;      Totals:         0       6       0
  2382 ;;Total ram usage:        6 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    5
  2385 ;; This function calls:
  2386 ;;		_I2C_Receive
  2387 ;;		_I2C_Transmit
  2388 ;; This function is called by:
  2389 ;;		_MPU6050_Init
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           
  2394                           ;psect for function _MPU6050_Read_Data
  2395  03EC                     _MPU6050_Read_Data:	
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _MPU6050_Read_Data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2399                           ;MPU6050_Read_Data@reg stored from wreg
  2400  03EC  0020               	movlb	0	; select bank0
  2401  03ED  00B0               	movwf	MPU6050_Read_Data@reg
  2402                           
  2403                           ;MPU6050.c: 18: int8_t result = 0;
  2404  03EE  01B1               	clrf	MPU6050_Read_Data@result
  2405                           
  2406                           ;MPU6050.c: 20: result += I2C_Transmit(I2C1_MODULE,0x68,&reg,1);
  2407  03EF  3068               	movlw	104
  2408  03F0  00AD               	movwf	??_MPU6050_Read_Data
  2409  03F1  082D               	movf	??_MPU6050_Read_Data,w
  2410  03F2  00A4               	movwf	I2C_Transmit@address
  2411  03F3  3030               	movlw	(low (MPU6050_Read_Data@reg| 0))& (0+255)
  2412  03F4  00AE               	movwf	??_MPU6050_Read_Data+1
  2413  03F5  082E               	movf	??_MPU6050_Read_Data+1,w
  2414  03F6  00A5               	movwf	I2C_Transmit@pData
  2415  03F7  01A6               	clrf	I2C_Transmit@size
  2416  03F8  0AA6               	incf	I2C_Transmit@size,f
  2417  03F9  3000               	movlw	0
  2418  03FA  2432               	fcall	_I2C_Transmit
  2419  03FB  0020               	movlb	0	; select bank0
  2420  03FC  00AF               	movwf	??_MPU6050_Read_Data+2
  2421  03FD  082F               	movf	??_MPU6050_Read_Data+2,w
  2422  03FE  07B1               	addwf	MPU6050_Read_Data@result,f
  2423                           
  2424                           ;MPU6050.c: 22: result += I2C_Receive(I2C1_MODULE,0x68,pData,1);
  2425  03FF  3068               	movlw	104
  2426  0400  00AD               	movwf	??_MPU6050_Read_Data
  2427  0401  082D               	movf	??_MPU6050_Read_Data,w
  2428  0402  00A4               	movwf	I2C_Receive@address
  2429  0403  082C               	movf	MPU6050_Read_Data@pData,w
  2430  0404  00AE               	movwf	??_MPU6050_Read_Data+1
  2431  0405  082E               	movf	??_MPU6050_Read_Data+1,w
  2432  0406  00A5               	movwf	I2C_Receive@pData
  2433  0407  01A6               	clrf	I2C_Receive@size
  2434  0408  0AA6               	incf	I2C_Receive@size,f
  2435  0409  3000               	movlw	0
  2436  040A  244D               	fcall	_I2C_Receive
  2437  040B  0020               	movlb	0	; select bank0
  2438  040C  00AF               	movwf	??_MPU6050_Read_Data+2
  2439  040D  082F               	movf	??_MPU6050_Read_Data+2,w
  2440  040E  07B1               	addwf	MPU6050_Read_Data@result,f
  2441                           
  2442                           ;MPU6050.c: 24: return result;
  2443  040F  0831               	movf	MPU6050_Read_Data@result,w
  2444  0410  0008               	return
  2445  0411                     __end_of_MPU6050_Read_Data:	
  2446                           
  2447                           	psect	text11
  2448  0432                     __ptext11:	
  2449 ;; *************** function _I2C_Transmit *****************
  2450 ;; Defined at:
  2451 ;;		line 5 in file "PIC_I2C.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  I2Cx            1    wreg     enum E2417
  2454 ;;  address         1    4[BANK0 ] unsigned char 
  2455 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  2456 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@pData(1), MPU6050_Write_Data@reg(1),
      + 
  2457 ;;  size            1    6[BANK0 ] unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  I2Cx            1   10[BANK0 ] enum E2417
  2460 ;;  result          1   11[BANK0 ] char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      char 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1
  2470 ;;      Params:         0       3       0
  2471 ;;      Locals:         0       2       0
  2472 ;;      Temps:          0       3       0
  2473 ;;      Totals:         0       8       0
  2474 ;;Total ram usage:        8 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    4
  2477 ;; This function calls:
  2478 ;;		_I2C1_Transmit
  2479 ;; This function is called by:
  2480 ;;		_MPU6050_Write_Data
  2481 ;;		_MPU6050_Read_Data
  2482 ;;		_MPU6050_Read_MultiData
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function _I2C_Transmit
  2488  0432                     _I2C_Transmit:	
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in _I2C_Transmit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2492                           ;I2C_Transmit@I2Cx stored from wreg
  2493  0432  0020               	movlb	0	; select bank0
  2494  0433  00AA               	movwf	I2C_Transmit@I2Cx
  2495                           
  2496                           ;PIC_I2C.c: 7: int8_t result = -1;
  2497  0434  01AB               	clrf	I2C_Transmit@result
  2498  0435  03AB               	decf	I2C_Transmit@result,f
  2499                           
  2500                           ;PIC_I2C.c: 9: switch(I2Cx)
  2501  0436  2C46               	goto	l1785
  2502  0437                     l1781:	
  2503                           ;PIC_I2C.c: 10: {
  2504                           ;PIC_I2C.c: 11: case I2C1_MODULE:
  2505                           
  2506                           
  2507                           ;PIC_I2C.c: 12: result = I2C1_Transmit(address,pData,size);
  2508  0437  0825               	movf	I2C_Transmit@pData,w
  2509  0438  00A7               	movwf	??_I2C_Transmit
  2510  0439  0827               	movf	??_I2C_Transmit,w
  2511  043A  00F4               	movwf	I2C1_Transmit@pData
  2512  043B  0826               	movf	I2C_Transmit@size,w
  2513  043C  00A8               	movwf	??_I2C_Transmit+1
  2514  043D  0828               	movf	??_I2C_Transmit+1,w
  2515  043E  00F5               	movwf	I2C1_Transmit@size
  2516  043F  0824               	movf	I2C_Transmit@address,w
  2517  0440  2153               	fcall	_I2C1_Transmit
  2518  0441  0020               	movlb	0	; select bank0
  2519  0442  00A9               	movwf	??_I2C_Transmit+2
  2520  0443  0829               	movf	??_I2C_Transmit+2,w
  2521  0444  00AB               	movwf	I2C_Transmit@result
  2522                           
  2523                           ;PIC_I2C.c: 14: }
  2524                           
  2525                           ;PIC_I2C.c: 13: break;
  2526  0445  2C4B               	goto	l1787
  2527  0446                     l1785:	
  2528  0446  082A               	movf	I2C_Transmit@I2Cx,w
  2529                           
  2530                           ; Switch size 1, requested type "space"
  2531                           ; Number of cases is 1, Range of values is 0 to 0
  2532                           ; switch strategies available:
  2533                           ; Name         Instructions Cycles
  2534                           ; simple_byte            4     3 (average)
  2535                           ; direct_byte            8     6 (fixed)
  2536                           ; jumptable            260     6 (fixed)
  2537                           ;	Chosen strategy is simple_byte
  2538  0447  3A00               	xorlw	0	; case 0
  2539  0448  1903               	skipnz
  2540  0449  2C37               	goto	l1781
  2541  044A  2C4B               	goto	l1787
  2542  044B                     l1787:	
  2543                           
  2544                           ;PIC_I2C.c: 15: return result;
  2545  044B  082B               	movf	I2C_Transmit@result,w
  2546  044C  0008               	return
  2547  044D                     __end_of_I2C_Transmit:	
  2548                           
  2549                           	psect	text12
  2550  0153                     __ptext12:	
  2551 ;; *************** function _I2C1_Transmit *****************
  2552 ;; Defined at:
  2553 ;;		line 53 in file "PIC_I2C1.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  address         1    wreg     unsigned char 
  2556 ;;  pData           1    4[COMMON] PTR unsigned char 
  2557 ;;		 -> MPU6050_Read_MultiData@reg(1), MPU6050_Read_Data@reg(1), MPU6050_Write_Data@pData(1), MPU6050_Write_Data@reg(1),
      + 
  2558 ;;  size            1    5[COMMON] unsigned char 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  address         1    0[BANK0 ] unsigned char 
  2561 ;;  i               1    2[BANK0 ] unsigned char 
  2562 ;;  i               1    1[BANK0 ] unsigned char 
  2563 ;;  result          1    3[BANK0 ] char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      char 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1
  2573 ;;      Params:         2       0       0
  2574 ;;      Locals:         0       4       0
  2575 ;;      Temps:          2       0       0
  2576 ;;      Totals:         4       4       0
  2577 ;;Total ram usage:        8 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    3
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_I2C_Transmit
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _I2C1_Transmit
  2589  0153                     _I2C1_Transmit:	
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _I2C1_Transmit: [wreg-fsr1h+status,2+status,0]
  2593                           ;I2C1_Transmit@address stored from wreg
  2594  0153  0020               	movlb	0	; select bank0
  2595  0154  00A0               	movwf	I2C1_Transmit@address
  2596                           
  2597                           ;PIC_I2C1.c: 55: int8_t result;
  2598                           ;PIC_I2C1.c: 57: switch(I2C1_Config.Mode)
  2599  0155  29D1               	goto	l1723
  2600  0156                     l1679:	
  2601                           ;PIC_I2C1.c: 60: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2602                           
  2603                           ;PIC_I2C1.c: 58: {
  2604                           ;PIC_I2C1.c: 59: case I2C_MODE_MASTER:
  2605                           
  2606  0156  3005               	movlw	5
  2607  0157  0024               	movlb	4	; select bank4
  2608  0158  0514               	andwf	20,w	;volatile
  2609  0159  00F6               	movwf	??_I2C1_Transmit
  2610  015A  0816               	movf	22,w	;volatile
  2611  015B  391F               	andlw	31
  2612  015C  0476               	iorwf	??_I2C1_Transmit,w
  2613  015D  1D03               	btfss	3,2
  2614  015E  2956               	goto	l1679
  2615                           
  2616                           ;PIC_I2C1.c: 61: SSPCON2bits.SEN = 1;
  2617  015F  1416               	bsf	22,0	;volatile
  2618  0160                     l1681:	
  2619                           ;PIC_I2C1.c: 63: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2620                           
  2621  0160  3005               	movlw	5
  2622  0161  0514               	andwf	20,w	;volatile
  2623  0162  00F6               	movwf	??_I2C1_Transmit
  2624  0163  0816               	movf	22,w	;volatile
  2625  0164  391F               	andlw	31
  2626  0165  0476               	iorwf	??_I2C1_Transmit,w
  2627  0166  1D03               	btfss	3,2
  2628  0167  2960               	goto	l1681
  2629                           
  2630                           ;PIC_I2C1.c: 64: SSPBUF = address << 1;
  2631  0168  0020               	movlb	0	; select bank0
  2632  0169  3520               	lslf	I2C1_Transmit@address,w
  2633  016A  0024               	movlb	4	; select bank4
  2634  016B  0091               	movwf	17	;volatile
  2635  016C                     l229:	
  2636                           ;PIC_I2C1.c: 65: while(SSPSTATbits.R_nW);
  2637                           
  2638  016C  1914               	btfsc	20,2	;volatile
  2639  016D  296C               	goto	l229
  2640                           
  2641                           ;PIC_I2C1.c: 67: result = SSPCON2bits.ACKSTAT;
  2642  016E  3000               	movlw	0
  2643  016F  1B16               	btfsc	22,6	;volatile
  2644  0170  3001               	movlw	1
  2645  0171  0020               	movlb	0	; select bank0
  2646  0172  00A3               	movwf	I2C1_Transmit@result
  2647                           
  2648                           ;PIC_I2C1.c: 68: if (!result)
  2649  0173  0823               	movf	I2C1_Transmit@result,w
  2650  0174  1D03               	btfss	3,2
  2651  0175  29A1               	goto	l1705
  2652                           
  2653                           ;PIC_I2C1.c: 69: {
  2654                           ;PIC_I2C1.c: 70: for(uint8_t i=0;i<size;i++)
  2655  0176  01A1               	clrf	I2C1_Transmit@i
  2656  0177  297C               	goto	l1703
  2657  0178                     l1701:	
  2658                           ;PIC_I2C1.c: 80: break;
  2659                           
  2660  0178  3001               	movlw	1
  2661  0179  00F6               	movwf	??_I2C1_Transmit
  2662  017A  0876               	movf	??_I2C1_Transmit,w
  2663  017B  07A1               	addwf	I2C1_Transmit@i,f
  2664  017C                     l1703:	
  2665  017C  0875               	movf	I2C1_Transmit@size,w
  2666  017D  0221               	subwf	I2C1_Transmit@i,w
  2667  017E  1803               	btfsc	3,0
  2668  017F  29A1               	goto	l1705
  2669  0180                     l1691:	
  2670                           ;PIC_I2C1.c: 71: {
  2671                           ;PIC_I2C1.c: 72: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2672                           
  2673  0180  3005               	movlw	5
  2674  0181  0024               	movlb	4	; select bank4
  2675  0182  0514               	andwf	20,w	;volatile
  2676  0183  00F6               	movwf	??_I2C1_Transmit
  2677  0184  0816               	movf	22,w	;volatile
  2678  0185  391F               	andlw	31
  2679  0186  0476               	iorwf	??_I2C1_Transmit,w
  2680  0187  1D03               	btfss	3,2
  2681  0188  2980               	goto	l1691
  2682                           
  2683                           ;PIC_I2C1.c: 73: SSPBUF = *(pData+i);
  2684  0189  0020               	movlb	0	; select bank0
  2685  018A  0821               	movf	I2C1_Transmit@i,w
  2686  018B  0774               	addwf	I2C1_Transmit@pData,w
  2687  018C  00F6               	movwf	??_I2C1_Transmit
  2688  018D  0876               	movf	??_I2C1_Transmit,w
  2689  018E  0086               	movwf	6
  2690  018F  0187               	clrf	7
  2691  0190  0801               	movf	1,w
  2692  0191  0024               	movlb	4	; select bank4
  2693  0192  0091               	movwf	17	;volatile
  2694  0193                     l238:	
  2695                           ;PIC_I2C1.c: 74: while(SSPSTATbits.R_nW);
  2696                           
  2697  0193  1914               	btfsc	20,2	;volatile
  2698  0194  2993               	goto	l238
  2699                           
  2700                           ;PIC_I2C1.c: 76: result = SSPCON2bits.ACKSTAT;
  2701  0195  3000               	movlw	0
  2702  0196  1B16               	btfsc	22,6	;volatile
  2703  0197  3001               	movlw	1
  2704  0198  0020               	movlb	0	; select bank0
  2705  0199  00A3               	movwf	I2C1_Transmit@result
  2706                           
  2707                           ;PIC_I2C1.c: 77: if (result)
  2708  019A  0823               	movf	I2C1_Transmit@result,w
  2709  019B  1903               	btfsc	3,2
  2710  019C  2978               	goto	l1701
  2711                           
  2712                           ;PIC_I2C1.c: 78: {
  2713                           ;PIC_I2C1.c: 79: result = 2;
  2714  019D  3002               	movlw	2
  2715  019E  00F6               	movwf	??_I2C1_Transmit
  2716  019F  0876               	movf	??_I2C1_Transmit,w
  2717  01A0  00A3               	movwf	I2C1_Transmit@result
  2718  01A1                     l1705:	
  2719                           ;PIC_I2C1.c: 81: }
  2720                           ;PIC_I2C1.c: 82: }
  2721                           ;PIC_I2C1.c: 83: }
  2722                           ;PIC_I2C1.c: 85: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2723                           
  2724  01A1  3005               	movlw	5
  2725  01A2  0024               	movlb	4	; select bank4
  2726  01A3  0514               	andwf	20,w	;volatile
  2727  01A4  00F6               	movwf	??_I2C1_Transmit
  2728  01A5  0816               	movf	22,w	;volatile
  2729  01A6  391F               	andlw	31
  2730  01A7  0476               	iorwf	??_I2C1_Transmit,w
  2731  01A8  1D03               	btfss	3,2
  2732  01A9  29A1               	goto	l1705
  2733                           
  2734                           ;PIC_I2C1.c: 86: SSPCON2bits.PEN = 1;
  2735  01AA  1516               	bsf	22,2	;volatile
  2736                           
  2737                           ;PIC_I2C1.c: 87: break;
  2738  01AB  29D9               	goto	l1725
  2739  01AC                     l247:	
  2740                           ;PIC_I2C1.c: 89: case I2C_MODE_SLAVE:
  2741                           
  2742                           
  2743                           ;PIC_I2C1.c: 90: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  2744  01AC  0024               	movlb	4	; select bank4
  2745  01AD  1D94               	btfss	20,3	;volatile
  2746  01AE  1E14               	btfss	20,4	;volatile
  2747  01AF  29CE               	goto	l1719
  2748                           
  2749                           ;PIC_I2C1.c: 91: {
  2750                           ;PIC_I2C1.c: 92: for(uint8_t i = 0;i<size;i++)
  2751  01B0  0020               	movlb	0	; select bank0
  2752  01B1  01A2               	clrf	I2C1_Transmit@i_449
  2753  01B2                     l1715:	
  2754  01B2  0875               	movf	I2C1_Transmit@size,w
  2755  01B3  0222               	subwf	I2C1_Transmit@i_449,w
  2756  01B4  1803               	btfsc	3,0
  2757  01B5  29C9               	goto	l1717
  2758                           
  2759                           ;PIC_I2C1.c: 93: I2C1_Config.SlaveTransmitBuff[i] = pData[i];
  2760  01B6  0822               	movf	I2C1_Transmit@i_449,w
  2761  01B7  0774               	addwf	I2C1_Transmit@pData,w
  2762  01B8  00F6               	movwf	??_I2C1_Transmit
  2763  01B9  0876               	movf	??_I2C1_Transmit,w
  2764  01BA  0086               	movwf	6
  2765  01BB  0187               	clrf	7
  2766  01BC  0801               	movf	1,w
  2767  01BD  00F7               	movwf	??_I2C1_Transmit+1
  2768  01BE  0822               	movf	I2C1_Transmit@i_449,w
  2769  01BF  3E56               	addlw	(low (_I2C1_Config| 0))& (0+255)
  2770  01C0  0086               	movwf	6
  2771  01C1  0187               	clrf	7
  2772  01C2  0877               	movf	??_I2C1_Transmit+1,w
  2773  01C3  0081               	movwf	1
  2774  01C4  3001               	movlw	1
  2775  01C5  00F6               	movwf	??_I2C1_Transmit
  2776  01C6  0876               	movf	??_I2C1_Transmit,w
  2777  01C7  07A2               	addwf	I2C1_Transmit@i_449,f
  2778  01C8  29B2               	goto	l1715
  2779  01C9                     l1717:	
  2780                           
  2781                           ;PIC_I2C1.c: 94: result = size;
  2782  01C9  0875               	movf	I2C1_Transmit@size,w
  2783  01CA  00F6               	movwf	??_I2C1_Transmit
  2784  01CB  0876               	movf	??_I2C1_Transmit,w
  2785  01CC  00A3               	movwf	I2C1_Transmit@result
  2786                           
  2787                           ;PIC_I2C1.c: 95: }
  2788  01CD  29D9               	goto	l1725
  2789  01CE                     l1719:	
  2790                           
  2791                           ;PIC_I2C1.c: 96: else
  2792                           ;PIC_I2C1.c: 97: result = 0;
  2793  01CE  0020               	movlb	0	; select bank0
  2794  01CF  01A3               	clrf	I2C1_Transmit@result
  2795                           
  2796                           ;PIC_I2C1.c: 99: }
  2797                           
  2798                           ;PIC_I2C1.c: 98: break;
  2799  01D0  29D9               	goto	l1725
  2800  01D1                     l1723:	
  2801  01D1  0868               	movf	_I2C1_Config+18,w
  2802                           
  2803                           ; Switch size 1, requested type "space"
  2804                           ; Number of cases is 2, Range of values is 0 to 1
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            7     4 (average)
  2808                           ; direct_byte           10     6 (fixed)
  2809                           ; jumptable            260     6 (fixed)
  2810                           ;	Chosen strategy is simple_byte
  2811  01D2  3A00               	xorlw	0	; case 0
  2812  01D3  1903               	skipnz
  2813  01D4  2956               	goto	l1679
  2814  01D5  3A01               	xorlw	1	; case 1
  2815  01D6  1903               	skipnz
  2816  01D7  29AC               	goto	l247
  2817  01D8  29D9               	goto	l1725
  2818  01D9                     l1725:	
  2819                           
  2820                           ;PIC_I2C1.c: 101: return result;
  2821  01D9  0020               	movlb	0	; select bank0
  2822  01DA  0823               	movf	I2C1_Transmit@result,w
  2823  01DB  0008               	return
  2824  01DC                     __end_of_I2C1_Transmit:	
  2825                           
  2826                           	psect	text13
  2827  044D                     __ptext13:	
  2828 ;; *************** function _I2C_Receive *****************
  2829 ;; Defined at:
  2830 ;;		line 18 in file "PIC_I2C.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  I2Cx            1    wreg     enum E2417
  2833 ;;  address         1    4[BANK0 ] unsigned char 
  2834 ;;  pData           1    5[BANK0 ] PTR unsigned char 
  2835 ;;		 -> MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2836 ;;  size            1    6[BANK0 ] unsigned char 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  I2Cx            1   10[BANK0 ] enum E2417
  2839 ;;  result          1   11[BANK0 ] char 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      char 
  2842 ;; Registers used:
  2843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1
  2849 ;;      Params:         0       3       0
  2850 ;;      Locals:         0       2       0
  2851 ;;      Temps:          0       3       0
  2852 ;;      Totals:         0       8       0
  2853 ;;Total ram usage:        8 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    4
  2856 ;; This function calls:
  2857 ;;		_I2C1_Receive
  2858 ;; This function is called by:
  2859 ;;		_MPU6050_Read_Data
  2860 ;;		_MPU6050_Read_MultiData
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           
  2865                           ;psect for function _I2C_Receive
  2866  044D                     _I2C_Receive:	
  2867                           
  2868                           ;incstack = 0
  2869                           ; Regs used in _I2C_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2870                           ;I2C_Receive@I2Cx stored from wreg
  2871  044D  0020               	movlb	0	; select bank0
  2872  044E  00AA               	movwf	I2C_Receive@I2Cx
  2873                           
  2874                           ;PIC_I2C.c: 20: int8_t result = -1;
  2875  044F  01AB               	clrf	I2C_Receive@result
  2876  0450  03AB               	decf	I2C_Receive@result,f
  2877                           
  2878                           ;PIC_I2C.c: 22: switch(I2Cx)
  2879  0451  2C61               	goto	l1797
  2880  0452                     l1793:	
  2881                           ;PIC_I2C.c: 23: {
  2882                           ;PIC_I2C.c: 24: case I2C1_MODULE:
  2883                           
  2884                           
  2885                           ;PIC_I2C.c: 25: result = I2C1_Receive(address,pData,size);
  2886  0452  0825               	movf	I2C_Receive@pData,w
  2887  0453  00A7               	movwf	??_I2C_Receive
  2888  0454  0827               	movf	??_I2C_Receive,w
  2889  0455  00F4               	movwf	I2C1_Receive@pData
  2890  0456  0826               	movf	I2C_Receive@size,w
  2891  0457  00A8               	movwf	??_I2C_Receive+1
  2892  0458  0828               	movf	??_I2C_Receive+1,w
  2893  0459  00F5               	movwf	I2C1_Receive@size
  2894  045A  0824               	movf	I2C_Receive@address,w
  2895  045B  201C               	fcall	_I2C1_Receive
  2896  045C  0020               	movlb	0	; select bank0
  2897  045D  00A9               	movwf	??_I2C_Receive+2
  2898  045E  0829               	movf	??_I2C_Receive+2,w
  2899  045F  00AB               	movwf	I2C_Receive@result
  2900                           
  2901                           ;PIC_I2C.c: 27: }
  2902                           
  2903                           ;PIC_I2C.c: 26: break;
  2904  0460  2C66               	goto	l1799
  2905  0461                     l1797:	
  2906  0461  082A               	movf	I2C_Receive@I2Cx,w
  2907                           
  2908                           ; Switch size 1, requested type "space"
  2909                           ; Number of cases is 1, Range of values is 0 to 0
  2910                           ; switch strategies available:
  2911                           ; Name         Instructions Cycles
  2912                           ; simple_byte            4     3 (average)
  2913                           ; direct_byte            8     6 (fixed)
  2914                           ; jumptable            260     6 (fixed)
  2915                           ;	Chosen strategy is simple_byte
  2916  0462  3A00               	xorlw	0	; case 0
  2917  0463  1903               	skipnz
  2918  0464  2C52               	goto	l1793
  2919  0465  2C66               	goto	l1799
  2920  0466                     l1799:	
  2921                           
  2922                           ;PIC_I2C.c: 28: return result;
  2923  0466  082B               	movf	I2C_Receive@result,w
  2924  0467  0008               	return
  2925  0468                     __end_of_I2C_Receive:	
  2926                           
  2927                           	psect	text14
  2928  001C                     __ptext14:	
  2929 ;; *************** function _I2C1_Receive *****************
  2930 ;; Defined at:
  2931 ;;		line 104 in file "PIC_I2C1.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  address         1    wreg     unsigned char 
  2934 ;;  pData           1    4[COMMON] PTR unsigned char 
  2935 ;;		 -> MPU6050_Init@addr(1), main@accel_t_gyro(14), 
  2936 ;;  size            1    5[COMMON] unsigned char 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  address         1    0[BANK0 ] unsigned char 
  2939 ;;  i               1    3[BANK0 ] unsigned char 
  2940 ;;  i               1    2[BANK0 ] unsigned char 
  2941 ;;  result          1    1[BANK0 ] char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      char 
  2944 ;; Registers used:
  2945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1
  2951 ;;      Params:         2       0       0
  2952 ;;      Locals:         0       4       0
  2953 ;;      Temps:          2       0       0
  2954 ;;      Totals:         4       4       0
  2955 ;;Total ram usage:        8 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    3
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_I2C_Receive
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function _I2C1_Receive
  2967  001C                     _I2C1_Receive:	
  2968                           
  2969                           ;incstack = 0
  2970                           ; Regs used in _I2C1_Receive: [wreg-fsr1h+status,2+status,0]
  2971                           ;I2C1_Receive@address stored from wreg
  2972  001C  0020               	movlb	0	; select bank0
  2973  001D  00A0               	movwf	I2C1_Receive@address
  2974                           
  2975                           ;PIC_I2C1.c: 106: int8_t result;
  2976                           ;PIC_I2C1.c: 108: switch(I2C1_Config.Mode)
  2977  001E  28AE               	goto	l1773
  2978  001F                     l1731:	
  2979                           ;PIC_I2C1.c: 111: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2980                           
  2981                           ;PIC_I2C1.c: 109: {
  2982                           ;PIC_I2C1.c: 110: case I2C_MODE_MASTER:
  2983                           
  2984  001F  3005               	movlw	5
  2985  0020  0024               	movlb	4	; select bank4
  2986  0021  0514               	andwf	20,w	;volatile
  2987  0022  00F6               	movwf	??_I2C1_Receive
  2988  0023  0816               	movf	22,w	;volatile
  2989  0024  391F               	andlw	31
  2990  0025  0476               	iorwf	??_I2C1_Receive,w
  2991  0026  1D03               	btfss	3,2
  2992  0027  281F               	goto	l1731
  2993                           
  2994                           ;PIC_I2C1.c: 112: SSPCON2bits.SEN = 1;
  2995  0028  1416               	bsf	22,0	;volatile
  2996  0029                     l1733:	
  2997                           ;PIC_I2C1.c: 114: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  2998                           
  2999  0029  3005               	movlw	5
  3000  002A  0514               	andwf	20,w	;volatile
  3001  002B  00F6               	movwf	??_I2C1_Receive
  3002  002C  0816               	movf	22,w	;volatile
  3003  002D  391F               	andlw	31
  3004  002E  0476               	iorwf	??_I2C1_Receive,w
  3005  002F  1D03               	btfss	3,2
  3006  0030  2829               	goto	l1733
  3007                           
  3008                           ;PIC_I2C1.c: 115: SSPBUF = ((address << 1)|0x01);
  3009  0031  1403               	setc
  3010  0032  0020               	movlb	0	; select bank0
  3011  0033  0D20               	rlf	I2C1_Receive@address,w
  3012  0034  0024               	movlb	4	; select bank4
  3013  0035  0091               	movwf	17	;volatile
  3014  0036                     l264:	
  3015                           ;PIC_I2C1.c: 116: while(SSPSTATbits.R_nW);
  3016                           
  3017  0036  1914               	btfsc	20,2	;volatile
  3018  0037  2836               	goto	l264
  3019                           
  3020                           ;PIC_I2C1.c: 118: result = SSPCON2bits.ACKSTAT;
  3021  0038  3000               	movlw	0
  3022  0039  1B16               	btfsc	22,6	;volatile
  3023  003A  3001               	movlw	1
  3024  003B  0020               	movlb	0	; select bank0
  3025  003C  00A1               	movwf	I2C1_Receive@result
  3026                           
  3027                           ;PIC_I2C1.c: 119: if (!result)
  3028  003D  0821               	movf	I2C1_Receive@result,w
  3029  003E  1D03               	btfss	3,2
  3030  003F  287E               	goto	l1757
  3031                           
  3032                           ;PIC_I2C1.c: 120: {
  3033                           ;PIC_I2C1.c: 121: for (uint8_t i=0;i<size;i++)
  3034  0040  01A2               	clrf	I2C1_Receive@i
  3035  0041                     l1755:	
  3036  0041  0875               	movf	I2C1_Receive@size,w
  3037  0042  0222               	subwf	I2C1_Receive@i,w
  3038  0043  1803               	btfsc	3,0
  3039  0044  287E               	goto	l1757
  3040  0045                     l1743:	
  3041                           ;PIC_I2C1.c: 122: {
  3042                           ;PIC_I2C1.c: 123: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3043                           
  3044  0045  3005               	movlw	5
  3045  0046  0024               	movlb	4	; select bank4
  3046  0047  0514               	andwf	20,w	;volatile
  3047  0048  00F6               	movwf	??_I2C1_Receive
  3048  0049  0816               	movf	22,w	;volatile
  3049  004A  391F               	andlw	31
  3050  004B  0476               	iorwf	??_I2C1_Receive,w
  3051  004C  1D03               	btfss	3,2
  3052  004D  2845               	goto	l1743
  3053                           
  3054                           ;PIC_I2C1.c: 124: SSPCON2bits.RCEN = 1;
  3055  004E  1596               	bsf	22,3	;volatile
  3056  004F                     l273:	
  3057                           ;PIC_I2C1.c: 125: while(SSPCON2bits.RCEN);
  3058                           
  3059  004F  1996               	btfsc	22,3	;volatile
  3060  0050  284F               	goto	l273
  3061                           
  3062                           ;PIC_I2C1.c: 126: *(pData+i) = SSPBUF;
  3063  0051  0811               	movf	17,w	;volatile
  3064  0052  00F6               	movwf	??_I2C1_Receive
  3065  0053  0020               	movlb	0	; select bank0
  3066  0054  0822               	movf	I2C1_Receive@i,w
  3067  0055  0774               	addwf	I2C1_Receive@pData,w
  3068  0056  00F7               	movwf	??_I2C1_Receive+1
  3069  0057  0877               	movf	??_I2C1_Receive+1,w
  3070  0058  0086               	movwf	6
  3071  0059  0187               	clrf	7
  3072  005A  0876               	movf	??_I2C1_Receive,w
  3073  005B  0081               	movwf	1
  3074  005C                     l1747:	
  3075                           ;PIC_I2C1.c: 127: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3076                           
  3077  005C  3005               	movlw	5
  3078  005D  0024               	movlb	4	; select bank4
  3079  005E  0514               	andwf	20,w	;volatile
  3080  005F  00F6               	movwf	??_I2C1_Receive
  3081  0060  0816               	movf	22,w	;volatile
  3082  0061  391F               	andlw	31
  3083  0062  0476               	iorwf	??_I2C1_Receive,w
  3084  0063  1D03               	btfss	3,2
  3085  0064  285C               	goto	l1747
  3086                           
  3087                           ;PIC_I2C1.c: 128: if (i == size-1)
  3088  0065  0875               	movf	I2C1_Receive@size,w
  3089  0066  3EFF               	addlw	255
  3090  0067  00F6               	movwf	??_I2C1_Receive
  3091  0068  30FF               	movlw	255
  3092  0069  1803               	skipnc
  3093  006A  3000               	movlw	0
  3094  006B  00F7               	movwf	??_I2C1_Receive+1
  3095  006C  0020               	movlb	0	; select bank0
  3096  006D  0822               	movf	I2C1_Receive@i,w
  3097  006E  0676               	xorwf	??_I2C1_Receive,w
  3098  006F  0477               	iorwf	??_I2C1_Receive+1,w
  3099  0070  1D03               	skipz
  3100  0071  2875               	goto	l279
  3101                           
  3102                           ;PIC_I2C1.c: 129: SSPCON2bits.ACKDT = 1;
  3103  0072  0024               	movlb	4	; select bank4
  3104  0073  1696               	bsf	22,5	;volatile
  3105  0074  2877               	goto	l280
  3106  0075                     l279:	
  3107                           
  3108                           ;PIC_I2C1.c: 130: else
  3109                           ;PIC_I2C1.c: 131: SSPCON2bits.ACKDT = 0;
  3110  0075  0024               	movlb	4	; select bank4
  3111  0076  1296               	bcf	22,5	;volatile
  3112  0077                     l280:	
  3113                           
  3114                           ;PIC_I2C1.c: 132: SSPCON2bits.ACKEN = 1;
  3115  0077  1616               	bsf	22,4	;volatile
  3116  0078  3001               	movlw	1
  3117  0079  00F6               	movwf	??_I2C1_Receive
  3118  007A  0876               	movf	??_I2C1_Receive,w
  3119  007B  0020               	movlb	0	; select bank0
  3120  007C  07A2               	addwf	I2C1_Receive@i,f
  3121  007D  2841               	goto	l1755
  3122  007E                     l1757:	
  3123                           ;PIC_I2C1.c: 133: }
  3124                           ;PIC_I2C1.c: 134: }
  3125                           ;PIC_I2C1.c: 136: while((SSPCON2&0x1F)|(SSPSTAT&0x05));
  3126                           
  3127  007E  3005               	movlw	5
  3128  007F  0024               	movlb	4	; select bank4
  3129  0080  0514               	andwf	20,w	;volatile
  3130  0081  00F6               	movwf	??_I2C1_Receive
  3131  0082  0816               	movf	22,w	;volatile
  3132  0083  391F               	andlw	31
  3133  0084  0476               	iorwf	??_I2C1_Receive,w
  3134  0085  1D03               	btfss	3,2
  3135  0086  287E               	goto	l1757
  3136                           
  3137                           ;PIC_I2C1.c: 137: SSPCON2bits.PEN = 1;
  3138  0087  1516               	bsf	22,2	;volatile
  3139                           
  3140                           ;PIC_I2C1.c: 138: break;
  3141  0088  28B6               	goto	l1775
  3142  0089                     l286:	
  3143                           ;PIC_I2C1.c: 140: case I2C_MODE_SLAVE:
  3144                           
  3145                           
  3146                           ;PIC_I2C1.c: 141: if((SSPSTATbits.S==0)&&(SSPSTATbits.P==1))
  3147  0089  0024               	movlb	4	; select bank4
  3148  008A  1D94               	btfss	20,3	;volatile
  3149  008B  1E14               	btfss	20,4	;volatile
  3150  008C  28B6               	goto	l1775
  3151                           
  3152                           ;PIC_I2C1.c: 142: {
  3153                           ;PIC_I2C1.c: 143: for(uint8_t i = 0;i<size;i++)
  3154  008D  0020               	movlb	0	; select bank0
  3155  008E  01A3               	clrf	I2C1_Receive@i_456
  3156  008F                     l1767:	
  3157  008F  0875               	movf	I2C1_Receive@size,w
  3158  0090  0223               	subwf	I2C1_Receive@i_456,w
  3159  0091  1803               	btfsc	3,0
  3160  0092  28A6               	goto	l1769
  3161                           
  3162                           ;PIC_I2C1.c: 144: pData[i] = I2C1_Config.SlaveReceiveBuff[i];
  3163  0093  0823               	movf	I2C1_Receive@i_456,w
  3164  0094  3E5E               	addlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3165  0095  0086               	movwf	6
  3166  0096  0187               	clrf	7
  3167  0097  0801               	movf	1,w
  3168  0098  00F6               	movwf	??_I2C1_Receive
  3169  0099  0823               	movf	I2C1_Receive@i_456,w
  3170  009A  0774               	addwf	I2C1_Receive@pData,w
  3171  009B  00F7               	movwf	??_I2C1_Receive+1
  3172  009C  0877               	movf	??_I2C1_Receive+1,w
  3173  009D  0086               	movwf	6
  3174  009E  0187               	clrf	7
  3175  009F  0876               	movf	??_I2C1_Receive,w
  3176  00A0  0081               	movwf	1
  3177  00A1  3001               	movlw	1
  3178  00A2  00F6               	movwf	??_I2C1_Receive
  3179  00A3  0876               	movf	??_I2C1_Receive,w
  3180  00A4  07A3               	addwf	I2C1_Receive@i_456,f
  3181  00A5  288F               	goto	l1767
  3182  00A6                     l1769:	
  3183                           
  3184                           ;PIC_I2C1.c: 145: result = I2C1_Config.ReceivePoint - I2C1_Config.SlaveReceiveBuff;
  3185  00A6  305E               	movlw	(low (_I2C1_Config+8))& (0+255)
  3186  00A7  3AFF               	xorlw	255
  3187  00A8  3E01               	addlw	1
  3188  00A9  0767               	addwf	_I2C1_Config+17,w
  3189  00AA  00F6               	movwf	??_I2C1_Receive
  3190  00AB  0876               	movf	??_I2C1_Receive,w
  3191  00AC  00A1               	movwf	I2C1_Receive@result
  3192                           
  3193                           ;PIC_I2C1.c: 148: }
  3194                           
  3195                           ;PIC_I2C1.c: 146: }
  3196                           ;PIC_I2C1.c: 147: break;
  3197  00AD  28B6               	goto	l1775
  3198  00AE                     l1773:	
  3199  00AE  0868               	movf	_I2C1_Config+18,w
  3200                           
  3201                           ; Switch size 1, requested type "space"
  3202                           ; Number of cases is 2, Range of values is 0 to 1
  3203                           ; switch strategies available:
  3204                           ; Name         Instructions Cycles
  3205                           ; simple_byte            7     4 (average)
  3206                           ; direct_byte           10     6 (fixed)
  3207                           ; jumptable            260     6 (fixed)
  3208                           ;	Chosen strategy is simple_byte
  3209  00AF  3A00               	xorlw	0	; case 0
  3210  00B0  1903               	skipnz
  3211  00B1  281F               	goto	l1731
  3212  00B2  3A01               	xorlw	1	; case 1
  3213  00B3  1903               	skipnz
  3214  00B4  2889               	goto	l286
  3215  00B5  28B6               	goto	l1775
  3216  00B6                     l1775:	
  3217                           
  3218                           ;PIC_I2C1.c: 150: return result;
  3219  00B6  0020               	movlb	0	; select bank0
  3220  00B7  0821               	movf	I2C1_Receive@result,w
  3221  00B8  0008               	return
  3222  00B9                     __end_of_I2C1_Receive:	
  3223                           
  3224                           	psect	text15
  3225  0264                     __ptext15:	
  3226 ;; *************** function _I2C1_Init *****************
  3227 ;; Defined at:
  3228 ;;		line 8 in file "PIC_I2C1.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  I2C1_Init_PO    2    0[BANK0 ] PTR FTN()void 
  3231 ;;		 -> I2C_InitPort(1), 
  3232 ;;  address         1    2[BANK0 ] unsigned char 
  3233 ;;  mode            1    3[BANK0 ] enum E2409
  3234 ;;  Speed           1    4[BANK0 ] enum E2413
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1
  3246 ;;      Params:         0       5       0
  3247 ;;      Locals:         0       0       0
  3248 ;;      Temps:          1       0       0
  3249 ;;      Totals:         1       5       0
  3250 ;;Total ram usage:        6 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    4
  3253 ;; This function calls:
  3254 ;;		_I2C_InitPort
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _I2C1_Init
  3262  0264                     _I2C1_Init:	
  3263                           
  3264                           ;PIC_I2C1.c: 10: I2C1_Init_PORT();
  3265                           
  3266                           ;incstack = 0
  3267                           ; Regs used in _I2C1_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3268  0264  0020               	movlb	0	; select bank0
  3269  0265  0821               	movf	I2C1_Init@I2C1_Init_PORT+1,w
  3270  0266  008A               	movwf	10
  3271  0267  0820               	movf	I2C1_Init@I2C1_Init_PORT,w
  3272  0268  000A               	callw
  3273  0269  3182               	pagesel	$
  3274                           
  3275                           ;PIC_I2C1.c: 11: I2C1_Config.Mode = mode;
  3276  026A  0020               	movlb	0	; select bank0
  3277  026B  0823               	movf	I2C1_Init@mode,w
  3278  026C  00F5               	movwf	??_I2C1_Init
  3279  026D  0875               	movf	??_I2C1_Init,w
  3280  026E  00E8               	movwf	_I2C1_Config+18
  3281                           
  3282                           ;PIC_I2C1.c: 13: switch(mode)
  3283  026F  2AA7               	goto	l1885
  3284  0270                     l209:	
  3285                           ;PIC_I2C1.c: 14: {
  3286                           ;PIC_I2C1.c: 15: case I2C_MODE_MASTER:
  3287                           
  3288                           
  3289                           ;PIC_I2C1.c: 16: SSPCON1 |= (0x08<<0);
  3290  0270  0024               	movlb	4	; select bank4
  3291  0271  1595               	bsf	21,3	;volatile
  3292                           
  3293                           ;PIC_I2C1.c: 17: if(Speed==I2C_SPEED_STANDARD)
  3294  0272  0020               	movlb	0	; select bank0
  3295  0273  0824               	movf	I2C1_Init@Speed,w
  3296  0274  1D03               	btfss	3,2
  3297  0275  2A7A               	goto	l1859
  3298                           
  3299                           ;PIC_I2C1.c: 18: {
  3300                           ;PIC_I2C1.c: 19: SSPSTAT |= (1<<7);
  3301  0276  0024               	movlb	4	; select bank4
  3302  0277  1794               	bsf	20,7	;volatile
  3303                           
  3304                           ;PIC_I2C1.c: 20: SSPADD = 0x4F;
  3305  0278  304F               	movlw	79
  3306  0279  2A84               	goto	L1
  3307  027A                     l1859:	
  3308                           ;PIC_I2C1.c: 21: }
  3309                           
  3310                           
  3311                           ;PIC_I2C1.c: 22: else if(Speed==I2C_SPEED_HIGH)
  3312  027A  0020               	movlb	0	; select bank0
  3313  027B  0324               	decf	I2C1_Init@Speed,w
  3314  027C  1D03               	btfss	3,2
  3315  027D  2A85               	goto	l1865
  3316                           
  3317                           ;PIC_I2C1.c: 23: {
  3318                           ;PIC_I2C1.c: 24: SSPSTAT &= ~(1<<7);
  3319  027E  307F               	movlw	127
  3320  027F  00F5               	movwf	??_I2C1_Init
  3321  0280  0875               	movf	??_I2C1_Init,w
  3322  0281  0024               	movlb	4	; select bank4
  3323  0282  0594               	andwf	20,f	;volatile
  3324                           
  3325                           ;PIC_I2C1.c: 25: SSPADD = 0x13;
  3326  0283  3013               	movlw	19
  3327  0284                     L1:	
  3328  0284  0092               	movwf	18	;volatile
  3329  0285                     l1865:	
  3330                           
  3331                           ;PIC_I2C1.c: 26: }
  3332                           ;PIC_I2C1.c: 27: SSPCON1bits.SSPEN = 1;
  3333  0285  0024               	movlb	4	; select bank4
  3334  0286  2AA5               	goto	l1881
  3335  0287                     l1867:	
  3336                           ;PIC_I2C1.c: 30: case I2C_MODE_SLAVE:
  3337                           
  3338                           ;PIC_I2C1.c: 28: break;
  3339                           
  3340                           
  3341                           ;PIC_I2C1.c: 31: SSPSTAT = 0x00;
  3342  0287  0024               	movlb	4	; select bank4
  3343  0288  0194               	clrf	20	;volatile
  3344                           
  3345                           ;PIC_I2C1.c: 32: if(Speed==I2C_SPEED_STANDARD)
  3346  0289  0020               	movlb	0	; select bank0
  3347  028A  0824               	movf	I2C1_Init@Speed,w
  3348  028B  1D03               	btfss	3,2
  3349  028C  2A90               	goto	l1873
  3350                           
  3351                           ;PIC_I2C1.c: 33: SSPSTAT |= (1<<7);
  3352  028D  0024               	movlb	4	; select bank4
  3353  028E  1794               	bsf	20,7	;volatile
  3354  028F  2A99               	goto	l216
  3355  0290                     l1873:	
  3356                           
  3357                           ;PIC_I2C1.c: 34: else if(Speed==I2C_SPEED_HIGH)
  3358  0290  0020               	movlb	0	; select bank0
  3359  0291  0324               	decf	I2C1_Init@Speed,w
  3360  0292  1D03               	btfss	3,2
  3361  0293  2A99               	goto	l216
  3362                           
  3363                           ;PIC_I2C1.c: 35: SSPSTAT &= ~(1<<7);
  3364  0294  307F               	movlw	127
  3365  0295  00F5               	movwf	??_I2C1_Init
  3366  0296  0875               	movf	??_I2C1_Init,w
  3367  0297  0024               	movlb	4	; select bank4
  3368  0298  0594               	andwf	20,f	;volatile
  3369  0299                     l216:	
  3370                           
  3371                           ;PIC_I2C1.c: 37: SSPCON1 |= (0x06<<0);
  3372  0299  3006               	movlw	6
  3373  029A  00F5               	movwf	??_I2C1_Init
  3374  029B  0875               	movf	??_I2C1_Init,w
  3375  029C  0024               	movlb	4	; select bank4
  3376  029D  0495               	iorwf	21,f	;volatile
  3377                           
  3378                           ;PIC_I2C1.c: 38: SSPCON2bits.SEN= 1;
  3379  029E  1416               	bsf	22,0	;volatile
  3380                           
  3381                           ;PIC_I2C1.c: 39: SSPADD = address << 1;
  3382  029F  0020               	movlb	0	; select bank0
  3383  02A0  3522               	lslf	I2C1_Init@address,w
  3384  02A1  0024               	movlb	4	; select bank4
  3385  02A2  0092               	movwf	18	;volatile
  3386                           
  3387                           ;PIC_I2C1.c: 40: SSPMSK = 0xFE;
  3388  02A3  30FE               	movlw	254
  3389  02A4  0093               	movwf	19	;volatile
  3390  02A5                     l1881:	
  3391                           
  3392                           ;PIC_I2C1.c: 41: SSPCON1bits.SSPEN = 1;
  3393  02A5  1695               	bsf	21,5	;volatile
  3394                           
  3395                           ;PIC_I2C1.c: 43: }
  3396                           
  3397                           ;PIC_I2C1.c: 42: break;
  3398  02A6  2AB0               	goto	l213
  3399  02A7                     l1885:	
  3400  02A7  0020               	movlb	0	; select bank0
  3401  02A8  0823               	movf	I2C1_Init@mode,w
  3402                           
  3403                           ; Switch size 1, requested type "space"
  3404                           ; Number of cases is 2, Range of values is 0 to 1
  3405                           ; switch strategies available:
  3406                           ; Name         Instructions Cycles
  3407                           ; simple_byte            7     4 (average)
  3408                           ; direct_byte           10     6 (fixed)
  3409                           ; jumptable            260     6 (fixed)
  3410                           ;	Chosen strategy is simple_byte
  3411  02A9  3A00               	xorlw	0	; case 0
  3412  02AA  1903               	skipnz
  3413  02AB  2A70               	goto	l209
  3414  02AC  3A01               	xorlw	1	; case 1
  3415  02AD  1903               	skipnz
  3416  02AE  2A87               	goto	l1867
  3417  02AF  2AB0               	goto	l213
  3418  02B0                     l213:	
  3419                           
  3420                           ;PIC_I2C1.c: 44: SSP1IE = 1;
  3421  02B0  0021               	movlb	1	; select bank1
  3422  02B1  1591               	bsf	17,3	;volatile
  3423                           
  3424                           ;PIC_I2C1.c: 45: BCL1IE = 1;
  3425  02B2  1592               	bsf	18,3	;volatile
  3426                           
  3427                           ;PIC_I2C1.c: 46: SSP1IF = 0;
  3428  02B3  0020               	movlb	0	; select bank0
  3429  02B4  1191               	bcf	17,3	;volatile
  3430                           
  3431                           ;PIC_I2C1.c: 47: BCL1IF = 0;
  3432  02B5  1192               	bcf	18,3	;volatile
  3433                           
  3434                           ;PIC_I2C1.c: 49: PEIE = 1;
  3435  02B6  170B               	bsf	11,6	;volatile
  3436                           
  3437                           ;PIC_I2C1.c: 50: GIE = 1;
  3438  02B7  178B               	bsf	11,7	;volatile
  3439  02B8  0008               	return
  3440  02B9                     __end_of_I2C1_Init:	
  3441                           
  3442                           	psect	text16
  3443  049F                     __ptext16:	
  3444 ;; *************** function _I2C_InitPort *****************
  3445 ;; Defined at:
  3446 ;;		line 64 in file "main.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1
  3460 ;;      Params:         0       0       0
  3461 ;;      Locals:         0       0       0
  3462 ;;      Temps:          1       0       0
  3463 ;;      Totals:         1       0       0
  3464 ;;Total ram usage:        1 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    3
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;;		_I2C1_Init
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           
  3476                           ;psect for function _I2C_InitPort
  3477  049F                     _I2C_InitPort:	
  3478                           
  3479                           ;main.c: 66: TRISA |= (1<<1);
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in _I2C_InitPort: [wreg+status,2+status,0]
  3483  049F  0021               	movlb	1	; select bank1
  3484  04A0  148C               	bsf	12,1	;volatile
  3485                           
  3486                           ;main.c: 67: TRISA |= (1<<2);
  3487  04A1  150C               	bsf	12,2	;volatile
  3488                           
  3489                           ;main.c: 69: ANSELA &= ~(1<<1);
  3490  04A2  30FD               	movlw	253
  3491  04A3  00F4               	movwf	??_I2C_InitPort
  3492  04A4  0874               	movf	??_I2C_InitPort,w
  3493  04A5  0023               	movlb	3	; select bank3
  3494  04A6  058C               	andwf	12,f	;volatile
  3495                           
  3496                           ;main.c: 70: ANSELA &= ~(1<<2);
  3497  04A7  30FB               	movlw	251
  3498  04A8  00F4               	movwf	??_I2C_InitPort
  3499  04A9  0874               	movf	??_I2C_InitPort,w
  3500  04AA  058C               	andwf	12,f	;volatile
  3501  04AB  0008               	return
  3502  04AC                     __end_of_I2C_InitPort:	
  3503                           
  3504                           	psect	text17
  3505  04AC                     __ptext17:	
  3506 ;; *************** function _Basic_Init *****************
  3507 ;; Defined at:
  3508 ;;		line 41 in file "main.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1
  3522 ;;      Params:         0       0       0
  3523 ;;      Locals:         0       0       0
  3524 ;;      Temps:          0       0       0
  3525 ;;      Totals:         0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    3
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function _Basic_Init
  3538  04AC                     _Basic_Init:	
  3539                           
  3540                           ;main.c: 43: OSCCON = 0xF0;
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _Basic_Init: [wreg+status,2]
  3544  04AC  30F0               	movlw	240
  3545  04AD  0021               	movlb	1	; select bank1
  3546  04AE  0099               	movwf	25	;volatile
  3547                           
  3548                           ;main.c: 47: TRISA = 0x00;
  3549  04AF  018C               	clrf	12	;volatile
  3550                           
  3551                           ;main.c: 48: ANSELA = 0x00;
  3552  04B0  0023               	movlb	3	; select bank3
  3553  04B1  018C               	clrf	12	;volatile
  3554                           
  3555                           ;main.c: 49: WPUA = 0x00;
  3556  04B2  0024               	movlb	4	; select bank4
  3557  04B3  018C               	clrf	12	;volatile
  3558                           
  3559                           ;main.c: 52: APFCON = 0x00;
  3560  04B4  0022               	movlb	2	; select bank2
  3561  04B5  019D               	clrf	29	;volatile
  3562                           
  3563                           ;main.c: 54: PORTA = 0x00;
  3564  04B6  0020               	movlb	0	; select bank0
  3565  04B7  018C               	clrf	12	;volatile
  3566  04B8  0008               	return
  3567  04B9                     __end_of_Basic_Init:	
  3568                           
  3569                           	psect	intentry
  3570  0004                     __pintentry:	
  3571 ;; *************** function _Handle *****************
  3572 ;; Defined at:
  3573 ;;		line 35 in file "main.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1
  3587 ;;      Params:         0       0       0
  3588 ;;      Locals:         0       0       0
  3589 ;;      Temps:          1       0       0
  3590 ;;      Totals:         1       0       0
  3591 ;;Total ram usage:        1 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    2
  3594 ;; This function calls:
  3595 ;;		_I2C_Interrupt
  3596 ;;		_UART_Interrupt
  3597 ;; This function is called by:
  3598 ;;		Interrupt level 1
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602  0004                     _Handle:	
  3603                           
  3604                           ;incstack = 0
  3605  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3606                           
  3607                           ; Regs used in _Handle: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3608  0005  3180               	pagesel	$
  3609  0006  0020               	movlb	0	; select bank0
  3610  0007  087F               	movf	127,w
  3611  0008  00F3               	movwf	??_Handle
  3612                           
  3613                           ;main.c: 37: UART_Interrupt();
  3614  0009  237A               	fcall	_UART_Interrupt
  3615                           
  3616                           ;main.c: 38: I2C_Interrupt();
  3617  000A  24D6               	fcall	_I2C_Interrupt
  3618  000B  0873               	movf	??_Handle,w
  3619  000C  0020               	movlb	0	; select bank0
  3620  000D  00FF               	movwf	127
  3621  000E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3622  000F  0009               	retfie
  3623  0010                     __end_of_Handle:	
  3624                           
  3625                           	psect	text19
  3626  037A                     __ptext19:	
  3627 ;; *************** function _UART_Interrupt *****************
  3628 ;; Defined at:
  3629 ;;		line 107 in file "PIC_UART.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  x               1    2[COMMON] unsigned char 
  3634 ;;  dt              1    1[COMMON] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1
  3644 ;;      Params:         0       0       0
  3645 ;;      Locals:         2       0       0
  3646 ;;      Temps:          1       0       0
  3647 ;;      Totals:         3       0       0
  3648 ;;Total ram usage:        3 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_Handle
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _UART_Interrupt
  3659  037A                     _UART_Interrupt:	
  3660                           
  3661                           ;PIC_UART.c: 109: uint8_t x;
  3662                           ;PIC_UART.c: 110: uint8_t dt;
  3663                           ;PIC_UART.c: 112: if (RCIF == 1)
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3667  037A  0020               	movlb	0	; select bank0
  3668  037B  1E91               	btfss	17,5	;volatile
  3669  037C  0008               	return
  3670                           
  3671                           ;PIC_UART.c: 113: {
  3672                           ;PIC_UART.c: 114: dt = RCREG;
  3673  037D  0023               	movlb	3	; select bank3
  3674  037E  0819               	movf	25,w	;volatile
  3675  037F  00F0               	movwf	??_UART_Interrupt
  3676  0380  0870               	movf	??_UART_Interrupt,w
  3677  0381  00F1               	movwf	UART_Interrupt@dt
  3678                           
  3679                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 8;
  3680  0382  0878               	movf	_UART_Buffer_outptr,w
  3681  0383  3E01               	addlw	1
  3682  0384  3907               	andlw	7
  3683  0385  00F0               	movwf	??_UART_Interrupt
  3684  0386  0870               	movf	??_UART_Interrupt,w
  3685  0387  00F2               	movwf	UART_Interrupt@x
  3686                           
  3687                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  3688  0388  0872               	movf	UART_Interrupt@x,w
  3689  0389  0679               	xorwf	_UART_Buffer_inptr,w
  3690  038A  1903               	skipnz
  3691  038B  2B98               	goto	i1l1607
  3692                           
  3693                           ;PIC_UART.c: 117: {
  3694                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  3695  038C  0871               	movf	UART_Interrupt@dt,w
  3696  038D  00F0               	movwf	??_UART_Interrupt
  3697  038E  0878               	movf	_UART_Buffer_outptr,w
  3698  038F  3E4E               	addlw	(low (_UART_Buffer| 0))& (0+255)
  3699  0390  0086               	movwf	6
  3700  0391  0187               	clrf	7
  3701  0392  0870               	movf	??_UART_Interrupt,w
  3702  0393  0081               	movwf	1
  3703                           
  3704                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  3705  0394  0872               	movf	UART_Interrupt@x,w
  3706  0395  00F0               	movwf	??_UART_Interrupt
  3707  0396  0870               	movf	??_UART_Interrupt,w
  3708  0397  00F8               	movwf	_UART_Buffer_outptr
  3709  0398                     i1l1607:	
  3710                           
  3711                           ;PIC_UART.c: 120: }
  3712                           ;PIC_UART.c: 122: if (OERR == 1)
  3713  0398  1C9D               	btfss	29,1	;volatile
  3714  0399  2B9E               	goto	i1l129
  3715                           
  3716                           ;PIC_UART.c: 123: {
  3717                           ;PIC_UART.c: 124: CREN = 0;
  3718  039A  121D               	bcf	29,4	;volatile
  3719  039B                     i1l130:	
  3720                           ;PIC_UART.c: 125: while (OERR);
  3721                           
  3722  039B  189D               	btfsc	29,1	;volatile
  3723  039C  2B9B               	goto	i1l130
  3724                           
  3725                           ;PIC_UART.c: 126: CREN = 1;
  3726  039D  161D               	bsf	29,4	;volatile
  3727  039E                     i1l129:	
  3728                           
  3729                           ;PIC_UART.c: 127: }
  3730                           ;PIC_UART.c: 128: RCIF = 0;
  3731  039E  0020               	movlb	0	; select bank0
  3732  039F  1291               	bcf	17,5	;volatile
  3733  03A0  0008               	return
  3734  03A1                     __end_of_UART_Interrupt:	
  3735                           
  3736                           	psect	text20
  3737  04D6                     __ptext20:	
  3738 ;; *************** function _I2C_Interrupt *****************
  3739 ;; Defined at:
  3740 ;;		line 31 in file "PIC_I2C.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1
  3754 ;;      Params:         0       0       0
  3755 ;;      Locals:         0       0       0
  3756 ;;      Temps:          0       0       0
  3757 ;;      Totals:         0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    1
  3761 ;; This function calls:
  3762 ;;		_I2C1_Interrupt
  3763 ;; This function is called by:
  3764 ;;		_Handle
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           
  3769                           ;psect for function _I2C_Interrupt
  3770  04D6                     _I2C_Interrupt:	
  3771                           
  3772                           ;PIC_I2C.c: 33: I2C1_Interrupt();
  3773                           
  3774                           ;incstack = 0
  3775                           ; Regs used in _I2C_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3776  04D6  22B9               	fcall	_I2C1_Interrupt
  3777  04D7  0008               	return
  3778  04D8                     __end_of_I2C_Interrupt:	
  3779                           
  3780                           	psect	text21
  3781  02B9                     __ptext21:	
  3782 ;; *************** function _I2C1_Interrupt *****************
  3783 ;; Defined at:
  3784 ;;		line 153 in file "PIC_I2C1.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1
  3798 ;;      Params:         0       0       0
  3799 ;;      Locals:         0       0       0
  3800 ;;      Temps:          1       0       0
  3801 ;;      Totals:         1       0       0
  3802 ;;Total ram usage:        1 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_I2C_Interrupt
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _I2C1_Interrupt
  3813  02B9                     _I2C1_Interrupt:	
  3814                           
  3815                           ;PIC_I2C1.c: 155: if(SSP1IF&&SSP1IE)
  3816                           
  3817                           ;incstack = 0
  3818                           ; Regs used in _I2C1_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  3819  02B9  0020               	movlb	0	; select bank0
  3820  02BA  1D91               	btfss	17,3	;volatile
  3821  02BB  2B05               	goto	i1l1007
  3822  02BC  0021               	movlb	1	; select bank1
  3823  02BD  1D91               	btfss	17,3	;volatile
  3824  02BE  2B05               	goto	i1l1007
  3825                           
  3826                           ;PIC_I2C1.c: 156: {
  3827                           ;PIC_I2C1.c: 157: if(SSPSTATbits.D_nA)
  3828  02BF  0024               	movlb	4	; select bank4
  3829  02C0  1E94               	btfss	20,5	;volatile
  3830  02C1  2ADC               	goto	i1l295
  3831                           
  3832                           ;PIC_I2C1.c: 158: {
  3833                           ;PIC_I2C1.c: 159: if(SSPSTATbits.R_nW)
  3834  02C2  1D14               	btfss	20,2	;volatile
  3835  02C3  2ACF               	goto	i1l983
  3836                           
  3837                           ;PIC_I2C1.c: 160: {
  3838                           ;PIC_I2C1.c: 161: if(!SSPCON2bits.ACKSTAT)
  3839  02C4  1B16               	btfsc	22,6	;volatile
  3840  02C5  2B03               	goto	i1l1005
  3841  02C6                     i1l975:	
  3842                           ;PIC_I2C1.c: 162: {
  3843                           ;PIC_I2C1.c: 163: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3844                           
  3845  02C6  0814               	movf	20,w	;volatile
  3846  02C7  3901               	andlw	1
  3847  02C8  00F0               	movwf	??_I2C1_Interrupt
  3848  02C9  0E15               	swapf	21,w	;volatile
  3849  02CA  3901               	andlw	1
  3850  02CB  0470               	iorwf	??_I2C1_Interrupt,w
  3851  02CC  1D03               	btfss	3,2
  3852  02CD  2AC6               	goto	i1l975
  3853  02CE  2AEF               	goto	L2
  3854  02CF                     i1l983:	
  3855                           ;PIC_I2C1.c: 167: }
  3856                           ;PIC_I2C1.c: 168: }
  3857                           
  3858                           ;PIC_I2C1.c: 166: SSPCON1bits.CKP = 1;
  3859                           
  3860                           ;PIC_I2C1.c: 165: I2C1_Config.TransmitPoint++;
  3861                           
  3862                           ;PIC_I2C1.c: 164: SSPBUF = *I2C1_Config.TransmitPoint;
  3863                           
  3864                           
  3865                           ;PIC_I2C1.c: 169: else
  3866                           ;PIC_I2C1.c: 170: {
  3867                           ;PIC_I2C1.c: 171: *I2C1_Config.ReceivePoint = SSPBUF;
  3868  02CF  0811               	movf	17,w	;volatile
  3869  02D0  00F0               	movwf	??_I2C1_Interrupt
  3870  02D1  0020               	movlb	0	; select bank0
  3871  02D2  0867               	movf	low ((_I2C1_Config| 0+17)),w
  3872  02D3  0086               	movwf	6
  3873  02D4  0187               	clrf	7
  3874  02D5  0870               	movf	??_I2C1_Interrupt,w
  3875  02D6  0081               	movwf	1
  3876                           
  3877                           ;PIC_I2C1.c: 172: I2C1_Config.ReceivePoint++;
  3878  02D7  3001               	movlw	1
  3879  02D8  00F0               	movwf	??_I2C1_Interrupt
  3880  02D9  0870               	movf	??_I2C1_Interrupt,w
  3881  02DA  07E7               	addwf	low ((_I2C1_Config| 0+17)),f
  3882  02DB  2B01               	goto	i1l1003
  3883  02DC                     i1l295:	
  3884                           ;PIC_I2C1.c: 174: }
  3885                           ;PIC_I2C1.c: 175: }
  3886                           
  3887                           ;PIC_I2C1.c: 173: SSPCON1bits.CKP = 1;
  3888                           
  3889                           
  3890                           ;PIC_I2C1.c: 176: else if(!SSPSTATbits.D_nA)
  3891  02DC  1A94               	btfsc	20,5	;volatile
  3892  02DD  2B03               	goto	i1l1005
  3893                           
  3894                           ;PIC_I2C1.c: 177: {
  3895                           ;PIC_I2C1.c: 178: SSPBUF;
  3896  02DE  0811               	movf	17,w	;volatile
  3897                           
  3898                           ;PIC_I2C1.c: 180: if(SSPSTATbits.R_nW)
  3899  02DF  1D14               	btfss	20,2	;volatile
  3900  02E0  2AFC               	goto	i1l1001
  3901                           
  3902                           ;PIC_I2C1.c: 181: {
  3903                           ;PIC_I2C1.c: 182: I2C1_Config.TransmitPoint = I2C1_Config.SlaveTransmitBuff;
  3904  02E1  3056               	movlw	(low (_I2C1_Config| 0))& (0+255)
  3905  02E2  00F0               	movwf	??_I2C1_Interrupt
  3906  02E3  0870               	movf	??_I2C1_Interrupt,w
  3907  02E4  0020               	movlb	0	; select bank0
  3908  02E5  00E6               	movwf	low ((_I2C1_Config| 0+16))
  3909  02E6                     i1l995:	
  3910                           ;PIC_I2C1.c: 184: while((SSPCON1bits.CKP)|(SSPSTATbits.BF));
  3911                           
  3912  02E6  0024               	movlb	4	; select bank4
  3913  02E7  0814               	movf	20,w	;volatile
  3914  02E8  3901               	andlw	1
  3915  02E9  00F0               	movwf	??_I2C1_Interrupt
  3916  02EA  0E15               	swapf	21,w	;volatile
  3917  02EB  3901               	andlw	1
  3918  02EC  0470               	iorwf	??_I2C1_Interrupt,w
  3919  02ED  1D03               	btfss	3,2
  3920  02EE  2AE6               	goto	i1l995
  3921  02EF                     L2:	
  3922                           
  3923                           ;PIC_I2C1.c: 185: SSPBUF = *I2C1_Config.TransmitPoint;
  3924  02EF  0020               	movlb	0	; select bank0
  3925  02F0  0866               	movf	low ((_I2C1_Config| 0+16)),w
  3926  02F1  0086               	movwf	6
  3927  02F2  0187               	clrf	7
  3928  02F3  0801               	movf	1,w
  3929  02F4  0024               	movlb	4	; select bank4
  3930  02F5  0091               	movwf	17	;volatile
  3931                           
  3932                           ;PIC_I2C1.c: 186: I2C1_Config.TransmitPoint++;
  3933  02F6  3001               	movlw	1
  3934  02F7  00F0               	movwf	??_I2C1_Interrupt
  3935  02F8  0870               	movf	??_I2C1_Interrupt,w
  3936  02F9  0020               	movlb	0	; select bank0
  3937  02FA  07E6               	addwf	low ((_I2C1_Config| 0+16)),f
  3938                           
  3939                           ;PIC_I2C1.c: 187: }
  3940  02FB  2B01               	goto	i1l1003
  3941  02FC                     i1l1001:	
  3942                           
  3943                           ;PIC_I2C1.c: 188: else
  3944                           ;PIC_I2C1.c: 189: {
  3945                           ;PIC_I2C1.c: 190: I2C1_Config.ReceivePoint = I2C1_Config.SlaveReceiveBuff;
  3946  02FC  305E               	movlw	(low ((_I2C1_Config| 0+8)))& (0+255)
  3947  02FD  00F0               	movwf	??_I2C1_Interrupt
  3948  02FE  0870               	movf	??_I2C1_Interrupt,w
  3949  02FF  0020               	movlb	0	; select bank0
  3950  0300  00E7               	movwf	low ((_I2C1_Config| 0+17))
  3951  0301                     i1l1003:	
  3952                           
  3953                           ;PIC_I2C1.c: 191: }
  3954                           ;PIC_I2C1.c: 192: SSPCON1bits.CKP = 1;
  3955  0301  0024               	movlb	4	; select bank4
  3956  0302  1615               	bsf	21,4	;volatile
  3957  0303                     i1l1005:	
  3958                           
  3959                           ;PIC_I2C1.c: 193: }
  3960                           ;PIC_I2C1.c: 194: SSP1IF = 0;
  3961  0303  0020               	movlb	0	; select bank0
  3962  0304  1191               	bcf	17,3	;volatile
  3963  0305                     i1l1007:	
  3964                           
  3965                           ;PIC_I2C1.c: 195: }
  3966                           ;PIC_I2C1.c: 197: if(BCL1IE&&BCL1IF)
  3967  0305  0021               	movlb	1	; select bank1
  3968  0306  1D92               	btfss	18,3	;volatile
  3969  0307  0008               	return
  3970  0308  0020               	movlb	0	; select bank0
  3971  0309  1D92               	btfss	18,3	;volatile
  3972  030A  0008               	return
  3973                           
  3974                           ;PIC_I2C1.c: 198: BCL1IF = 0;
  3975  030B  1192               	bcf	18,3	;volatile
  3976  030C  0008               	return
  3977  030D                     __end_of_I2C1_Interrupt:	
  3978  007E                     btemp	set	126	;btemp
  3979  007E                     int$flags	set	126
  3980  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    24
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     46      73
    BANK1            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    I2C1_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C1_Transmit@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@pData(BANK0[1]), MPU6050_Write_Data@reg(BANK0[1]), 

    I2C1_Init@I2C1_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_InitPort(), 

    I2C_Receive@pData	PTR unsigned char  size(1) Largest target is 14
		 -> MPU6050_Init@addr(BANK0[1]), main@accel_t_gyro(BANK0[14]), 

    I2C_Transmit@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Read_MultiData@reg(BANK0[1]), MPU6050_Read_Data@reg(BANK0[1]), MPU6050_Write_Data@pData(BANK0[1]), MPU6050_Write_Data@reg(BANK0[1]), 

    S273$ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.ReceivePoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveReceiveBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    S273$TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config(BANK0[19]), 

    I2C1_Config.TransmitPoint	PTR unsigned char  size(1) Largest target is 21
		 -> I2C1_Config.SlaveTransmitBuff(BANK0[8]), I2C1_Config(BANK0[19]), 

    MPU6050_Read_MultiData@pData	PTR unsigned char  size(1) Largest target is 14
		 -> main@accel_t_gyro(BANK0[14]), 

    MPU6050_Read_Data@pData	PTR unsigned char  size(1) Largest target is 1
		 -> MPU6050_Init@addr(BANK0[1]), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_InitPort(), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _printf->___lwdiv
    _putch->_UART_Transmit
    _UART_Init->_UART_InitPort
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive
    _I2C1_Init->_I2C_InitPort

Critical Paths under _Handle in COMMON

    _Handle->_UART_Interrupt
    _I2C_Interrupt->_I2C1_Interrupt

Critical Paths under _main in BANK0

    _main->_MPU6050_Init
    _main->_printf
    _printf->___lwdiv
    _MPU6050_Read_MultiData->_I2C_Receive
    _MPU6050_Read_MultiData->_I2C_Transmit
    _MPU6050_Init->_MPU6050_Read_Data
    _MPU6050_Init->_MPU6050_Write_Data
    _MPU6050_Write_Data->_I2C_Transmit
    _MPU6050_Read_Data->_I2C_Receive
    _MPU6050_Read_Data->_I2C_Transmit
    _I2C_Transmit->_I2C1_Transmit
    _I2C_Receive->_I2C1_Receive

Critical Paths under _Handle in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handle in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   11425
                                             23 BANK0     23    23      0
                         _Basic_Init
                          _I2C1_Init
                       _MPU6050_Init
             _MPU6050_Read_MultiData
                          _UART_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              27    19      8    1014
                                              4 BANK0     19    11      8
                            ___lwdiv
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              5 COMMON     1     1      0
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (3) _UART_Transmit                                        1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     395
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     194
                                              5 COMMON     3     0      3
                                              0 BANK0      4     4      0
                      _UART_InitPort *
 ---------------------------------------------------------------------------------
 (2) _UART_InitPort                                        1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Read_MultiData                               8     6      2    3198
                                             12 BANK0      8     6      2
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         5     5      0    5126
                                             18 BANK0      5     5      0
                  _MPU6050_Read_Data
                 _MPU6050_Write_Data
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Write_Data                                   6     5      1    1891
                                             12 BANK0      6     5      1
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _MPU6050_Read_Data                                    6     5      1    3114
                                             12 BANK0      6     5      1
                        _I2C_Receive
                       _I2C_Transmit
 ---------------------------------------------------------------------------------
 (2) _I2C_Transmit                                         8     5      3    1700
                                              4 BANK0      8     5      3
                      _I2C1_Transmit
 ---------------------------------------------------------------------------------
 (3) _I2C1_Transmit                                        8     6      2     615
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          8     5      3    1229
                                              4 BANK0      8     5      3
                       _I2C1_Receive
 ---------------------------------------------------------------------------------
 (3) _I2C1_Receive                                         8     6      2     606
                                              4 COMMON     4     2      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Init                                            6     1      5     556
                                              5 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _I2C_InitPort *
 ---------------------------------------------------------------------------------
 (2) _I2C_InitPort                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Handle                                               1     1      0      68
                                              3 COMMON     1     1      0
                      _I2C_Interrupt
                     _UART_Interrupt
 ---------------------------------------------------------------------------------
 (6) _UART_Interrupt                                       3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2C_Interrupt                                        0     0      0       0
                     _I2C1_Interrupt
 ---------------------------------------------------------------------------------
 (7) _I2C1_Interrupt                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _I2C1_Init
     _I2C_InitPort *
   _MPU6050_Init
     _MPU6050_Read_Data
       _I2C_Receive
         _I2C1_Receive
       _I2C_Transmit
         _I2C1_Transmit
     _MPU6050_Write_Data
       _I2C_Transmit
         _I2C1_Transmit
   _MPU6050_Read_MultiData
     _I2C_Receive
       _I2C1_Receive
     _I2C_Transmit
       _I2C1_Transmit
   _UART_Init
     _UART_InitPort *
   _printf
     ___lwdiv
     _putch
       _UART_Transmit

 _Handle (ROOT)
   _I2C_Interrupt
     _I2C1_Interrupt
   _UART_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              60      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2E      49       6       91.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            10      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      53       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Jan 10 14:22:58 2018

                    __CFG_CP$OFF 0000                      _SSPSTATbits 0214                              l108 04C5  
                            l213 02B0                              l216 0299                              l209 0270  
                            l229 016C                              l238 0193                              l247 01AC  
                            l280 0077                              l264 0036                              l273 004F  
                            l337 0152                              l286 0089                              l279 0075  
                            _GIE 005F                     __CFG_CPD$OFF 0000             __size_of_I2C_Receive 001B  
                   __CFG_BORV$LO 0000                              wreg 0009                       _Basic_Init 04AC  
             MPU6050_Init@result 0034                     __CFG_LVP$OFF 0000                             l1701 0178  
                           l1703 017C                             l1705 01A1                             l1731 001F  
                           l1715 01B2                             l1723 01D1                             l1733 0029  
                           l1717 01C9                             l1725 01D9                             l1743 0045  
                           l1719 01CE                             l1681 0160                             l1841 036C  
                           l1833 034E                             l1913 00D8                             l1747 005C  
                           l1755 0041                             l1691 0180                             l1835 035A  
                           l1757 007E                             l1773 00AE                             l1781 0437  
                           l1845 0375                             l1767 008F                             l1775 00B6  
                           l1679 0156                             l1943 0122                             l1935 011E  
                           l1919 00EE                             l1881 02A5                             l1873 0290  
                           l1865 0285                             l1769 00A6                             l1793 0452  
                           l1785 0446                             l1929 00FF                             l1945 00BE  
                           l1867 0287                             l1859 027A                             l1787 044B  
                           l1955 01F2                             l1885 02A7                             l1797 0461  
                           l1799 0466                             STR_1 04B9                             STR_2 0470  
                           _CREN 0CEC                             u1405 0351                             u1505 041F  
                           u1425 035B                             u1435 0365                             u1445 036D  
                           u1545 0114                             _PEIE 005E                             _RCIE 048D  
                           _RCIF 008D                             _OERR 0CE9                             _SPEN 0CEF  
                           _TXIF 008C                             _WPUA 020C                  ??_I2C1_Transmit 0076  
                   __CFG_WRT$OFF 0000            __size_of_I2C_InitPort 000D                             _main 01DC  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E                 ??_I2C1_Interrupt 0070                             start 0010  
                  __CFG_IESO$OFF 0000                    __CFG_MCLRE$ON 0000            __size_of_I2C_Transmit 001B  
                  __CFG_PLLEN$ON 0000                __end_of_I2C1_Init 02B9                            ?_main 0070  
                          _BRG16 0CFB                    __CFG_WDTE$OFF 0000                  __end_of___lwdiv 037A  
                          i1l130 039B                            i1l129 039E                            i1l295 02DC  
                          i1l975 02C6                            i1l983 02CF                            i1l995 02E6  
                          _RCREG 0199                            _RCSTA 019D                            _PORTA 000C  
                          _TRISA 008C                            _TXREG 019A                            _TXSTA 019E  
                 __CFG_FCMEN$OFF 0000               __size_of_UART_Init 0038                     _I2C_InitPort 049F  
              _UART_Buffer_inptr 0079                    ?_MPU6050_Init 0070                            _putch 04D2  
                 __CFG_BOREN$OFF 0000                            pclath 000A                     main@swap_162 003A  
                   main@swap_163 003B                     main@swap_164 003C                     main@swap_165 003D  
                   main@swap_166 003E                     main@swap_167 003F         ??_MPU6050_Read_MultiData 002E  
         __size_of_I2C_Interrupt 0002                            status 0003                            wtemp0 007E  
                   _I2C_Transmit 0432                  __initialization 0011                     __end_of_main 0264  
                         ??_main 0037                I2C_Receive@result 002B                I2C1_Receive@i_456 0023  
              I2C1_Receive@pData 0074                      ?_Basic_Init 0070                   ??_MPU6050_Init 0032  
                         _BCL1IE 0493                           _BCL1IF 0093                           _APFCON 011D  
                         _ANSELA 018C                           ?_putch 0070                           i1l1001 02FC  
                         i1l1003 0301                           i1l1005 0303                           i1l1007 0305  
                         i1l1607 0398                           _OSCCON 0099                           _SPBRGH 019C  
                         _SPBRGL 019B                           _SSP1IE 048B                           _SSP1IF 008B  
                         _SSPADD 0212                           _SSPBUF 0211                           _SSPMSK 0213  
                         _Handle 0004                   __CFG_PWRTE$OFF 0000             MPU6050_Read_Data@reg 0030  
              __end_of_UART_Init 0345                        ??___lwdiv 0020               _UART_Buffer_outptr 0078  
                  _I2C_Interrupt 04D6                           _printf 00B9      __size_of_MPU6050_Write_Data 0025  
        __size_of_UART_Interrupt 0027                 I2C_Transmit@I2Cx 002A            __end_of_UART_InitPort 049F  
                         putch@c 0075                 I2C_Transmit@size 0026          UART_Init@UART_Init_PORT 0075  
        __end_of__initialization 0019  __size_of_MPU6050_Read_MultiData 0026            __end_of_UART_Transmit 04CC  
                 __pcstackCOMMON 0070              __size_of_Basic_Init 000D                    __end_of_putch 04D6  
                 ?_I2C_Interrupt 0070               I2C_Receive@address 0024              I2C1_Transmit@result 0023  
                        ??_putch 0075                       __pbssBANK0 004E                          ?_Handle 0070  
             I2C1_Receive@result 0021                       __pmaintext 01DC             __end_of_MPU6050_Init 0432  
                     __pintentry 0004           _MPU6050_Read_MultiData 03A1                    ??_I2C_Receive 0027  
                        ?_printf 0024                _MPU6050_Read_Data 03EC               ?_MPU6050_Read_Data 002C  
                      _I2C1_Init 0264                          _SSPCON1 0215                          _SSPCON2 0216  
                        _SSPSTAT 0214              ??_MPU6050_Read_Data 002D                __end_of_baudtable 0491  
        MPU6050_Write_Data@pData 002C            __end_of_I2C1_Transmit 01DC                  __size_of_Handle 000C  
                ??_I2C_Interrupt 0071                          ___lwdiv 0345        __end_of_MPU6050_Read_Data 0411  
      MPU6050_Read_MultiData@reg 0033                  __CFG_STVREN$OFF 0000                          __ptext1 00B9  
                        __ptext2 04D2                          __ptext3 04C4                          __ptext4 0345  
                        __ptext5 030D                          __ptext6 0491                          __ptext7 03A1  
                        __ptext8 0411                          __ptext9 03C7                  __size_of_printf 009A  
                 _UART_Interrupt 037A                __end_of_hexpowers 0470                       ?_I2C1_Init 0020  
                   ??_Basic_Init 0074              __end_of_I2C_Receive 0468                          clrloop0 04CD  
           end_of_initialization 0019                 I2C1_Init@address 0022                    ?_I2C1_Receive 0074  
                    _I2C1_Config 0056                I2C_Transmit@pData 0025                          printf@c 0036  
                        printf@f 0024               __end_of_Basic_Init 04B9           __end_of_UART_Interrupt 03A1  
                      _UART_Init 030D          __size_of_I2C1_Interrupt 0054                 __CFG_FOSC$INTOSC 0000  
               MPU6050_Init@addr 0036                 MPU6050_Init@data 0035                   ??_I2C1_Receive 0076  
          __size_of_MPU6050_Init 0021                   __end_of_Handle 0010                 UART_Interrupt@dt 0071  
     __size_of_MPU6050_Read_Data 0025                  ?_UART_Interrupt 0070                       ?_UART_Init 0075  
     __end_of_MPU6050_Write_Data 03EC                      _I2C_Receive 044D                   __end_of_printf 0153  
            start_initialization 0011                      ??_I2C1_Init 0075                 I2C_Receive@pData 0025  
           I2C1_Transmit@address 0020                     _MPU6050_Init 0411                 I2C1_Receive@size 0075  
                       ??_Handle 0073            MPU6050_Write_Data@reg 0030          ?_MPU6050_Read_MultiData 002C  
         __size_of_UART_InitPort 000E          MPU6050_Read_Data@result 0031                         ??_printf 002C  
                    __pbssCOMMON 0078                        ___latbits 0000           __size_of_UART_Transmit 0008  
                  __pcstackBANK0 0020              I2C1_Receive@address 0020                    ?_I2C_InitPort 0070  
             I2C1_Transmit@i_449 0022      MPU6050_Read_MultiData@pData 002C               I2C1_Transmit@pData 0074  
                      _baudtable 0481                    ?_I2C_Transmit 0024   __end_of_MPU6050_Read_MultiData 03C7  
               ___lwdiv@dividend 0076                         ?___lwdiv 0074                      ??_UART_Init 0020  
                 _I2C1_Interrupt 02B9             __end_of_I2C1_Receive 00B9                   ??_I2C_InitPort 0074  
                      _hexpowers 0468                    _UART_InitPort 0491                 ___lwdiv@quotient 0022  
                 __size_of_putch 0004          I2C1_Init@I2C1_Init_PORT 0020                   ??_I2C_Transmit 0027  
                      clear_ram0 04CC                    _UART_Transmit 04C4           __end_of_I2C1_Interrupt 030D  
          __end_of_I2C_Interrupt 04D8                       printf@flag 0030                       printf@prec 0035  
         __size_of_I2C1_Transmit 0089                   ?_UART_InitPort 0070                  UART_Interrupt@x 0072  
                I2C_Receive@I2Cx 002A         MPU6050_Write_Data@result 0031                  I2C_Receive@size 0026  
                 ?_UART_Transmit 0070           MPU6050_Read_Data@pData 002C                 ??_UART_Interrupt 0070  
                ?_I2C1_Interrupt 0070                 __size_of___lwdiv 0035                     ?_I2C_Receive 0024  
     MPU6050_Read_MultiData@size 002D                I2C1_Transmit@size 0075                  ___lwdiv@divisor 0074  
                ___lwdiv@counter 0021                     UART_Init@brg 0077                         __ptext10 03EC  
                       __ptext11 0432                         __ptext20 04D6                         __ptext12 0153  
                       __ptext21 02B9                         __ptext13 044D                         __ptext14 001C  
                       __ptext15 0264                         __ptext16 049F                         __ptext17 04AC  
                       __ptext19 037A               _MPU6050_Write_Data 03C7                    __size_of_main 0088  
            ?_MPU6050_Write_Data 002C                   I2C1_Init@Speed 0024                    _I2C1_Transmit 0153  
           __end_of_I2C_InitPort 04AC            __size_of_I2C1_Receive 009D                         int$flags 007E  
            I2C_Transmit@address 0024                        printf@idx 0031                        printf@val 0033  
                       main@swap 0039     MPU6050_Read_MultiData@result 0032             ??_MPU6050_Write_Data 002D  
           __end_of_I2C_Transmit 044D                  ??_UART_InitPort 0074                         intlevel1 0000  
                ??_UART_Transmit 0074                     _I2C1_Receive 001C                  UART_Transmit@dt 0074  
                 ?_I2C1_Transmit 0074                __CFG_CLKOUTEN$OFF 0000                      _UART_Buffer 004E  
                  I2C1_Init@mode 0023                         printf@ap 0032                    I2C1_Receive@i 0022  
             I2C_Transmit@result 002B                    __pstringtext1 0481                    __pstringtext2 0468  
                  __pstringtext3 04B9                    __pstringtext4 0000                 main@accel_t_gyro 0040  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                   I2C1_Transmit@i 0021  
             __size_of_I2C1_Init 0055  
